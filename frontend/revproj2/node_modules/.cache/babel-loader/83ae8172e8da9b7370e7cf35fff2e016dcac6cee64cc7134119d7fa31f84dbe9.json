{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotiViewerNew.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getTrackers } from \"../../API/Axios\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport PostFeedSmart from \"../PostFeed/PostFeedSmart\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n;\nconst NotiViewerNew = ({\n  userId,\n  goalId,\n  clicked\n}) => {\n  _s();\n  const [trackers, setTrackers] = useState([]);\n  const [datavis, setDatavis] = useState({\n    trackDate: [],\n    burnedCal: [],\n    duration: [],\n    volume: [],\n    carb: [],\n    fat: [],\n    kal: [],\n    protein: [],\n    weight: [],\n    sleep: [],\n    water: []\n  });\n  const [view, setView] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      let trackers = await getTrackers(userId, goalId);\n      setTrackers(trackers);\n    };\n    fetchData();\n  }, [goalId]);\n  useEffect(() => {\n    if (trackers) {\n      const newDatavis = {\n        trackDate: [],\n        burnedCal: [],\n        duration: [],\n        volume: [],\n        carb: [],\n        fat: [],\n        kal: [],\n        protein: [],\n        weight: [],\n        sleep: [],\n        water: []\n      };\n      trackers.forEach(tracker => {\n        newDatavis.trackDate.push(tracker.createdAt);\n        newDatavis.burnedCal.push(tracker.exercise.caloriesBurned);\n        newDatavis.duration.push(tracker.exercise.duration);\n        newDatavis.volume.push(tracker.exercise.volume);\n        newDatavis.carb.push(tracker.nutrition.carb);\n        newDatavis.fat.push(tracker.nutrition.fat);\n        newDatavis.kal.push(tracker.nutrition.kal);\n        newDatavis.protein.push(tracker.nutrition.protein);\n        newDatavis.weight.push(tracker.nutrition.weight);\n        newDatavis.sleep.push(tracker.sleep);\n        newDatavis.water.push(tracker.water);\n      });\n      setDatavis(newDatavis);\n    }\n  }, [trackers]);\n  const charts = datavis.trackDate.length ? Object.keys(datavis).filter(key => key !== \"trackDate\").map(key => {\n    const chartData = {\n      labels: datavis.trackDate,\n      datasets: [{\n        label: key,\n        data: datavis[key],\n        fill: false\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      scales: {\n        x: {\n          type: \"category\"\n        },\n        y: {\n          type: \"linear\"\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 27\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }, this);\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [clicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: charts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }, this), clicked && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setView(true),\n      children: \"Post about your Progress?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }, this), view && /*#__PURE__*/_jsxDEV(PostFeedSmart, {\n      userId: userId,\n      goalId: goalId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n};\n_s(NotiViewerNew, \"uahOhdnN8svb/Guixl7E1vA+n5s=\");\n_c = NotiViewerNew;\nexport default NotiViewerNew;\nvar _c;\n$RefreshReg$(_c, \"NotiViewerNew\");","map":{"version":3,"names":["React","useState","useEffect","getTrackers","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","PostFeedSmart","jsxDEV","_jsxDEV","Fragment","_Fragment","register","NotiViewerNew","userId","goalId","clicked","_s","trackers","setTrackers","datavis","setDatavis","trackDate","burnedCal","duration","volume","carb","fat","kal","protein","weight","sleep","water","view","setView","fetchData","newDatavis","forEach","tracker","push","createdAt","exercise","caloriesBurned","nutrition","charts","length","Object","keys","filter","key","map","chartData","labels","datasets","label","data","fill","chartOptions","responsive","scales","x","type","y","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onClick","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotiViewerNew.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getUserByUsername, usernameifAuthorized, getTrackers } from \"../../API/Axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport PostFeedSmart from \"../PostFeed/PostFeedSmart\";\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\ninterface ViewerProp {\r\n    goalId: number;\r\n    userId: number;\r\n    clicked: boolean;\r\n}\r\n\r\ninterface DataVis {\r\n\t[key:string] : number[] | Date[];\r\n    trackDate: Date[];\r\n    burnedCal: number[];\r\n    duration: number[];\r\n    volume: number[];\r\n    carb: number[];\r\n    fat: number[];\r\n    kal: number[];\r\n    protein: number[];\r\n    weight: number[];\r\n    sleep: number[];\r\n    water: number[];\r\n};\r\n\r\nconst NotiViewerNew: React.FC<ViewerProp> = ({ userId, goalId, clicked }) => {\r\n    const [trackers, setTrackers] = useState<any[]>([]);\r\n    const [datavis, setDatavis] = useState<DataVis>({\r\n        trackDate: [],\r\n        burnedCal: [],\r\n        duration: [],\r\n        volume: [],\r\n        carb: [],\r\n        fat: [],\r\n        kal: [],\r\n        protein: [],\r\n        weight: [],\r\n        sleep: [],\r\n        water: [],\r\n    });\r\n    const [view, setView] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let trackers = await getTrackers(userId, goalId);\r\n            setTrackers(trackers);\r\n        };\r\n        fetchData();\r\n    }, [goalId]);\r\n\r\n    useEffect(() => {\r\n        if (trackers) {\r\n            const newDatavis : DataVis = {\r\n                trackDate: [],\r\n                burnedCal: [],\r\n                duration: [],\r\n                volume: [],\r\n                carb: [],\r\n                fat: [],\r\n                kal: [],\r\n                protein: [],\r\n                weight: [],\r\n                sleep: [],\r\n                water: [],\r\n            };\r\n\r\n            trackers.forEach((tracker: any) => {\r\n                newDatavis.trackDate.push(tracker.createdAt);\r\n                newDatavis.burnedCal.push(tracker.exercise.caloriesBurned);\r\n                newDatavis.duration.push(tracker.exercise.duration);\r\n                newDatavis.volume.push(tracker.exercise.volume);\r\n                newDatavis.carb.push(tracker.nutrition.carb);\r\n                newDatavis.fat.push(tracker.nutrition.fat);\r\n                newDatavis.kal.push(tracker.nutrition.kal);\r\n                newDatavis.protein.push(tracker.nutrition.protein);\r\n                newDatavis.weight.push(tracker.nutrition.weight);\r\n                newDatavis.sleep.push(tracker.sleep);\r\n                newDatavis.water.push(tracker.water);\r\n            });\r\n\r\n            setDatavis(newDatavis);\r\n        }\r\n    }, [trackers]);\r\n\r\n    const charts = datavis.trackDate.length\r\n        ? Object.keys(datavis)\r\n              .filter((key) => key !== \"trackDate\")\r\n              .map((key) => {\r\n                  const chartData = {\r\n                      labels: datavis.trackDate,\r\n                      datasets: [\r\n                          {\r\n                              label: key,\r\n                              data: datavis[key] as number[],\r\n                              fill: false,\r\n                          },\r\n                      ],\r\n                  };\r\n                  const chartOptions = {\r\n                      responsive: true,\r\n                      scales: {\r\n                          x: { type: \"category\" as const },\r\n                          y: { type: \"linear\" as const },\r\n                      },\r\n                  };\r\n                  return (\r\n                      <div key={key}>\r\n                          <h3>{key}</h3>\r\n                          <Line data={chartData} options={chartOptions} />\r\n                      </div>\r\n                  );\r\n              })\r\n        : null;\r\n\r\n    return (\r\n        <>\r\n            {clicked && <div>{charts}</div>}\r\n            {clicked && <button onClick={() => setView(true)}>Post about your Progress?</button>}\r\n            {view && <PostFeedSmart userId={userId} goalId={goalId} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotiViewerNew;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}