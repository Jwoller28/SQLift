{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brets\\\\Documents\\\\Revature-Projects\\\\RevP2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\UserContext\\\\UserContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      // Get API call of user being logged in\n      return {\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: null\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\n// context type\n\nexport const AuthContext = /*#__PURE__*/createContext(null);\nconst initialAuthState = {\n  user: null\n};\n\n// Provider component\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialAuthState);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"8VQcfKNCRaUce8I9yw7D5O0pzCg=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","authReducer","state","action","type","user","payload","Error","AuthContext","initialAuthState","AuthProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brets/Documents/Revature-Projects/RevP2/revProj2/frontend/revproj2/src/Components/UserContext/UserContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useReducer } from \"react\";\r\n\r\ninterface User{\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\ninterface AuthState{\r\n    user: User | null;\r\n}\r\n\r\ntype AuthAction = {type: 'LOGIN'; payload: User} | {type: 'LOGOUT'};\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState =>{\r\n    switch(action.type){\r\n        case 'LOGIN':   // Get API call of user being logged in\r\n            return {user: action.payload};\r\n        case 'LOGOUT':\r\n            return {user: null};\r\n        default:\r\n            throw new Error(`Unhandled action type: ${(action as AuthAction).type}`);\r\n    }\r\n}\r\n\r\n\r\n// context type\r\ninterface AuthContextType{\r\n    // state: AuthState;\r\n    // dispatch: React.Dispatch<AuthAction>;\r\n    isAuthenticated: boolean;\r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | null> (null);\r\n\r\nconst initialAuthState: AuthState = {user: null};\r\n\r\n// Provider component\r\n\r\ninterface AuthProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\r\n    const [state, dispatch] = useReducer(authReducer, initialAuthState);\r\n\r\n    return(\r\n        <AuthContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAaC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa7D,MAAMC,WAAW,GAAGA,CAACC,KAAgB,EAAEC,MAAkB,KAAe;EACpE,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,OAAO;MAAI;MACZ,OAAO;QAACC,IAAI,EAAEF,MAAM,CAACG;MAAO,CAAC;IACjC,KAAK,QAAQ;MACT,OAAO;QAACD,IAAI,EAAE;MAAI,CAAC;IACvB;MACI,MAAM,IAAIE,KAAK,CAAC,0BAA2BJ,MAAM,CAAgBC,IAAI,EAAE,CAAC;EAChF;AACJ,CAAC;;AAGD;;AAOA,OAAO,MAAMI,WAAW,gBAAGX,aAAa,CAA0B,IAAI,CAAC;AAEvE,MAAMY,gBAA2B,GAAG;EAACJ,IAAI,EAAE;AAAI,CAAC;;AAEhD;;AAMA,OAAO,MAAMK,YAAyC,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACV,KAAK,EAAEW,QAAQ,CAAC,GAAGf,UAAU,CAACG,WAAW,EAAEQ,gBAAgB,CAAC;EAEnE,oBACIT,OAAA,CAACQ,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAE;MAACb,KAAK;MAAEW;IAAQ,CAAE;IAAAF,QAAA,EAC1CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAP,EAAA,CARYF,YAAyC;AAAAU,EAAA,GAAzCV,YAAyC;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}