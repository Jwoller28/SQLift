{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Calendar\\\\ProgressPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// Minimal interface for your Tracker. Adjust as needed.\n\n// Minimal interface for your Goal. Adjust as needed.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProgressPage() {\n  _s();\n  var _dayTracker$sleep, _dayTracker$water, _dayTracker$exercise$, _dayTracker$exercise, _dayTracker$exercise$2, _dayTracker$exercise2, _dayTracker$exercise$3, _dayTracker$exercise3, _dayTracker$nutrition, _dayTracker$nutrition2, _dayTracker$nutrition3, _dayTracker$nutrition4, _dayTracker$nutrition5, _dayTracker$nutrition6, _dayTracker$nutrition7, _dayTracker$nutrition8;\n  const {\n    dayId\n  } = useParams(); // e.g., \"2024-12-31\"\n  const navigate = useNavigate();\n\n  // 1) Basic user/goal tokens and IDs\n  const [token, setToken] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [goal, setGoal] = useState(null); // We'll store entire goal object\n\n  // 2) Trackers\n  const [allTrackers, setAllTrackers] = useState([]);\n  const [dayTracker, setDayTracker] = useState(null);\n\n  // 3) Summations for total progress\n  const [totalSleep, setTotalSleep] = useState(0);\n  const [totalWater, setTotalWater] = useState(0);\n  // If you want total cals, you can add a state for it, etc.\n\n  // ---------------------------------------------------\n  // A) On mount, fetch token from localStorage\n  // ---------------------------------------------------\n  useEffect(() => {\n    const stored = localStorage.getItem('token');\n    if (stored) {\n      // if raw string: setToken(stored);\n      // if JSON: setToken(JSON.parse(stored));\n      setToken(JSON.parse(stored));\n    } else {\n      console.error('No token found. Please log in.');\n    }\n  }, []);\n\n  // ---------------------------------------------------\n  // B) Once we have token, get username from /me\n  // ---------------------------------------------------\n  useEffect(() => {\n    if (!token) return;\n    const fetchMe = async () => {\n      try {\n        const res = await fetch('http://localhost:8080/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /me failed: ${res.status}`);\n        }\n        const name = await res.text();\n        setUsername(name);\n      } catch (err) {\n        console.error('Error fetching /me:', err);\n      }\n    };\n    fetchMe();\n  }, [token]);\n\n  // ---------------------------------------------------\n  // C) Once we have username, get user object => userId\n  // ---------------------------------------------------\n  useEffect(() => {\n    if (!username || !token) return;\n    const fetchUser = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/username/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /username/${username} failed: ${res.status}`);\n        }\n        const userObj = await res.json();\n        setUserId(userObj.id);\n      } catch (err) {\n        console.error('Error fetching user:', err);\n      }\n    };\n    fetchUser();\n  }, [username, token]);\n\n  // ---------------------------------------------------\n  // D) Once we have userId, get the user's goal\n  // ---------------------------------------------------\n  useEffect(() => {\n    if (!userId || !token) return;\n    const fetchGoal = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/goalUser/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /goalUser/${userId} failed: ${res.status}`);\n        }\n        const goalObj = await res.json();\n        setGoal(goalObj);\n      } catch (err) {\n        console.error('Error fetching goal:', err);\n      }\n    };\n    fetchGoal();\n  }, [userId, token]);\n\n  // ---------------------------------------------------\n  // E) Then, also get all trackers => allTrackers\n  // ---------------------------------------------------\n  useEffect(() => {\n    const fetchTrackers = async () => {\n      if (!userId || !goal || !token) return;\n      try {\n        // goal.id is optional if you need it, but we only need userId to fetch all if your backend requires both\n        const res = await fetch(`http://localhost:8080/Tracker/${userId}/${goal.id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /Tracker/${userId}/${goal.id} failed: ${res.status}`);\n        }\n        const trackers = await res.json();\n        setAllTrackers(trackers);\n      } catch (err) {\n        console.error('Error fetching trackers:', err);\n      }\n    };\n    fetchTrackers();\n  }, [userId, goal, token]);\n\n  // ---------------------------------------------------\n  // F) Once we have allTrackers, find the specific day, sum totals\n  // ---------------------------------------------------\n  useEffect(() => {\n    // 1) Find day tracker\n    const foundTracker = allTrackers.find(t => {\n      var _t$exercise, _t$nutrition;\n      const exDate = (_t$exercise = t.exercise) === null || _t$exercise === void 0 ? void 0 : _t$exercise.exerciseDate;\n      const slDate = t.sleepDate;\n      const wtDate = t.waterDate;\n      const nuDate = (_t$nutrition = t.nutrition) === null || _t$nutrition === void 0 ? void 0 : _t$nutrition.nutritionDate;\n      return exDate === dayId || slDate === dayId || wtDate === dayId || nuDate === dayId;\n    }) || null;\n    setDayTracker(foundTracker);\n\n    // 2) Sum total sleep, water, etc.\n    let sumSleep = 0;\n    let sumWater = 0;\n    // let sumCals = 0; // if you want total cals\n    allTrackers.forEach(t => {\n      sumSleep += t.sleep || 0;\n      sumWater += t.water || 0;\n      // if (t.nutrition?.kal) sumCals += t.nutrition.kal;\n    });\n    setTotalSleep(sumSleep);\n    setTotalWater(sumWater);\n    // setTotalCals(sumCals);\n  }, [allTrackers, dayId]);\n\n  // ---------------------------------------------------\n  // G) Render read-only UI\n  // ---------------------------------------------------\n  const goBack = () => {\n    navigate('/calendar');\n  };\n\n  // dayTracker might be null if no data for that day\n  // goal might be null if no goal found\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Progress for \", dayId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), dayTracker ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sleep (hrs):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$sleep = dayTracker.sleep) !== null && _dayTracker$sleep !== void 0 ? _dayTracker$sleep : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Water (oz):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$water = dayTracker.water) !== null && _dayTracker$water !== void 0 ? _dayTracker$water : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Calories Burned:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$exercise$ = (_dayTracker$exercise = dayTracker.exercise) === null || _dayTracker$exercise === void 0 ? void 0 : _dayTracker$exercise.caloriesBurned) !== null && _dayTracker$exercise$ !== void 0 ? _dayTracker$exercise$ : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$exercise$2 = (_dayTracker$exercise2 = dayTracker.exercise) === null || _dayTracker$exercise2 === void 0 ? void 0 : _dayTracker$exercise2.volume) !== null && _dayTracker$exercise$2 !== void 0 ? _dayTracker$exercise$2 : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$exercise$3 = (_dayTracker$exercise3 = dayTracker.exercise) === null || _dayTracker$exercise3 === void 0 ? void 0 : _dayTracker$exercise3.duration) !== null && _dayTracker$exercise$3 !== void 0 ? _dayTracker$exercise$3 : 0, \" min\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Weight (lbs):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$nutrition = (_dayTracker$nutrition2 = dayTracker.nutrition) === null || _dayTracker$nutrition2 === void 0 ? void 0 : _dayTracker$nutrition2.weight) !== null && _dayTracker$nutrition !== void 0 ? _dayTracker$nutrition : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Carbs (g):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$nutrition3 = (_dayTracker$nutrition4 = dayTracker.nutrition) === null || _dayTracker$nutrition4 === void 0 ? void 0 : _dayTracker$nutrition4.carb) !== null && _dayTracker$nutrition3 !== void 0 ? _dayTracker$nutrition3 : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fat (g):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$nutrition5 = (_dayTracker$nutrition6 = dayTracker.nutrition) === null || _dayTracker$nutrition6 === void 0 ? void 0 : _dayTracker$nutrition6.fat) !== null && _dayTracker$nutrition5 !== void 0 ? _dayTracker$nutrition5 : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Protein (g):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 14\n        }, this), \" \", (_dayTracker$nutrition7 = (_dayTracker$nutrition8 = dayTracker.nutrition) === null || _dayTracker$nutrition8 === void 0 ? void 0 : _dayTracker$nutrition8.protein) !== null && _dayTracker$nutrition7 !== void 0 ? _dayTracker$nutrition7 : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data for this day.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Total Progress So Far\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), goal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Hours Slept:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), \" \", totalSleep, \"/\", goal.sleep, \" hour goal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Water Drank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), \" \", totalWater, \"/\", goal.water, \" oz goal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No goal found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goBack,\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Back to Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(ProgressPage, \"Ya74/oVxqAU9pyGz/pmXaSLBwh4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ProgressPage;\nexport default ProgressPage;\nvar _c;\n$RefreshReg$(_c, \"ProgressPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgressPage","_s","_dayTracker$sleep","_dayTracker$water","_dayTracker$exercise$","_dayTracker$exercise","_dayTracker$exercise$2","_dayTracker$exercise2","_dayTracker$exercise$3","_dayTracker$exercise3","_dayTracker$nutrition","_dayTracker$nutrition2","_dayTracker$nutrition3","_dayTracker$nutrition4","_dayTracker$nutrition5","_dayTracker$nutrition6","_dayTracker$nutrition7","_dayTracker$nutrition8","dayId","navigate","token","setToken","username","setUsername","userId","setUserId","goal","setGoal","allTrackers","setAllTrackers","dayTracker","setDayTracker","totalSleep","setTotalSleep","totalWater","setTotalWater","stored","localStorage","getItem","JSON","parse","console","error","fetchMe","res","fetch","headers","Authorization","ok","Error","status","name","text","err","fetchUser","userObj","json","id","fetchGoal","goalObj","fetchTrackers","trackers","foundTracker","find","t","_t$exercise","_t$nutrition","exDate","exercise","exerciseDate","slDate","sleepDate","wtDate","waterDate","nuDate","nutrition","nutritionDate","sumSleep","sumWater","forEach","sleep","water","goBack","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","caloriesBurned","volume","duration","weight","carb","fat","protein","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Calendar/ProgressPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\n// Minimal interface for your Tracker. Adjust as needed.\r\ninterface ITracker {\r\n  id: number;\r\n  exercise?: {\r\n    caloriesBurned?: number;\r\n    volume?: number;\r\n    duration?: number;\r\n    exerciseDate?: string;\r\n  };\r\n  nutrition?: {\r\n    kal?: number;\r\n    carb?: number;\r\n    fat?: number;\r\n    protein?: number;\r\n    weight?: number;\r\n    nutritionDate?: string;\r\n  };\r\n  sleep?: number;\r\n  sleepDate?: string;\r\n  water?: number;\r\n  waterDate?: string;\r\n}\r\n\r\n// Minimal interface for your Goal. Adjust as needed.\r\ninterface IGoal {\r\n  id: number;\r\n  sleep: number;       // e.g. total hours to achieve\r\n  water: number;       // e.g. total ounces to achieve\r\n  // If you have nutrition or exercise goals, add them here\r\n}\r\n\r\nfunction ProgressPage() {\r\n  const { dayId } = useParams();  // e.g., \"2024-12-31\"\r\n  const navigate = useNavigate();\r\n\r\n  // 1) Basic user/goal tokens and IDs\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [username, setUsername] = useState<string | null>(null);\r\n  const [userId, setUserId] = useState<number | null>(null);\r\n  const [goal, setGoal] = useState<IGoal | null>(null); // We'll store entire goal object\r\n\r\n  // 2) Trackers\r\n  const [allTrackers, setAllTrackers] = useState<ITracker[]>([]);\r\n  const [dayTracker, setDayTracker] = useState<ITracker | null>(null);\r\n\r\n  // 3) Summations for total progress\r\n  const [totalSleep, setTotalSleep] = useState(0);\r\n  const [totalWater, setTotalWater] = useState(0);\r\n  // If you want total cals, you can add a state for it, etc.\r\n\r\n  // ---------------------------------------------------\r\n  // A) On mount, fetch token from localStorage\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('token');\r\n    if (stored) {\r\n      // if raw string: setToken(stored);\r\n      // if JSON: setToken(JSON.parse(stored));\r\n      setToken(JSON.parse(stored));\r\n    } else {\r\n      console.error('No token found. Please log in.');\r\n    }\r\n  }, []);\r\n\r\n  // ---------------------------------------------------\r\n  // B) Once we have token, get username from /me\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    if (!token) return;\r\n    const fetchMe = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:8080/me', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(`GET /me failed: ${res.status}`);\r\n        }\r\n        const name = await res.text();\r\n        setUsername(name);\r\n      } catch (err) {\r\n        console.error('Error fetching /me:', err);\r\n      }\r\n    };\r\n    fetchMe();\r\n  }, [token]);\r\n\r\n  // ---------------------------------------------------\r\n  // C) Once we have username, get user object => userId\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    if (!username || !token) return;\r\n    const fetchUser = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:8080/username/${username}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(`GET /username/${username} failed: ${res.status}`);\r\n        }\r\n        const userObj = await res.json();\r\n        setUserId(userObj.id);\r\n      } catch (err) {\r\n        console.error('Error fetching user:', err);\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [username, token]);\r\n\r\n  // ---------------------------------------------------\r\n  // D) Once we have userId, get the user's goal\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    if (!userId || !token) return;\r\n    const fetchGoal = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:8080/goalUser/${userId}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(`GET /goalUser/${userId} failed: ${res.status}`);\r\n        }\r\n        const goalObj = await res.json();\r\n        setGoal(goalObj);\r\n      } catch (err) {\r\n        console.error('Error fetching goal:', err);\r\n      }\r\n    };\r\n    fetchGoal();\r\n  }, [userId, token]);\r\n\r\n  // ---------------------------------------------------\r\n  // E) Then, also get all trackers => allTrackers\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    const fetchTrackers = async () => {\r\n      if (!userId || !goal || !token) return;\r\n      try {\r\n        // goal.id is optional if you need it, but we only need userId to fetch all if your backend requires both\r\n        const res = await fetch(`http://localhost:8080/Tracker/${userId}/${goal.id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        if (!res.ok) {\r\n          throw new Error(`GET /Tracker/${userId}/${goal.id} failed: ${res.status}`);\r\n        }\r\n        const trackers = await res.json();\r\n        setAllTrackers(trackers);\r\n      } catch (err) {\r\n        console.error('Error fetching trackers:', err);\r\n      }\r\n    };\r\n    fetchTrackers();\r\n  }, [userId, goal, token]);\r\n\r\n  // ---------------------------------------------------\r\n  // F) Once we have allTrackers, find the specific day, sum totals\r\n  // ---------------------------------------------------\r\n  useEffect(() => {\r\n    // 1) Find day tracker\r\n    const foundTracker = allTrackers.find((t) => {\r\n      const exDate = t.exercise?.exerciseDate;\r\n      const slDate = t.sleepDate;\r\n      const wtDate = t.waterDate;\r\n      const nuDate = t.nutrition?.nutritionDate;\r\n      return exDate === dayId || slDate === dayId || wtDate === dayId || nuDate === dayId;\r\n    }) || null;\r\n    setDayTracker(foundTracker);\r\n\r\n    // 2) Sum total sleep, water, etc.\r\n    let sumSleep = 0;\r\n    let sumWater = 0;\r\n    // let sumCals = 0; // if you want total cals\r\n    allTrackers.forEach(t => {\r\n      sumSleep += t.sleep || 0;\r\n      sumWater += t.water || 0;\r\n      // if (t.nutrition?.kal) sumCals += t.nutrition.kal;\r\n    });\r\n    setTotalSleep(sumSleep);\r\n    setTotalWater(sumWater);\r\n    // setTotalCals(sumCals);\r\n  }, [allTrackers, dayId]);\r\n\r\n  // ---------------------------------------------------\r\n  // G) Render read-only UI\r\n  // ---------------------------------------------------\r\n  const goBack = () => {\r\n    navigate('/calendar');\r\n  };\r\n\r\n  // dayTracker might be null if no data for that day\r\n  // goal might be null if no goal found\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <h2>Progress for {dayId}</h2>\r\n\r\n      {/* Display the day’s data if found */}\r\n      {dayTracker ? (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <p><strong>Sleep (hrs):</strong> {dayTracker.sleep ?? 0}</p>\r\n          <p><strong>Water (oz):</strong> {dayTracker.water ?? 0}</p>\r\n          <p><strong>Calories Burned:</strong> {dayTracker.exercise?.caloriesBurned ?? 0}</p>\r\n          <p><strong>Volume:</strong> {dayTracker.exercise?.volume ?? 0}</p>\r\n          <p><strong>Duration:</strong> {dayTracker.exercise?.duration ?? 0} min</p>\r\n          <p><strong>Weight (lbs):</strong> {dayTracker.nutrition?.weight ?? 0}</p>\r\n          <p><strong>Carbs (g):</strong> {dayTracker.nutrition?.carb ?? 0}</p>\r\n          <p><strong>Fat (g):</strong> {dayTracker.nutrition?.fat ?? 0}</p>\r\n          <p><strong>Protein (g):</strong> {dayTracker.nutrition?.protein ?? 0}</p>\r\n        </div>\r\n      ) : (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <p>No data for this day.</p>\r\n        </div>\r\n      )}\r\n\r\n      <hr />\r\n\r\n      <h3>Total Progress So Far</h3>\r\n      {goal ? (\r\n        <>\r\n          {/* e.g. \"hours slept: 20/400 hour goal\" */}\r\n          <p>\r\n            <strong>Hours Slept:</strong> {totalSleep}/{goal.sleep} hour goal\r\n          </p>\r\n          <p>\r\n            <strong>Water Drank:</strong> {totalWater}/{goal.water} oz goal\r\n          </p>\r\n          {/* If your goal has other fields for exercise or nutrition, add them here */}\r\n        </>\r\n      ) : (\r\n        <p>No goal found.</p>\r\n      )}\r\n\r\n      <button onClick={goBack} style={{ marginTop: '20px' }}>\r\n        Back to Calendar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}