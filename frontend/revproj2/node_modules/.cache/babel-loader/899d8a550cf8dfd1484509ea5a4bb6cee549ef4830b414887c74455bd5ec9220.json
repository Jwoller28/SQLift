{"ast":null,"code":"import axios from \"axios\";\nexport const sendPost = async formData => {\n  try {\n    const url = \"http://localhost:8080/api/posts\";\n    await axios.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    console.log(\"Message sent successfully!\");\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n  }\n};\nexport const getPosts = async () => {\n  try {\n    const url = \"http://localhost:8080/api/posts\";\n    let result = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (result && result.status === 200) {\n      console.log(\"Post Retrieved!\");\n      console.log(result.data);\n      return result.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving message:\", error);\n  }\n};\nexport const getTrackers = async (userId, goalId) => {\n  try {\n    const url = 'http://localhost:8080/Tracker/${userId}/${goalId}';\n    let result = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (result && result.status == 200) {\n      console.log(\"Trackers received\");\n      console.log(result.data);\n      return result.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving trackers: \", error);\n  }\n};\nexport const getUserByUsername = async username => {\n  try {\n    const url1 = 'http://localhost:8080/username/${username}';\n    let result1 = await axios.get(url1, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (result1 && result1.status === 200) {\n      console.log(\"User acquired\");\n      console.log(result1.data);\n      return result1.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving user: \", error);\n  }\n};\nexport const getGoalbyUserId = async userId => {\n  try {\n    const url2 = 'http://localhost:8080/goalUser/${userId}';\n    let result2 = await axios.get(url2, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (result2 && result2.status === 200) {\n      console.log(\"Goal acquired\");\n      console.log(result2.data);\n      return result2.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving goal: \", error);\n  }\n};","map":{"version":3,"names":["axios","sendPost","formData","url","post","headers","console","log","error","getPosts","result","get","status","data","Error","getTrackers","userId","goalId","getUserByUsername","username","url1","result1","getGoalbyUserId","url2","result2"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/API/Axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n\r\nexport const sendPost = async (formData : FormData) => {\r\n    try {\r\n        const url = \"http://localhost:8080/api/posts\";\r\n\r\n        await axios.post(url, formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n        console.log(\"Message sent successfully!\");\r\n    } catch (error) {\r\n        console.error(\"Error sending message:\", error);\r\n    }\r\n};\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n        const url = \"http://localhost:8080/api/posts\";\r\n\r\n\r\n        let result = await axios.get(url, {\r\n\t\theaders: {\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n        if(result && result.status === 200)\r\n        {\r\n            console.log(\"Post Retrieved!\");\r\n            console.log(result.data);\r\n            return result.data;\r\n        }\r\n        else{\r\n            throw new Error;\r\n        }\r\n        \r\n    } catch (error : any) {\r\n        console.error(\"Error retrieving message:\", error);\r\n    }\r\n};\r\n\r\nexport const getTrackers = async (userId: number, goalId: number) => {\r\n\ttry {\r\n\t const url = 'http://localhost:8080/Tracker/${userId}/${goalId}';\r\n\r\n\t let result = await axios.get(url, {\r\n\t\t headers: {\"Content-Type\": \"application/json\"\r\n\t\t }\r\n\t });\r\n\t if(result && result.status == 200)\r\n\t{\r\n\t   console.log(\"Trackers received\");\r\n\t   console.log(result.data);\r\n\t   return result.data;\r\n\t}\r\n\telse {\r\n\t   throw new Error;\r\n\t}\r\n\r\n\t}\r\n\tcatch(error : any) {\r\n\t\tconsole.error(\"Error retrieving trackers: \", error);\r\n\t}\r\n}\r\n\r\nexport const getUserByUsername = async (username : string) => {\r\n\r\n\ttry {\r\n\tconst url1= 'http://localhost:8080/username/${username}';\r\n\t\r\n\tlet result1 = await axios.get(url1, {\r\n\t\theaders: {\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\tif(result1 && result1.status === 200)\r\n\t{\r\n\t\tconsole.log(\"User acquired\")\r\n\t\tconsole.log(result1.data);\r\n\t\treturn result1.data;\r\n\t}\r\n\telse {\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch(error : any) {\r\n\t\tconsole.error(\"Error retrieving user: \", error);\r\n\t}\r\n}\r\n\r\nexport const getGoalbyUserId = async(userId : number) => {\r\n\ttry {\r\n\tconst url2 = 'http://localhost:8080/goalUser/${userId}';\r\n\r\n\tlet result2 =  await axios.get(url2, {\r\n\t\theaders: {\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t});\r\n\tif(result2 && result2.status === 200)\r\n\t{\r\n\t\tconsole.log(\"Goal acquired\");\r\n\t\tconsole.log(result2.data);\r\n\t\treturn result2.data;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch(error: any) {\r\n\t\tconsole.error(\"Error retrieving goal: \", error);\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}