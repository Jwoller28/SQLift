{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotificationList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getGoalsbyUserId, usernameifAuthorized, getUserByUsername } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\nfunction NotificationList() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const filteredGoals = new Array();\n  const today = new Date();\n  const getGoals = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let goalList = await getGoalsbyUserId(user.id);\n    return goalList;\n  };\n  useEffect(() => {\n    getGoals().then(data => data.filter(goal => {\n      // Check if Goal was Completed Today or Before Today\n      let goalDate = new Date(goal.waterDate);\n      let diff = today.getTime() - goalDate.getTime();\n      let indexes = [];\n      console.log(diff);\n      if (diff >= 0 && !indexes.includes(goal.id)) {\n        setGoals(prev => [goal, ...prev]);\n        indexes.push(goal.id);\n      }\n    }));\n  }, [today]);\n  console.log(goals);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal ID : \", goal.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal Date : \", goal.waterDate.toString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n_s(NotificationList, \"unVZk6oTfEFOQZ6NvI8KtfburI8=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useEffect","useState","getGoalsbyUserId","usernameifAuthorized","getUserByUsername","jsxDEV","_jsxDEV","NotificationList","_s","goals","setGoals","filteredGoals","Array","today","Date","getGoals","username","user","goalList","id","then","data","filter","goal","goalDate","waterDate","diff","getTime","indexes","console","log","includes","prev","push","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","toString","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotificationList.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {getGoalsbyUserId, usernameifAuthorized, getUserByUsername} from '../../API/Axios';\r\n\r\n\r\ninterface Exercise {\r\n\tduration : number;\r\n\tvolume : number;\r\n\tcalories : number;\r\n\tExerciseDate : Date;\r\n};\r\n\r\ninterface Nutrition {\r\n\tKal : number;\r\n\tfat : number;\r\n\tcarb : number;\r\n\tweight : number;\r\n\tprotein : number;\r\n\tNutritionDate : Date;\r\n};\r\n\r\ninterface Goal {\r\n\tid : number;\r\n\tuser_id : number;\r\n\tcreatedAt : Date;\r\n\tsleep : number;\r\n\twater : number;\r\n\tsleepDate : Date;\r\n\twaterDate : Date;\r\n\texercise : Exercise;\r\n\tnutrition : Nutrition;\r\n}\r\nfunction NotificationList()\r\n{\r\n\tconst [goals, setGoals] = useState<Goal[]>([]);\r\n\tconst filteredGoals : Goal[] = new Array();\r\n\tconst today = new Date();\r\n\r\n\tconst getGoals = async () => {\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet goalList = await getGoalsbyUserId(user.id);\r\n\t\treturn goalList;\r\n\t}\r\n\t\t\r\n\tuseEffect( () => {\r\n\t\r\n\tgetGoals().then( (data) => data.filter((goal : Goal) =>\r\n\t{\r\n\t\t// Check if Goal was Completed Today or Before Today\r\n\t\tlet goalDate = new Date(goal.waterDate);\r\n\t\tlet diff = today.getTime() - goalDate.getTime();\r\n\t\tlet indexes : number[] = [];\r\n\t\tconsole.log(diff);\r\n\t\tif(diff >= 0 && !indexes.includes(goal.id))\r\n\t\t{\r\n\t\t\tsetGoals((prev) => [goal,...prev]);\r\n\t\t\tindexes.push(goal.id);\r\n\t\t}\r\n\t}))\r\n\r\n\t\r\n\t},[today])\r\n\tconsole.log(goals);\r\n\treturn (\r\n\t\t<div>\r\n\t\t{goals.map((goal : Goal, index : number) => (\r\n\t\t<div key = {index}>\r\n\t\t\t<h5> Goal ID : {goal.id} </h5>\r\n\t\t\t<h5> Goal Date : {(goal.waterDate).toString()} </h5>\r\n\t\t</div>\r\n\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default NotificationList;\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,gBAAgB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzF;AASA;AAaD,SAASC,gBAAgBA,CAAA,EACzB;EAAAC,EAAA;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAMU,aAAsB,GAAG,IAAIC,KAAK,CAAC,CAAC;EAC1C,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EAExB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,QAAQ,GAAG,MAAMb,oBAAoB,CAAC,CAAC;IAC3C,IAAIc,IAAI,GAAG,MAAMb,iBAAiB,CAACY,QAAQ,CAAC;IAC5C,IAAIE,QAAQ,GAAG,MAAMhB,gBAAgB,CAACe,IAAI,CAACE,EAAE,CAAC;IAC9C,OAAOD,QAAQ;EAChB,CAAC;EAEDlB,SAAS,CAAE,MAAM;IAEjBe,QAAQ,CAAC,CAAC,CAACK,IAAI,CAAGC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAEC,IAAW,IACnD;MACC;MACA,IAAIC,QAAQ,GAAG,IAAIV,IAAI,CAACS,IAAI,CAACE,SAAS,CAAC;MACvC,IAAIC,IAAI,GAAGb,KAAK,CAACc,OAAO,CAAC,CAAC,GAAGH,QAAQ,CAACG,OAAO,CAAC,CAAC;MAC/C,IAAIC,OAAkB,GAAG,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB,IAAGA,IAAI,IAAI,CAAC,IAAI,CAACE,OAAO,CAACG,QAAQ,CAACR,IAAI,CAACJ,EAAE,CAAC,EAC1C;QACCT,QAAQ,CAAEsB,IAAI,IAAK,CAACT,IAAI,EAAC,GAAGS,IAAI,CAAC,CAAC;QAClCJ,OAAO,CAACK,IAAI,CAACV,IAAI,CAACJ,EAAE,CAAC;MACtB;IACD,CAAC,CAAC,CAAC;EAGH,CAAC,EAAC,CAACN,KAAK,CAAC,CAAC;EACVgB,OAAO,CAACC,GAAG,CAACrB,KAAK,CAAC;EAClB,oBACCH,OAAA;IAAA4B,QAAA,EACCzB,KAAK,CAAC0B,GAAG,CAAC,CAACZ,IAAW,EAAEa,KAAc,kBACvC9B,OAAA;MAAA4B,QAAA,gBACC5B,OAAA;QAAA4B,QAAA,GAAI,aAAW,EAACX,IAAI,CAACJ,EAAE,EAAC,GAAC;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BlC,OAAA;QAAA4B,QAAA,GAAI,eAAa,EAAEX,IAAI,CAACE,SAAS,CAAEgB,QAAQ,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFzCJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAAChC,EAAA,CA1CQD,gBAAgB;AAAAmC,EAAA,GAAhBnC,gBAAgB;AA2CzB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}