{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotificationList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getGoalsbyUserId, usernameifAuthorized, getUserByUsername } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\nfunction NotificationList() {\n  _s();\n  const [goals, setGoals] = useState(null);\n  const today = new Date();\n  const getGoals = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let goalList = getGoalsbyUserId(user.id);\n    goalList.then(data => {\n      setGoals(data);\n    });\n    return goalList;\n  };\n  useEffect(() => {\n    let goalListUnFiltered = getGoals();\n    let goalListFiltered = goalListUnFiltered.filter(goal => {\n      // Check if Goal was Completed Today or Before Today\n      let goalDate = new Date(goal.waterDate);\n      let diff = today - goalDate;\n      if (diff >= 0) {\n        return goal;\n      }\n    });\n    console.log(goalListFiltered);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goals === null || goals === void 0 ? void 0 : goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal ID : \", goal.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n}\n_s(NotificationList, \"PCAcu2//CYBFS+1zEA9PFVtovvc=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useEffect","useState","getGoalsbyUserId","usernameifAuthorized","getUserByUsername","jsxDEV","_jsxDEV","NotificationList","_s","goals","setGoals","today","Date","getGoals","username","user","goalList","id","then","data","goalListUnFiltered","goalListFiltered","filter","goal","goalDate","waterDate","diff","console","log","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotificationList.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {getGoalsbyUserId, usernameifAuthorized, getUserByUsername} from '../../API/Axios';\r\n\r\n\r\ninterface Exercise {\r\n\tduration : number;\r\n\tvolume : number;\r\n\tcalories : number;\r\n\tExerciseDate : Date;\r\n};\r\n\r\ninterface Nutrition {\r\n\tKal : number;\r\n\tfat : number;\r\n\tcarb : number;\r\n\tweight : number;\r\n\tprotein : number;\r\n\tNutritionDate : Date;\r\n};\r\n\r\ninterface Goal {\r\n\tid : number;\r\n\tuser_id : number;\r\n\tcreatedAt : Date;\r\n\tsleep : number;\r\n\twater : number;\r\n\tsleepDate : Date;\r\n\twaterDate : Date;\r\n\texercise : Exercise;\r\n\tnutrition : Nutrition;\r\n}\r\nfunction NotificationList()\r\n{\r\n\tconst [goals, setGoals] = useState<Goal[] | null>(null);\r\n\tconst today = new Date();\r\n\r\n\tconst getGoals = async () => {\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet goalList = getGoalsbyUserId(user.id);\r\n\t\tgoalList.then((data : Goal[]) => {setGoals(data)});\r\n\t\treturn goalList;\r\n\t}\r\n\t\t\r\n\tuseEffect( () => {\r\n\tlet goalListUnFiltered = getGoals();\r\n\r\n\tlet goalListFiltered = goalListUnFiltered.filter( (goal) =>\r\n\t{\r\n\t\t// Check if Goal was Completed Today or Before Today\r\n\t\tlet goalDate = new Date(goal.waterDate);\r\n\t\tlet diff = today - goalDate;\r\n\t\tif(diff >= 0)\r\n\t\t{\r\n\t\t\treturn goal;\r\n\t\t}\r\n\t})\r\n\tconsole.log(goalListFiltered);\r\n\t\r\n\r\n\t\r\n\t},[])\r\n\treturn (\r\n\t\t<div>\r\n\t\t{goals?.map((goal : Goal, index : number) => (\r\n\t\t<div key = {index}>\r\n\t\t\t<h5> Goal ID : {goal.id} </h5>\r\n\t\t</div>\r\n\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default NotificationList;\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,gBAAgB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzF;AASA;AAaD,SAASC,gBAAgBA,CAAA,EACzB;EAAAC,EAAA;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EAExB,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,QAAQ,GAAG,MAAMX,oBAAoB,CAAC,CAAC;IAC3C,IAAIY,IAAI,GAAG,MAAMX,iBAAiB,CAACU,QAAQ,CAAC;IAC5C,IAAIE,QAAQ,GAAGd,gBAAgB,CAACa,IAAI,CAACE,EAAE,CAAC;IACxCD,QAAQ,CAACE,IAAI,CAAEC,IAAa,IAAK;MAACT,QAAQ,CAACS,IAAI,CAAC;IAAA,CAAC,CAAC;IAClD,OAAOH,QAAQ;EAChB,CAAC;EAEDhB,SAAS,CAAE,MAAM;IACjB,IAAIoB,kBAAkB,GAAGP,QAAQ,CAAC,CAAC;IAEnC,IAAIQ,gBAAgB,GAAGD,kBAAkB,CAACE,MAAM,CAAGC,IAAI,IACvD;MACC;MACA,IAAIC,QAAQ,GAAG,IAAIZ,IAAI,CAACW,IAAI,CAACE,SAAS,CAAC;MACvC,IAAIC,IAAI,GAAGf,KAAK,GAAGa,QAAQ;MAC3B,IAAGE,IAAI,IAAI,CAAC,EACZ;QACC,OAAOH,IAAI;MACZ;IACD,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAACP,gBAAgB,CAAC;EAI7B,CAAC,EAAC,EAAE,CAAC;EACL,oBACCf,OAAA;IAAAuB,QAAA,EACCpB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEqB,GAAG,CAAC,CAACP,IAAW,EAAEQ,KAAc,kBACxCzB,OAAA;MAAAuB,QAAA,eACCvB,OAAA;QAAAuB,QAAA,GAAI,aAAW,EAACN,IAAI,CAACN,EAAE,EAAC,GAAC;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADnBJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAAC3B,EAAA,CAxCQD,gBAAgB;AAAA6B,EAAA,GAAhB7B,gBAAgB;AAyCzB,eAAeA,gBAAgB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}