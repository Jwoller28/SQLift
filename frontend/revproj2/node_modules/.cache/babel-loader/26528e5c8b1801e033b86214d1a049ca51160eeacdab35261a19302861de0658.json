{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwoll\\\\Desktop\\\\code\\\\revTraining\\\\2126-Java-Full-Stack-PEP\\\\projects\\\\project_2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\UserContext\\\\UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext(undefined);\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = (username, password) => {\n    setUser({\n      username,\n      password\n    });\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\n// const authReducer = (state: AuthState, action: AuthAction): AuthState =>{\n//     switch(action.type){\n//         case 'LOGIN':   // Get API call of user being logged in\n//             return {user: action.payload};\n//         case 'LOGOUT':\n//             return {user: null};\n//         default:\n//             throw new Error(`Unhandled action type: ${(action as AuthAction).type}`);\n//     }\n// }\n\n// context type\n// interface AuthContextType{\n//     // state: AuthState;\n//     // dispatch: React.Dispatch<AuthAction>;\n\n// }\n\nexport const AuthContext = /*#__PURE__*/createContext(null);\n\n// const initialAuthState: AuthState = {user: null};\n\n// Provider component\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = () => setIsAuthenticated(true);\n  const logout = () => setIsAuthenticated(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c2 = AuthProvider;\nexport const useAuth = () => {\n  _s3();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// export const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\n//     const [state, dispatch] = useReducer(authReducer, initialAuthState);\n\n//     return(\n//         <AuthContext.Provider value={{state, dispatch}}>\n//             {children}\n//         </AuthContext.Provider>\n//     )\n// }\n_s3(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"UserProvider\");\n$RefreshReg$(_c2, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","undefined","UserProvider","children","_s","user","setUser","login","username","password","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","AuthContext","AuthProvider","_s2","isAuthenticated","setIsAuthenticated","_c2","useAuth","_s3","context","Error","$RefreshReg$"],"sources":["C:/Users/jwoll/Desktop/code/revTraining/2126-Java-Full-Stack-PEP/projects/project_2/revProj2/frontend/revproj2/src/Components/UserContext/UserContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useReducer, useState } from \"react\";\r\n\r\ninterface AuthContextType{\r\n    isAuthenticated: boolean;\r\n    login: () => void;\r\n    logout: () => void;\r\n}\r\n\r\nexport interface User{\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\ninterface UserContextType{\r\n    user: User | null;\r\n    login: (username: string, password: string) => void;\r\n    logout: () => void;\r\n}\r\n\r\nexport const UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\ninterface UserProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const UserProvider: React.FC<UserProviderProps> = ({children}) => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const login = (username: string, password: string) => {\r\n        setUser({username, password});\r\n    }\r\n\r\n    const logout = () => {\r\n        setUser(null);\r\n    }\r\n    return (\r\n        <UserContext.Provider value={{user, login, logout}}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\ntype AuthAction = {type: 'LOGIN'; payload: User} | {type: 'LOGOUT'};\r\n\r\n// const authReducer = (state: AuthState, action: AuthAction): AuthState =>{\r\n//     switch(action.type){\r\n//         case 'LOGIN':   // Get API call of user being logged in\r\n//             return {user: action.payload};\r\n//         case 'LOGOUT':\r\n//             return {user: null};\r\n//         default:\r\n//             throw new Error(`Unhandled action type: ${(action as AuthAction).type}`);\r\n//     }\r\n// }\r\n\r\n\r\n// context type\r\n// interface AuthContextType{\r\n//     // state: AuthState;\r\n//     // dispatch: React.Dispatch<AuthAction>;\r\n    \r\n    \r\n// }\r\n\r\nexport const AuthContext = createContext<AuthContextType | null> (null);\r\n\r\n// const initialAuthState: AuthState = {user: null};\r\n\r\n// Provider component\r\n\r\ninterface AuthProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}: {children: ReactNode}) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const login = () => setIsAuthenticated(true);\r\n    const logout = () => setIsAuthenticated(false);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{isAuthenticated, login, logout}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if(!context){\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n// export const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\r\n//     const [state, dispatch] = useReducer(authReducer, initialAuthState);\r\n\r\n//     return(\r\n//         <AuthContext.Provider value={{state, dispatch}}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     )\r\n// }"],"mappings":";;;;AAAA,SAASA,aAAa,EAAaC,UAAU,EAAcC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBnF,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAMhF,OAAO,MAAMC,YAAyC,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMU,KAAK,GAAGA,CAACC,QAAgB,EAAEC,QAAgB,KAAK;IAClDH,OAAO,CAAC;MAACE,QAAQ;MAAEC;IAAQ,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjBJ,OAAO,CAAC,IAAI,CAAC;EACjB,CAAC;EACD,oBACIP,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAACP,IAAI;MAAEE,KAAK;MAAEG;IAAM,CAAE;IAAAP,QAAA,EAC9CA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAZ,EAAA,CAdYF,YAAyC;AAAAe,EAAA,GAAzCf,YAAyC;AAkBtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;;AAEA,OAAO,MAAMgB,WAAW,gBAAGvB,aAAa,CAA0B,IAAI,CAAC;;AAEvE;;AAEA;;AAOA,OAAO,MAAMwB,YAAY,GAAGA,CAAC;EAAChB;AAA+B,CAAC,KAAK;EAAAiB,GAAA;EAC/D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMU,KAAK,GAAGA,CAAA,KAAMe,kBAAkB,CAAC,IAAI,CAAC;EAC5C,MAAMZ,MAAM,GAAGA,CAAA,KAAMY,kBAAkB,CAAC,KAAK,CAAC;EAE9C,oBACIvB,OAAA,CAACmB,WAAW,CAACP,QAAQ;IAACC,KAAK,EAAE;MAACS,eAAe;MAAEd,KAAK;MAAEG;IAAM,CAAE;IAAAP,QAAA,EACzDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAI,GAAA,CAXYD,YAAY;AAAAI,GAAA,GAAZJ,YAAY;AAazB,OAAO,MAAMK,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG9B,UAAU,CAACsB,WAAW,CAAC;EACvC,IAAG,CAACQ,OAAO,EAAC;IACR,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAD,GAAA,CAhBaD,OAAO;AAAA,IAAAP,EAAA,EAAAM,GAAA;AAAAK,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}