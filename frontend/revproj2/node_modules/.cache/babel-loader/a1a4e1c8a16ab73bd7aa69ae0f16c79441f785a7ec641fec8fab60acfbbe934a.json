{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\frontend\\\\revproj2\\\\src\\\\Calendar\\\\CalendarPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarPage() {\n  _s();\n  const navigate = useNavigate();\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // We'll store everything we need here:\n  const [token, setToken] = useState('');\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState(null);\n\n  // The “end date” (or dates) from the user’s goal\n  const [goalDate, setGoalDate] = useState(null);\n\n  // A dictionary that maps date strings (\"YYYY-MM-DD\") to a status.\n  // We’ll populate it dynamically after fetching the goal date.\n  const [taskStatuses, setTaskStatuses] = useState({});\n\n  // For building the calendar\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth(); // 0-based in JS\n  const firstDayOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstDayOfMonth.getDay();\n  const lastDayOfMonth = new Date(year, month + 1, 0);\n  const daysInMonth = lastDayOfMonth.getDate();\n\n  // Build an array of days (with null for blank cells in the grid)\n  const calendarCells = [];\n  for (let i = 0; i < firstDayOfWeek; i++) {\n    calendarCells.push(null);\n  }\n  for (let day = 1; day <= daysInMonth; day++) {\n    calendarCells.push(day);\n  }\n\n  // ---------------------------------------------\n  // 1) On mount, get token from localStorage\n  // ---------------------------------------------\n  useEffect(() => {\n    const rawToken = localStorage.getItem('token');\n    if (rawToken) {\n      // If you stored the token as a raw string, do: setToken(rawToken);\n      // If you did JSON.stringify, parse it:\n      setToken(JSON.parse(rawToken));\n    }\n  }, []);\n\n  // ---------------------------------------------\n  // 2) Once we have token, fetch /me => username\n  // ---------------------------------------------\n  useEffect(() => {\n    if (!token) return;\n    const fetchMe = async () => {\n      try {\n        const res = await fetch('http://localhost:8080/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /me failed: ${res.status}`);\n        }\n        const name = await res.text();\n        setUsername(name);\n      } catch (err) {\n        console.error('Error fetching /me:', err);\n      }\n    };\n    fetchMe();\n  }, [token]);\n\n  // ---------------------------------------------\n  // 3) Once we have username, get user object => userId\n  // ---------------------------------------------\n  useEffect(() => {\n    if (!username || !token) return;\n    const fetchUser = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/username/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /username/${username} failed: ${res.status}`);\n        }\n        const userObj = await res.json();\n        setUserId(userObj.id);\n      } catch (err) {\n        console.error('Error fetching user:', err);\n      }\n    };\n    fetchUser();\n  }, [username, token]);\n\n  // ---------------------------------------------\n  // 4) Once we have userId, fetch the user’s goal => get the “end date”\n  // ---------------------------------------------\n  useEffect(() => {\n    if (!userId || !token) return;\n    const fetchGoal = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/goalUser/${userId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(`GET /goalUser/${userId} failed: ${res.status}`);\n        }\n        const goalObj = await res.json();\n\n        // Suppose your goal object might have \"sleepDate\" or \"waterDate\" etc.\n        // We'll pick one as the \"end date\" to highlight:\n        if (goalObj.sleepDate) {\n          // often we get something like \"2025-01-29T00:00:00\" from the backend\n          // let's substring(0,10) to get \"2025-01-29\"\n          const dateOnly = goalObj.sleepDate.substring(0, 10);\n          setGoalDate(dateOnly);\n        }\n      } catch (err) {\n        console.error('Error fetching goal:', err);\n      }\n    };\n    fetchGoal();\n  }, [userId, token]);\n\n  // ---------------------------------------------\n  // 5) If we have a goalDate, store it in taskStatuses with \"end_date\"\n  // ---------------------------------------------\n  useEffect(() => {\n    if (goalDate) {\n      setTaskStatuses(prev => ({\n        ...prev,\n        [goalDate]: 'end_date'\n      }));\n    }\n  }, [goalDate]);\n\n  // ---------------------------------------------\n  // 6) Color coding logic\n  // ---------------------------------------------\n  const getDayColor = dayId => {\n    // If user has \"missed\" or \"completed\" statuses, you can set those too\n    const status = taskStatuses[dayId];\n    if (status === 'missed') return '#ff0000'; // Red\n    if (status === 'end_date') return '#800080'; // Purple\n    if (status === 'completed') return '#008000'; // Green\n\n    // highlight today in yellow\n    if (dayId === todayFormatted) return '#FFEB3B';\n    return '#0080ff'; // Default blue\n  };\n\n  // Today's date in YYYY-MM-DD\n  const today = new Date();\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;\n\n  // When user clicks a day in the calendar\n  const handleDayClick = dayNumber => {\n    const formattedDay = String(dayNumber).padStart(2, '0');\n    const formattedMonth = String(month + 1).padStart(2, '0');\n    const dayId = `${year}-${formattedMonth}-${formattedDay}`; // \"YYYY-MM-DD\"\n\n    // Compare date with \"today\" to decide if it’s future or not\n    const clickedDate = new Date(year, month, dayNumber);\n    const now = new Date();\n    now.setHours(0, 0, 0, 0); // zero out time\n\n    if (clickedDate > now) {\n      // Future date => progress page\n      navigate(`/progress/${dayId}`);\n    } else {\n      // Past or today => input page\n      navigate(`/input/${dayId}`);\n    }\n  };\n\n  // Month navigation\n  const goToPrevMonth = () => {\n    setCurrentDate(new Date(year, month - 1, 1));\n  };\n  const goToNextMonth = () => {\n    setCurrentDate(new Date(year, month + 1, 1));\n  };\n\n  // Example placeholders\n\n  const goToFeed = () => {\n    navigate('/feed');\n  };\n  const goToInbox = () => {\n    navigate('/inbox');\n  };\n  const goToProfile = () => {\n    navigate(\"/profile\");\n  };\n  const goToGoals = () => {/* navigate('/goals'); */};\n\n  // ---------------------------------------------\n  // Render the calendar\n  // ---------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '0px',\n      background: 'linear-gradient(to bottom, #3370ff, #ADD8E6)',\n      color: '#000000',\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexDirection: 'column',\n      marginTop: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: 'Arial, sans-serif',\n        color: '#ffffff',\n        fontSize: '50px'\n      },\n      children: [currentDate.toLocaleString('default', {\n        month: 'long'\n      }), \" \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        backgroundColor: '#000'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToFeed,\n        style: {\n          padding: '10px 10px',\n          backgroundColor: '#2282ff',\n          color: '#000',\n          border: 'none',\n          cursor: 'pointer',\n          margin: '5px'\n        },\n        children: \"Feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToPrevMonth,\n        style: {\n          padding: '10px 10px',\n          backgroundColor: '#2282ff',\n          color: '#000',\n          border: 'none',\n          cursor: 'pointer',\n          margin: '5px'\n        },\n        children: \"Prev Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextMonth,\n        style: {\n          padding: '10px 10px',\n          backgroundColor: '#2282ff',\n          color: '#000',\n          border: 'none',\n          cursor: 'pointer',\n          margin: '5px'\n        },\n        children: \"Next Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToGoals,\n        style: {\n          padding: '10px 10px',\n          backgroundColor: '#2282ff',\n          color: '#000',\n          border: 'none',\n          cursor: 'pointer',\n          margin: '5px'\n        },\n        children: \"Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToInbox,\n        style: {\n          padding: '10px 10px',\n          backgroundColor: '#2282ff',\n          color: '#000',\n          border: 'none',\n          cursor: 'pointer',\n          margin: '5px'\n        },\n        children: \"Inbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToProfile,\n        style: {\n          padding: '10px 10px',\n          backgroundColor: '#2282ff',\n          color: '#000',\n          border: 'none',\n          cursor: 'pointer',\n          margin: '5px'\n        },\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        padding: '20px',\n        borderRadius: '10px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 100px)',\n          gap: '10px',\n          textAlign: 'center',\n          fontWeight: 'bold',\n          marginBottom: '20px',\n          color: '#ffffff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(7, 100px)',\n          gap: '10px'\n        },\n        children: calendarCells.map((cell, index) => {\n          if (cell === null) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '100px',\n                border: '1px solid #ccc',\n                background: '#b0c4de'\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this);\n          } else {\n            const formattedDay = String(cell).padStart(2, '0');\n            const formattedMonth = String(month + 1).padStart(2, '0');\n            const dayId = `${year}-${formattedMonth}-${formattedDay}`;\n            const backgroundColor = getDayColor(dayId);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => handleDayClick(cell),\n              style: {\n                height: '100px',\n                border: '1px solid #000',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                cursor: 'pointer',\n                background: backgroundColor,\n                color: '#ffffff',\n                borderRadius: '6px',\n                fontWeight: 'bold',\n                transition: 'background 0.3s, transform 0.2s'\n              },\n              children: cell\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarPage, \"8yLYQf5a5tXAgaeNRbWDK55l6hg=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","CalendarPage","_s","navigate","currentDate","setCurrentDate","Date","token","setToken","username","setUsername","userId","setUserId","goalDate","setGoalDate","taskStatuses","setTaskStatuses","year","getFullYear","month","getMonth","firstDayOfMonth","firstDayOfWeek","getDay","lastDayOfMonth","daysInMonth","getDate","calendarCells","i","push","day","rawToken","localStorage","getItem","JSON","parse","fetchMe","res","fetch","headers","Authorization","ok","Error","status","name","text","err","console","error","fetchUser","userObj","json","id","fetchGoal","goalObj","sleepDate","dateOnly","substring","prev","getDayColor","dayId","todayFormatted","today","String","padStart","handleDayClick","dayNumber","formattedDay","formattedMonth","clickedDate","now","setHours","goToPrevMonth","goToNextMonth","goToFeed","goToInbox","goToProfile","goToGoals","style","padding","background","color","minHeight","display","justifyContent","alignItems","flexDirection","marginTop","children","fontFamily","fontSize","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","backgroundColor","onClick","border","cursor","margin","borderRadius","gridTemplateColumns","gap","textAlign","fontWeight","map","cell","index","height","transition","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/frontend/revproj2/src/Calendar/CalendarPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CalendarPage() {\n  const navigate = useNavigate();\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // We'll store everything we need here:\n  const [token, setToken] = useState<string>('');\n  const [username, setUsername] = useState<string>('');\n  const [userId, setUserId] = useState<number | null>(null);\n\n  // The “end date” (or dates) from the user’s goal\n  const [goalDate, setGoalDate] = useState<string | null>(null);\n\n  // A dictionary that maps date strings (\"YYYY-MM-DD\") to a status.\n  // We’ll populate it dynamically after fetching the goal date.\n  const [taskStatuses, setTaskStatuses] = useState<{ [key: string]: string }>({});\n\n  // For building the calendar\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth(); // 0-based in JS\n  const firstDayOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstDayOfMonth.getDay();\n  const lastDayOfMonth = new Date(year, month + 1, 0);\n  const daysInMonth = lastDayOfMonth.getDate();\n\n  // Build an array of days (with null for blank cells in the grid)\n  const calendarCells: Array<number | null> = [];\n  for (let i = 0; i < firstDayOfWeek; i++) {\n    calendarCells.push(null);\n  }\n  for (let day = 1; day <= daysInMonth; day++) {\n    calendarCells.push(day);\n  }\n\n  // ---------------------------------------------\n  // 1) On mount, get token from localStorage\n  // ---------------------------------------------\n  useEffect(() => {\n    const rawToken = localStorage.getItem('token');\n    if (rawToken) {\n      // If you stored the token as a raw string, do: setToken(rawToken);\n      // If you did JSON.stringify, parse it:\n      setToken(JSON.parse(rawToken));\n    }\n  }, []);\n\n  // ---------------------------------------------\n  // 2) Once we have token, fetch /me => username\n  // ---------------------------------------------\n  useEffect(() => {\n    if (!token) return;\n    const fetchMe = async () => {\n      try {\n        const res = await fetch('http://localhost:8080/me', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (!res.ok) {\n          throw new Error(`GET /me failed: ${res.status}`);\n        }\n        const name = await res.text();\n        setUsername(name);\n      } catch (err) {\n        console.error('Error fetching /me:', err);\n      }\n    };\n    fetchMe();\n  }, [token]);\n\n  // ---------------------------------------------\n  // 3) Once we have username, get user object => userId\n  // ---------------------------------------------\n  useEffect(() => {\n    if (!username || !token) return;\n    const fetchUser = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/username/${username}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (!res.ok) {\n          throw new Error(`GET /username/${username} failed: ${res.status}`);\n        }\n        const userObj = await res.json();\n        setUserId(userObj.id);\n      } catch (err) {\n        console.error('Error fetching user:', err);\n      }\n    };\n    fetchUser();\n  }, [username, token]);\n\n  // ---------------------------------------------\n  // 4) Once we have userId, fetch the user’s goal => get the “end date”\n  // ---------------------------------------------\n  useEffect(() => {\n    if (!userId || !token) return;\n    const fetchGoal = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/goalUser/${userId}`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (!res.ok) {\n          throw new Error(`GET /goalUser/${userId} failed: ${res.status}`);\n        }\n        const goalObj = await res.json();\n        \n        // Suppose your goal object might have \"sleepDate\" or \"waterDate\" etc.\n        // We'll pick one as the \"end date\" to highlight:\n        if (goalObj.sleepDate) {\n          // often we get something like \"2025-01-29T00:00:00\" from the backend\n          // let's substring(0,10) to get \"2025-01-29\"\n          const dateOnly = goalObj.sleepDate.substring(0, 10);\n          setGoalDate(dateOnly);\n        }\n      } catch (err) {\n        console.error('Error fetching goal:', err);\n      }\n    };\n    fetchGoal();\n  }, [userId, token]);\n\n  // ---------------------------------------------\n  // 5) If we have a goalDate, store it in taskStatuses with \"end_date\"\n  // ---------------------------------------------\n  useEffect(() => {\n    if (goalDate) {\n      setTaskStatuses(prev => ({\n        ...prev,\n        [goalDate]: 'end_date',\n      }));\n    }\n  }, [goalDate]);\n\n  // ---------------------------------------------\n  // 6) Color coding logic\n  // ---------------------------------------------\n  const getDayColor = (dayId: string) => {\n    // If user has \"missed\" or \"completed\" statuses, you can set those too\n    const status = taskStatuses[dayId];\n    if (status === 'missed') return '#ff0000';    // Red\n    if (status === 'end_date') return '#800080';  // Purple\n    if (status === 'completed') return '#008000'; // Green\n\n    // highlight today in yellow\n    if (dayId === todayFormatted) return '#FFEB3B'; \n    return '#0080ff'; // Default blue\n  };\n\n  // Today's date in YYYY-MM-DD\n  const today = new Date();\n  const todayFormatted = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(\n    today.getDate()\n  ).padStart(2, '0')}`;\n\n  // When user clicks a day in the calendar\n  const handleDayClick = (dayNumber: number) => {\n    const formattedDay = String(dayNumber).padStart(2, '0');\n    const formattedMonth = String(month + 1).padStart(2, '0');\n    const dayId = `${year}-${formattedMonth}-${formattedDay}`; // \"YYYY-MM-DD\"\n\n    // Compare date with \"today\" to decide if it’s future or not\n    const clickedDate = new Date(year, month, dayNumber);\n    const now = new Date();\n    now.setHours(0, 0, 0, 0); // zero out time\n\n    if (clickedDate > now) {\n      // Future date => progress page\n      navigate(`/progress/${dayId}`);\n    } else {\n      // Past or today => input page\n      navigate(`/input/${dayId}`);\n    }\n  };\n\n  // Month navigation\n  const goToPrevMonth = () => {\n    setCurrentDate(new Date(year, month - 1, 1));\n  };\n  const goToNextMonth = () => {\n    setCurrentDate(new Date(year, month + 1, 1));\n  };\n\n  // Example placeholders\n\n  const goToFeed = () => { navigate('/feed');};\n  const goToInbox = () => { navigate('/inbox'); };\n  const goToProfile = () => {navigate(\"/profile\")};\n  const goToGoals = () => {/* navigate('/goals'); */};\n\n  // ---------------------------------------------\n  // Render the calendar\n  // ---------------------------------------------\n  return (\n    <div\n      style={{\n        padding: '0px',\n        background: 'linear-gradient(to bottom, #3370ff, #ADD8E6)',\n        color: '#000000',\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        marginTop: 0\n      }}\n    >\n      <h1\n        style={{\n          fontFamily: 'Arial, sans-serif',\n          color: '#ffffff',\n          fontSize: '50px'\n        }}\n      >\n        {currentDate.toLocaleString('default', { month: 'long' })} {year}\n      </h1>\n\n      {/* Example nav buttons */}\n      <div style={{ marginBottom: '20px', backgroundColor: '#000' }}>\n        <button\n          onClick={goToFeed}\n          style={{\n            padding: '10px 10px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px'\n          }}\n        >\n          Feed\n        </button>\n\n        <button\n          onClick={goToPrevMonth}\n          style={{\n            padding: '10px 10px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px'\n          }}\n        >\n          Prev Month\n        </button>\n\n        <button\n          onClick={goToNextMonth}\n          style={{\n            padding: '10px 10px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px'\n          }}\n        >\n          Next Month\n        </button>\n\n        <button\n          onClick={goToGoals}\n          style={{\n            padding: '10px 10px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px'\n          }}\n        >\n          Goals\n        </button>\n\n        <button\n          onClick={goToInbox}\n          style={{\n            padding: '10px 10px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px'\n          }}\n        >\n          Inbox\n        </button>\n\n        <button\n          onClick={goToProfile}\n          style={{\n            padding: '10px 10px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px'\n          }}\n        >\n          Profile\n        </button>\n      </div>\n\n      {/* Calendar Grid */}\n      <div\n        style={{\n          backgroundColor: 'black',\n          padding: '20px',\n          borderRadius: '10px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(7, 100px)',\n            gap: '10px',\n            textAlign: 'center',\n            fontWeight: 'bold',\n            marginBottom: '20px',\n            color: '#ffffff'\n          }}\n        >\n          <div>Sun</div>\n          <div>Mon</div>\n          <div>Tue</div>\n          <div>Wed</div>\n          <div>Thu</div>\n          <div>Fri</div>\n          <div>Sat</div>\n        </div>\n\n        <div\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(7, 100px)',\n            gap: '10px'\n          }}\n        >\n          {calendarCells.map((cell, index) => {\n            if (cell === null) {\n              return (\n                <div\n                  key={index}\n                  style={{\n                    height: '100px',\n                    border: '1px solid #ccc',\n                    background: '#b0c4de'\n                  }}\n                />\n              );\n            } else {\n              const formattedDay = String(cell).padStart(2, '0');\n              const formattedMonth = String(month + 1).padStart(2, '0');\n              const dayId = `${year}-${formattedMonth}-${formattedDay}`;\n              const backgroundColor = getDayColor(dayId);\n\n              return (\n                <div\n                  key={index}\n                  onClick={() => handleDayClick(cell)}\n                  style={{\n                    height: '100px',\n                    border: '1px solid #000',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    cursor: 'pointer',\n                    background: backgroundColor,\n                    color: '#ffffff',\n                    borderRadius: '6px',\n                    fontWeight: 'bold',\n                    transition: 'background 0.3s, transform 0.2s'\n                  }}\n                >\n                  {cell}\n                </div>\n              );\n            }\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CalendarPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}