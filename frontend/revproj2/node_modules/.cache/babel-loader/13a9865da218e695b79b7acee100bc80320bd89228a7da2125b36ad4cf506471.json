{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotificationList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getGoalsbyUserId, usernameifAuthorized, getUserByUsername } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\nfunction NotificationList() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const today = new Date();\n  const todayRes = new Date(today.getFullYear(), today.getMonth(), today.getDay());\n  const getGoals = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let goalList = await getGoalsbyUserId(user.id);\n    return goalList;\n  };\n  useEffect(() => {\n    getGoals().then(data => data.map((goal, index) => {\n      // Check if Goal was Completed Today or Before Today\n      let goalDate = new Date(goal.waterDate);\n      let diff = todayRes.getTime() - goalDate.getTime();\n      console.log(diff);\n      console.log(\"Goal: \" + goal);\n      if (diff >= 0) {\n        console.log(\"added\");\n        setGoals(prev => [goal, ...prev]);\n        console.log(goal.id);\n      }\n    }));\n  }, []);\n  console.log(goals);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal ID : \", goal.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal Date : \", goal.waterDate.toString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n_s(NotificationList, \"unVZk6oTfEFOQZ6NvI8KtfburI8=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useEffect","useState","getGoalsbyUserId","usernameifAuthorized","getUserByUsername","jsxDEV","_jsxDEV","NotificationList","_s","goals","setGoals","today","Date","todayRes","getFullYear","getMonth","getDay","getGoals","username","user","goalList","id","then","data","map","goal","index","goalDate","waterDate","diff","getTime","console","log","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotificationList.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {getGoalsbyUserId, usernameifAuthorized, getUserByUsername} from '../../API/Axios';\r\n\r\n\r\ninterface Exercise {\r\n\tduration : number;\r\n\tvolume : number;\r\n\tcalories : number;\r\n\tExerciseDate : Date;\r\n};\r\n\r\ninterface Nutrition {\r\n\tKal : number;\r\n\tfat : number;\r\n\tcarb : number;\r\n\tweight : number;\r\n\tprotein : number;\r\n\tNutritionDate : Date;\r\n};\r\n\r\ninterface Goal {\r\n\tid : number;\r\n\tuser_id : number;\r\n\tcreatedAt : Date;\r\n\tsleep : number;\r\n\twater : number;\r\n\tsleepDate : Date;\r\n\twaterDate : Date;\r\n\texercise : Exercise;\r\n\tnutrition : Nutrition;\r\n}\r\nfunction NotificationList()\r\n{\r\n\tconst [goals, setGoals] = useState<Goal[]>([]);\r\n\tconst today = new Date();\r\n\tconst todayRes = new Date(today.getFullYear(), today.getMonth(), today.getDay());\r\n\r\n\tconst getGoals = async () => {\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet goalList = await getGoalsbyUserId(user.id);\r\n\t\treturn goalList;\r\n\t}\r\n\t\t\r\n\tuseEffect( () => {\r\n\r\n\tgetGoals().then( (data) => data.map((goal : Goal, index : number) =>\r\n\t{\r\n\t\t// Check if Goal was Completed Today or Before Today\r\n\t\tlet goalDate = new Date(goal.waterDate);\r\n\t\tlet diff = todayRes.getTime() - goalDate.getTime();\r\n\t\tconsole.log(diff);\r\n\t\tconsole.log(\"Goal: \" + goal);\r\n\t\tif(diff >= 0)\r\n\t\t{\r\n\t\t\tconsole.log(\"added\");\r\n\t\t\tsetGoals((prev) => [goal,...prev]);\r\n\t\t\tconsole.log(goal.id);\r\n\t\t}\r\n\t}))\r\n\r\n\t\r\n\t},[])\r\n\tconsole.log(goals);\r\n\treturn (\r\n\t\t<div>\r\n\t\t{goals.map((goal : Goal, index : number) => (\r\n\t\t<div key = {index}>\r\n\t\t\t<h5> Goal ID : {goal.id} </h5>\r\n\t\t\t<h5> Goal Date : {(goal.waterDate).toString()} </h5>\r\n\t\t</div>\r\n\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default NotificationList;\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,gBAAgB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzF;AASA;AAaD,SAASC,gBAAgBA,CAAA,EACzB;EAAAC,EAAA;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAACD,KAAK,CAACG,WAAW,CAAC,CAAC,EAAEH,KAAK,CAACI,QAAQ,CAAC,CAAC,EAAEJ,KAAK,CAACK,MAAM,CAAC,CAAC,CAAC;EAEhF,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,QAAQ,GAAG,MAAMf,oBAAoB,CAAC,CAAC;IAC3C,IAAIgB,IAAI,GAAG,MAAMf,iBAAiB,CAACc,QAAQ,CAAC;IAC5C,IAAIE,QAAQ,GAAG,MAAMlB,gBAAgB,CAACiB,IAAI,CAACE,EAAE,CAAC;IAC9C,OAAOD,QAAQ;EAChB,CAAC;EAEDpB,SAAS,CAAE,MAAM;IAEjBiB,QAAQ,CAAC,CAAC,CAACK,IAAI,CAAGC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC,CAACC,IAAW,EAAEC,KAAc,KAChE;MACC;MACA,IAAIC,QAAQ,GAAG,IAAIf,IAAI,CAACa,IAAI,CAACG,SAAS,CAAC;MACvC,IAAIC,IAAI,GAAGhB,QAAQ,CAACiB,OAAO,CAAC,CAAC,GAAGH,QAAQ,CAACG,OAAO,CAAC,CAAC;MAClDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBE,OAAO,CAACC,GAAG,CAAC,QAAQ,GAAGP,IAAI,CAAC;MAC5B,IAAGI,IAAI,IAAI,CAAC,EACZ;QACCE,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACpBtB,QAAQ,CAAEuB,IAAI,IAAK,CAACR,IAAI,EAAC,GAAGQ,IAAI,CAAC,CAAC;QAClCF,OAAO,CAACC,GAAG,CAACP,IAAI,CAACJ,EAAE,CAAC;MACrB;IACD,CAAC,CAAC,CAAC;EAGH,CAAC,EAAC,EAAE,CAAC;EACLU,OAAO,CAACC,GAAG,CAACvB,KAAK,CAAC;EAClB,oBACCH,OAAA;IAAA4B,QAAA,EACCzB,KAAK,CAACe,GAAG,CAAC,CAACC,IAAW,EAAEC,KAAc,kBACvCpB,OAAA;MAAA4B,QAAA,gBACC5B,OAAA;QAAA4B,QAAA,GAAI,aAAW,EAACT,IAAI,CAACJ,EAAE,EAAC,GAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhC,OAAA;QAAA4B,QAAA,GAAI,eAAa,EAAET,IAAI,CAACG,SAAS,CAAEW,QAAQ,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFzCZ,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAAC9B,EAAA,CA3CQD,gBAAgB;AAAAiC,EAAA,GAAhBjC,gBAAgB;AA4CzB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}