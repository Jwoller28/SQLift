{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\frontend\\\\revproj2\\\\src\\\\Calendar\\\\InputPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUTRITION_API_KEY = 'gg1FPG2C5LRmeHth7W78aQ==AzZg9ImEsiX2oEbc';\nfunction InputPage() {\n  _s();\n  const {\n    dayId\n  } = useParams(); // e.g. \"2024-12-20\"\n  const navigate = useNavigate();\n\n  // We’ll fetch userId & goalId on mount:\n  const [userId, setUserId] = useState(null);\n  const [goalId, setGoalId] = useState(null);\n\n  // ---------- State for exercise ----------\n  const [caloriesBurned, setCaloriesBurned] = useState('');\n  const [workouts, setWorkouts] = useState([]);\n  const [time, setTime] = useState('');\n  const [totalVolume, setTotalVolume] = useState(0);\n\n  // ---------- State for sleep ----------\n  const [hoursSlept, setHoursSlept] = useState('');\n\n  // ---------- State for water ----------\n  const [waterIntake, setWaterIntake] = useState('');\n\n  // ---------- State for nutrition ----------\n  // The user’s weight, plus macros from foods\n  const [weight, setWeight] = useState('');\n\n  // Foods typed by the user\n  const [foods, setFoods] = useState([]);\n  const [userToken, setToken] = useState('');\n  const [userName, setName] = useState('');\n\n  // Summed macros from the API calls\n  const [nutritionTotals, setNutritionTotals] = useState({\n    calories: 0,\n    carbs: 0,\n    fat: 0,\n    protein: 0\n  });\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setToken(JSON.parse(token));\n    } else {\n      console.error('No token found. Please log in first.');\n      return;\n    }\n  }, []);\n  useEffect(() => {\n    const fetchMe = async () => {\n      try {\n        // 1) GET /me to get username\n        const meRes = await fetch('http://localhost:8080/me', {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${userToken}`,\n            'Access-Control-Allow-Origin': '*'\n          },\n          credentials: 'include'\n        });\n        if (!meRes.ok) {\n          throw new Error(`GET /me failed: ${meRes.status}`);\n        }\n        const username = await meRes.text(); // e.g. \"user1\"\n        setName(username);\n      } catch (err) {\n        console.error('Error fetching user/goal:', err);\n      }\n    };\n    if (userToken) {\n      fetchMe();\n    }\n  }, [userToken]);\n  useEffect(() => {\n    if (userName) {\n      fetchUsername();\n    }\n  }, [userName]);\n  useEffect(() => {\n    if (userId) {\n      fetchGoal();\n    }\n  }, [userId]);\n  const fetchUsername = async () => {\n    // 2) GET /username/{username} to get user object (including id)\n    const userRes = await fetch(`http://localhost:8080/username/${userName}`, {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    });\n    if (!userRes.ok) {\n      throw new Error(`GET /username/${userName} failed: ${userRes.status}`);\n    }\n    const userObj = await userRes.json();\n    setUserId(userObj.id);\n  };\n  const fetchGoal = async () => {\n    // 3) GET /goalUser/{userId} to get the user’s goal object (including goalId)\n    const goalRes = await fetch(`http://localhost:8080/goalUser/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    });\n    if (!goalRes.ok) {\n      throw new Error(`GET /goalUser/${userId} failed: ${goalRes.status}`);\n    }\n    const goalObj = await goalRes.json();\n    setGoalId(goalObj.id);\n    console.log(goalId);\n  };\n\n  // Recalc totalVolume whenever workouts changes\n  useEffect(() => {\n    let total = 0;\n    workouts.forEach(w => {\n      const weightNum = parseFloat(w.weight) || 0;\n      const repsNum = parseFloat(w.reps) || 0;\n      const setsNum = parseFloat(w.sets) || 0;\n      total += weightNum * repsNum * setsNum;\n    });\n    setTotalVolume(total);\n  }, [workouts]);\n\n  // Handle foods + calling the Nutrition API\n  const addFood = () => {\n    setFoods([...foods, {\n      name: ''\n    }]);\n  };\n  const updateFood = (index, value) => {\n    const updated = [...foods];\n    updated[index].name = value;\n    setFoods(updated);\n  };\n\n  // On “Fetch Nutrition” we’ll sum up all the foods from the API\n  const handleFetchNutrition = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('No token found. Please log in first.');\n      return;\n    }\n    let totalCals = 0;\n    let totalCarbs = 0;\n    let totalFat = 0;\n    let totalProtein = 0;\n    for (let i = 0; i < foods.length; i++) {\n      const foodName = foods[i].name.trim();\n      if (!foodName) continue;\n      try {\n        const response = await fetch(`https://api.calorieninjas.com/v1/nutrition?query=${encodeURIComponent(foodName)}`, {\n          headers: {\n            'X-Api-Key': NUTRITION_API_KEY\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Nutrition API failed: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data.items && data.items[0]) {\n          const item = data.items[0];\n          totalCals += item.calories || 0;\n          totalCarbs += item.carbohydrates_total_g || 0;\n          totalFat += item.fat_total_g || 0;\n          totalProtein += item.protein_g || 0;\n        }\n      } catch (err) {\n        console.error('Error fetching nutrition for', foodName, err);\n      }\n    }\n    setNutritionTotals({\n      calories: totalCals,\n      carbs: totalCarbs,\n      fat: totalFat,\n      protein: totalProtein\n    });\n    console.log('Total from foods:', {\n      calories: totalCals,\n      carbs: totalCarbs,\n      fat: totalFat,\n      protein: totalProtein\n    });\n  };\n\n  // POST new Tracker to your backend\n  const handleSave = async () => {\n    if (!userId || !goalId) {\n      console.error('User or goal ID not yet loaded. Wait or log in again.');\n      return;\n    }\n    const requestBody = {\n      appUser: {\n        id: userId\n      },\n      goal: {\n        id: goalId\n      },\n      // exercise\n      exercise: {\n        caloriesBurned: parseFloat(caloriesBurned) || 0,\n        duration: parseFloat(time) || 0,\n        volume: totalVolume,\n        exerciseDate: dayId\n      },\n      // nutrition\n      nutrition: {\n        weight: parseFloat(weight) || 0,\n        kal: parseFloat(nutritionTotals.calories.toFixed(2)),\n        carb: parseFloat(nutritionTotals.carbs.toFixed(2)),\n        fat: parseFloat(nutritionTotals.fat.toFixed(2)),\n        protein: parseFloat(nutritionTotals.protein.toFixed(2)),\n        nutritionDate: dayId\n      },\n      // sleep\n      sleep: parseFloat(hoursSlept) || 0,\n      sleepDate: dayId,\n      // water\n      water: parseFloat(waterIntake) || 0,\n      waterDate: dayId\n    };\n    try {\n      const response = await fetch('http://localhost:8080/Tracker', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userToken}`\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to create tracker. Status: ${response.status}`);\n      }\n      const created = await response.json();\n      console.log('Tracker created:', created);\n      navigate('/calendar');\n    } catch (err) {\n      console.error('Error saving tracker:', err);\n    }\n  };\n  const handleProgress = () => {\n    navigate(`/progress/${dayId}`);\n  };\n  return (\n    /*#__PURE__*/\n    // Outer gradient container — similar to CalendarPage\n    _jsxDEV(\"div\", {\n      style: {\n        padding: '0px',\n        background: 'linear-gradient(to bottom, #3370ff, #ADD8E6)',\n        color: '#fff',\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        marginTop: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'black',\n          padding: '20px',\n          borderRadius: '10px',\n          width: '80%',\n          maxWidth: '800px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#fff',\n            textAlign: 'center',\n            marginBottom: '20px'\n          },\n          children: [\"Input Progress for \", dayId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#fff',\n            marginTop: '10px'\n          },\n          children: \"Exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Calories Burned (kcal):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: caloriesBurned,\n              onChange: e => setCaloriesBurned(e.target.value),\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Total Volume: \", totalVolume]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.9em'\n            },\n            children: \"(weight \\xD7 reps \\xD7 sets)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this), workouts.map((workout, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Weight:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: workout.weight,\n              onChange: e => {\n                const val = e.target.value;\n                setWorkouts(prev => {\n                  const copy = [...prev];\n                  copy[idx].weight = val;\n                  return copy;\n                });\n              },\n              style: {\n                marginLeft: '5px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: workout.reps,\n              onChange: e => {\n                const val = e.target.value;\n                setWorkouts(prev => {\n                  const copy = [...prev];\n                  copy[idx].reps = val;\n                  return copy;\n                });\n              },\n              style: {\n                marginLeft: '5px',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Sets:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: workout.sets,\n              onChange: e => {\n                const val = e.target.value;\n                setWorkouts(prev => {\n                  const copy = [...prev];\n                  copy[idx].sets = val;\n                  return copy;\n                });\n              },\n              style: {\n                marginLeft: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setWorkouts([...workouts, {\n            weight: '',\n            reps: '',\n            sets: ''\n          }]),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#2282ff',\n            color: '#000',\n            border: 'none',\n            cursor: 'pointer',\n            margin: '5px 0',\n            borderRadius: '4px'\n          },\n          children: \"Add Workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Total Time (minutes):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: time,\n              onChange: e => setTime(e.target.value),\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#fff',\n            marginTop: '10px'\n          },\n          children: \"Sleep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Hours Slept:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: hoursSlept,\n              onChange: e => setHoursSlept(e.target.value),\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#fff',\n            marginTop: '10px'\n          },\n          children: \"Water Intake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Water Intake (fl oz.):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: waterIntake,\n              onChange: e => setWaterIntake(e.target.value),\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#fff',\n            marginTop: '10px'\n          },\n          children: \"Nutrition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '10px'\n            },\n            children: [\"Weight (lbs):\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: weight,\n              onChange: e => setWeight(e.target.value),\n              style: {\n                marginLeft: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addFood,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#2282ff',\n              color: '#000',\n              border: 'none',\n              cursor: 'pointer',\n              marginRight: '10px',\n              borderRadius: '4px'\n            },\n            children: \"Add Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleFetchNutrition,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#2282ff',\n              color: '#000',\n              border: 'none',\n              cursor: 'pointer',\n              borderRadius: '4px'\n            },\n            children: \"Fetch Nutrition from API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 9\n        }, this), foods.map((food, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: food.name,\n            onChange: e => updateFood(index, e.target.value),\n            placeholder: \"e.g. mac and cheese\",\n            style: {\n              width: '250px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Food totals (from API):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 11\n          }, this), \"Calories: \", nutritionTotals.calories, \" kcal\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 11\n          }, this), \"Carbs: \", nutritionTotals.carbs, \" g\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 11\n          }, this), \"Fat: \", nutritionTotals.fat, \" g\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 11\n          }, this), \"Protein: \", nutritionTotals.protein, \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSave,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#2282ff',\n              color: '#000',\n              border: 'none',\n              cursor: 'pointer',\n              marginRight: '10px',\n              borderRadius: '4px'\n            },\n            children: \"Save Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleProgress,\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#2282ff',\n              color: '#000',\n              border: 'none',\n              cursor: 'pointer',\n              borderRadius: '4px'\n            },\n            children: \"See Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(InputPage, \"3o88laq5YlJfOlZmXcR0Q9inW3s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = InputPage;\nexport default InputPage;\nvar _c;\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","NUTRITION_API_KEY","InputPage","_s","dayId","navigate","userId","setUserId","goalId","setGoalId","caloriesBurned","setCaloriesBurned","workouts","setWorkouts","time","setTime","totalVolume","setTotalVolume","hoursSlept","setHoursSlept","waterIntake","setWaterIntake","weight","setWeight","foods","setFoods","userToken","setToken","userName","setName","nutritionTotals","setNutritionTotals","calories","carbs","fat","protein","token","localStorage","getItem","JSON","parse","console","error","fetchMe","meRes","fetch","headers","Authorization","credentials","ok","Error","status","username","text","err","fetchUsername","fetchGoal","userRes","userObj","json","id","goalRes","goalObj","log","total","forEach","w","weightNum","parseFloat","repsNum","reps","setsNum","sets","addFood","name","updateFood","index","value","updated","handleFetchNutrition","totalCals","totalCarbs","totalFat","totalProtein","i","length","foodName","trim","response","encodeURIComponent","data","items","item","carbohydrates_total_g","fat_total_g","protein_g","handleSave","requestBody","appUser","goal","exercise","duration","volume","exerciseDate","nutrition","kal","toFixed","carb","nutritionDate","sleep","sleepDate","water","waterDate","method","body","stringify","created","handleProgress","style","padding","background","color","minHeight","display","justifyContent","alignItems","flexDirection","marginTop","children","backgroundColor","borderRadius","width","maxWidth","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","type","onChange","e","target","marginLeft","fontSize","map","workout","idx","val","prev","copy","onClick","border","cursor","margin","food","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/frontend/revproj2/src/Calendar/InputPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst NUTRITION_API_KEY = 'gg1FPG2C5LRmeHth7W78aQ==AzZg9ImEsiX2oEbc';\r\n\r\nfunction InputPage() {\r\n  const { dayId } = useParams(); // e.g. \"2024-12-20\"\r\n  const navigate = useNavigate();\r\n\r\n  // We’ll fetch userId & goalId on mount:\r\n  const [userId, setUserId] = useState<number | null>(null);\r\n  const [goalId, setGoalId] = useState<number | null>(null);\r\n\r\n  // ---------- State for exercise ----------\r\n  const [caloriesBurned, setCaloriesBurned] = useState('');\r\n  const [workouts, setWorkouts] = useState<{ weight: string; reps: string; sets: string }[]>([]);\r\n  const [time, setTime] = useState('');\r\n  const [totalVolume, setTotalVolume] = useState(0);\r\n\r\n  // ---------- State for sleep ----------\r\n  const [hoursSlept, setHoursSlept] = useState('');\r\n\r\n  // ---------- State for water ----------\r\n  const [waterIntake, setWaterIntake] = useState('');\r\n\r\n  // ---------- State for nutrition ----------\r\n  // The user’s weight, plus macros from foods\r\n  const [weight, setWeight] = useState('');\r\n\r\n  // Foods typed by the user\r\n  const [foods, setFoods] = useState<{ name: string }[]>([]);\r\n\r\n  const [userToken, setToken] = useState('');\r\n  const [userName, setName] = useState('');\r\n\r\n  // Summed macros from the API calls\r\n  const [nutritionTotals, setNutritionTotals] = useState({\r\n    calories: 0,\r\n    carbs: 0,\r\n    fat: 0,\r\n    protein: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setToken(JSON.parse(token));\r\n    } else {\r\n      console.error('No token found. Please log in first.');\r\n      return;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchMe = async () => {\r\n      try {\r\n        // 1) GET /me to get username\r\n        const meRes = await fetch('http://localhost:8080/me', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userToken}`,\r\n            'Access-Control-Allow-Origin': '*',\r\n          },\r\n          credentials: 'include',\r\n        });\r\n        if (!meRes.ok) {\r\n          throw new Error(`GET /me failed: ${meRes.status}`);\r\n        }\r\n        const username = await meRes.text(); // e.g. \"user1\"\r\n        setName(username);\r\n      } catch (err) {\r\n        console.error('Error fetching user/goal:', err);\r\n      }\r\n    };\r\n    if (userToken) {\r\n      fetchMe();\r\n    }\r\n  }, [userToken]);\r\n\r\n  useEffect(() => {\r\n    if (userName) {\r\n      fetchUsername();\r\n    }\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetchGoal();\r\n    }\r\n  }, [userId]);\r\n\r\n  const fetchUsername = async () => {\r\n    // 2) GET /username/{username} to get user object (including id)\r\n    const userRes = await fetch(`http://localhost:8080/username/${userName}`, {\r\n      headers: { Authorization: `Bearer ${userToken}` },\r\n    });\r\n    if (!userRes.ok) {\r\n      throw new Error(`GET /username/${userName} failed: ${userRes.status}`);\r\n    }\r\n    const userObj = await userRes.json();\r\n    setUserId(userObj.id);\r\n  };\r\n\r\n  const fetchGoal = async () => {\r\n    // 3) GET /goalUser/{userId} to get the user’s goal object (including goalId)\r\n    const goalRes = await fetch(`http://localhost:8080/goalUser/${userId}`, {\r\n      headers: { Authorization: `Bearer ${userToken}` },\r\n    });\r\n    if (!goalRes.ok) {\r\n      throw new Error(`GET /goalUser/${userId} failed: ${goalRes.status}`);\r\n    }\r\n    const goalObj = await goalRes.json();\r\n    setGoalId(goalObj.id);\r\n    console.log(goalId);\r\n  };\r\n\r\n  // Recalc totalVolume whenever workouts changes\r\n  useEffect(() => {\r\n    let total = 0;\r\n    workouts.forEach((w) => {\r\n      const weightNum = parseFloat(w.weight) || 0;\r\n      const repsNum = parseFloat(w.reps) || 0;\r\n      const setsNum = parseFloat(w.sets) || 0;\r\n      total += weightNum * repsNum * setsNum;\r\n    });\r\n    setTotalVolume(total);\r\n  }, [workouts]);\r\n\r\n  // Handle foods + calling the Nutrition API\r\n  const addFood = () => {\r\n    setFoods([...foods, { name: '' }]);\r\n  };\r\n\r\n  const updateFood = (index: number, value: string) => {\r\n    const updated = [...foods];\r\n    updated[index].name = value;\r\n    setFoods(updated);\r\n  };\r\n\r\n  // On “Fetch Nutrition” we’ll sum up all the foods from the API\r\n  const handleFetchNutrition = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.error('No token found. Please log in first.');\r\n      return;\r\n    }\r\n\r\n    let totalCals = 0;\r\n    let totalCarbs = 0;\r\n    let totalFat = 0;\r\n    let totalProtein = 0;\r\n\r\n    for (let i = 0; i < foods.length; i++) {\r\n      const foodName = foods[i].name.trim();\r\n      if (!foodName) continue;\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.calorieninjas.com/v1/nutrition?query=${encodeURIComponent(foodName)}`,\r\n          {\r\n            headers: {\r\n              'X-Api-Key': NUTRITION_API_KEY,\r\n            },\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`Nutrition API failed: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        if (data.items && data.items[0]) {\r\n          const item = data.items[0];\r\n          totalCals += item.calories || 0;\r\n          totalCarbs += item.carbohydrates_total_g || 0;\r\n          totalFat += item.fat_total_g || 0;\r\n          totalProtein += item.protein_g || 0;\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching nutrition for', foodName, err);\r\n      }\r\n    }\r\n\r\n    setNutritionTotals({\r\n      calories: totalCals,\r\n      carbs: totalCarbs,\r\n      fat: totalFat,\r\n      protein: totalProtein,\r\n    });\r\n\r\n    console.log('Total from foods:', {\r\n      calories: totalCals,\r\n      carbs: totalCarbs,\r\n      fat: totalFat,\r\n      protein: totalProtein,\r\n    });\r\n  };\r\n\r\n  // POST new Tracker to your backend\r\n  const handleSave = async () => {\r\n    if (!userId || !goalId) {\r\n      console.error('User or goal ID not yet loaded. Wait or log in again.');\r\n      return;\r\n    }\r\n\r\n    const requestBody = {\r\n      appUser: { id: userId },\r\n      goal: { id: goalId },\r\n\r\n      // exercise\r\n      exercise: {\r\n        caloriesBurned: parseFloat(caloriesBurned) || 0,\r\n        duration: parseFloat(time) || 0,\r\n        volume: totalVolume,\r\n        exerciseDate: dayId,\r\n      },\r\n\r\n      // nutrition\r\n      nutrition: {\r\n        weight: parseFloat(weight) || 0,\r\n        kal: parseFloat(nutritionTotals.calories.toFixed(2)),\r\n        carb: parseFloat(nutritionTotals.carbs.toFixed(2)),\r\n        fat: parseFloat(nutritionTotals.fat.toFixed(2)),\r\n        protein: parseFloat(nutritionTotals.protein.toFixed(2)),\r\n        nutritionDate: dayId,\r\n      },\r\n\r\n      // sleep\r\n      sleep: parseFloat(hoursSlept) || 0,\r\n      sleepDate: dayId,\r\n\r\n      // water\r\n      water: parseFloat(waterIntake) || 0,\r\n      waterDate: dayId,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/Tracker', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userToken}`,\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to create tracker. Status: ${response.status}`);\r\n      }\r\n\r\n      const created = await response.json();\r\n      console.log('Tracker created:', created);\r\n      navigate('/calendar');\r\n    } catch (err) {\r\n      console.error('Error saving tracker:', err);\r\n    }\r\n  };\r\n\r\n  const handleProgress = () => {\r\n    navigate(`/progress/${dayId}`);\r\n  };\r\n\r\n  return (\r\n    // Outer gradient container — similar to CalendarPage\r\n    <div\r\n      style={{\r\n        padding: '0px',\r\n        background: 'linear-gradient(to bottom, #3370ff, #ADD8E6)',\r\n        color: '#fff',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        marginTop: 0,\r\n      }}\r\n    >\r\n      {/* Black “card” container in the middle */}\r\n      <div\r\n        style={{\r\n          backgroundColor: 'black',\r\n          padding: '20px',\r\n          borderRadius: '10px',\r\n          width: '80%',\r\n          maxWidth: '800px',\r\n        }}\r\n      >\r\n        <h2 style={{ color: '#fff', textAlign: 'center', marginBottom: '20px' }}>\r\n          Input Progress for {dayId}\r\n        </h2>\r\n\r\n        <h3 style={{ color: '#fff', marginTop: '10px' }}>Exercise</h3>\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Calories Burned (kcal):\r\n            <input\r\n              type=\"number\"\r\n              value={caloriesBurned}\r\n              onChange={(e) => setCaloriesBurned(e.target.value)}\r\n              style={{ marginLeft: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <label style={{ marginRight: '10px' }}>Total Volume: {totalVolume}</label>\r\n          <span style={{ fontSize: '0.9em' }}>(weight × reps × sets)</span>\r\n        </div>\r\n\r\n        {workouts.map((workout, idx) => (\r\n          <div key={idx} style={{ marginBottom: '10px' }}>\r\n            <label style={{ marginRight: '10px' }}>\r\n              Weight:\r\n              <input\r\n                type=\"number\"\r\n                value={workout.weight}\r\n                onChange={(e) => {\r\n                  const val = e.target.value;\r\n                  setWorkouts((prev) => {\r\n                    const copy = [...prev];\r\n                    copy[idx].weight = val;\r\n                    return copy;\r\n                  });\r\n                }}\r\n                style={{ marginLeft: '5px', marginRight: '10px' }}\r\n              />\r\n            </label>\r\n            <label style={{ marginRight: '10px' }}>\r\n              Reps:\r\n              <input\r\n                type=\"number\"\r\n                value={workout.reps}\r\n                onChange={(e) => {\r\n                  const val = e.target.value;\r\n                  setWorkouts((prev) => {\r\n                    const copy = [...prev];\r\n                    copy[idx].reps = val;\r\n                    return copy;\r\n                  });\r\n                }}\r\n                style={{ marginLeft: '5px', marginRight: '10px' }}\r\n              />\r\n            </label>\r\n            <label style={{ marginRight: '10px' }}>\r\n              Sets:\r\n              <input\r\n                type=\"number\"\r\n                value={workout.sets}\r\n                onChange={(e) => {\r\n                  const val = e.target.value;\r\n                  setWorkouts((prev) => {\r\n                    const copy = [...prev];\r\n                    copy[idx].sets = val;\r\n                    return copy;\r\n                  });\r\n                }}\r\n                style={{ marginLeft: '5px' }}\r\n              />\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => setWorkouts([...workouts, { weight: '', reps: '', sets: '' }])}\r\n          style={{\r\n            padding: '10px 20px',\r\n            backgroundColor: '#2282ff',\r\n            color: '#000',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n            margin: '5px 0',\r\n            borderRadius: '4px',\r\n          }}\r\n        >\r\n          Add Workout\r\n        </button>\r\n\r\n        <div style={{ marginTop: '10px', marginBottom: '20px' }}>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Total Time (minutes):\r\n            <input\r\n              type=\"number\"\r\n              value={time}\r\n              onChange={(e) => setTime(e.target.value)}\r\n              style={{ marginLeft: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <h3 style={{ color: '#fff', marginTop: '10px' }}>Sleep</h3>\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Hours Slept:\r\n            <input\r\n              type=\"number\"\r\n              value={hoursSlept}\r\n              onChange={(e) => setHoursSlept(e.target.value)}\r\n              style={{ marginLeft: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <h3 style={{ color: '#fff', marginTop: '10px' }}>Water Intake</h3>\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Water Intake (fl oz.):\r\n            <input\r\n              type=\"number\"\r\n              value={waterIntake}\r\n              onChange={(e) => setWaterIntake(e.target.value)}\r\n              style={{ marginLeft: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <h3 style={{ color: '#fff', marginTop: '10px' }}>Nutrition</h3>\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <label style={{ marginRight: '10px' }}>\r\n            Weight (lbs):\r\n            <input\r\n              type=\"number\"\r\n              value={weight}\r\n              onChange={(e) => setWeight(e.target.value)}\r\n              style={{ marginLeft: '10px' }}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        {/* Foods + API */}\r\n        <div style={{ marginBottom: '10px' }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={addFood}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#2282ff',\r\n              color: '#000',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n              marginRight: '10px',\r\n              borderRadius: '4px',\r\n            }}\r\n          >\r\n            Add Food\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleFetchNutrition}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#2282ff',\r\n              color: '#000',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n              borderRadius: '4px',\r\n            }}\r\n          >\r\n            Fetch Nutrition from API\r\n          </button>\r\n        </div>\r\n\r\n        {foods.map((food, index) => (\r\n          <div key={index} style={{ marginBottom: '5px' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={food.name}\r\n              onChange={(e) => updateFood(index, e.target.value)}\r\n              placeholder=\"e.g. mac and cheese\"\r\n              style={{ width: '250px' }}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        {/* Show the totals from the API calls */}\r\n        <p style={{ marginTop: '10px' }}>\r\n          <strong>Food totals (from API):</strong>\r\n          <br />\r\n          Calories: {nutritionTotals.calories} kcal\r\n          <br />\r\n          Carbs: {nutritionTotals.carbs} g\r\n          <br />\r\n          Fat: {nutritionTotals.fat} g\r\n          <br />\r\n          Protein: {nutritionTotals.protein} g\r\n        </p>\r\n\r\n        <div style={{ marginTop: '20px' }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleSave}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#2282ff',\r\n              color: '#000',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n              marginRight: '10px',\r\n              borderRadius: '4px',\r\n            }}\r\n          >\r\n            Save Progress\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleProgress}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#2282ff',\r\n              color: '#000',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n              borderRadius: '4px',\r\n            }}\r\n          >\r\n            See Progress\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}