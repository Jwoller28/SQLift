{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brets\\\\Documents\\\\Revature-Projects\\\\RevP2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\UserLogin\\\\UserManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport UserLogin from './UserLogin';\nimport { AuthContext } from '../UserContext/UserContext';\n\n// Contains the logic for the UserLogin page and what to do with the input/submit button interaction\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"Login must be used within an AuthProvider\");\n  }\n  const {\n    dispatch\n  } = context;\n  function handleSubmit(event) {\n    event.preventDefault();\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        username,\n        password\n      }\n    });\n    console.log(username, password);\n  }\n  function handleRegister(event) {\n    event.preventDefault();\n  }\n\n  // This return statement uses UserLogin page as its display and populates the data it needs to display.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserLogin, {\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(UserManagement, \"fFpkzZ4Jrs2Ys5oTAYGR8TMlalk=\");\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useContext","useState","UserLogin","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","_s","username","setUsername","password","setPassword","context","Error","dispatch","handleSubmit","event","preventDefault","type","payload","console","log","handleRegister","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brets/Documents/Revature-Projects/RevP2/revProj2/frontend/revproj2/src/Components/UserLogin/UserManagement.tsx"],"sourcesContent":["import React, { FormEvent, useContext, useState } from 'react'\r\nimport UserLogin from './UserLogin';\r\nimport { AuthContext } from '../UserContext/UserContext';\r\n\r\n\r\n// Contains the logic for the UserLogin page and what to do with the input/submit button interaction\r\nfunction UserManagement() {\r\n    const[username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n\r\n    const context = useContext(AuthContext);\r\n    if(!context){\r\n        throw new Error(\"Login must be used within an AuthProvider\")\r\n    }\r\n    const {dispatch} = context;\r\n\r\n    function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n        dispatch({type: 'LOGIN', payload: {username, password}})\r\n        console.log(username, password);\r\n    }\r\n\r\n    function handleRegister(event: FormEvent){\r\n        event.preventDefault();\r\n        \r\n    }\r\n\r\n// This return statement uses UserLogin page as its display and populates the data it needs to display.\r\n  return (\r\n    <>\r\n        <UserLogin username={username} setUsername={setUsername} password={password} setPassword={setPassword} handleSubmit={handleSubmit}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserManagement"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,WAAW,QAAQ,4BAA4B;;AAGxD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAK,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMa,OAAO,GAAGd,UAAU,CAACG,WAAW,CAAC;EACvC,IAAG,CAACW,OAAO,EAAC;IACR,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EAChE;EACA,MAAM;IAACC;EAAQ,CAAC,GAAGF,OAAO;EAE1B,SAASG,YAAYA,CAACC,KAAgB,EAAC;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,QAAQ,CAAC;MAACI,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAE;QAACX,QAAQ;QAAEE;MAAQ;IAAC,CAAC,CAAC;IACxDU,OAAO,CAACC,GAAG,CAACb,QAAQ,EAAEE,QAAQ,CAAC;EACnC;EAEA,SAASY,cAAcA,CAACN,KAAgB,EAAC;IACrCA,KAAK,CAACC,cAAc,CAAC,CAAC;EAE1B;;EAEJ;EACE,oBACEd,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACIpB,OAAA,CAACH,SAAS;MAACQ,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA,WAAY;MAACC,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA,WAAY;MAACI,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBACtI,CAAC;AAEP;AAACpB,EAAA,CA3BQD,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AA6BvB,eAAeA,cAAc;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}