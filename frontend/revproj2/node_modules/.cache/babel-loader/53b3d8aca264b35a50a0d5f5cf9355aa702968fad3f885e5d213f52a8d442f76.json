{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brets\\\\Documents\\\\Revature-Projects\\\\RevP2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\UserLogin\\\\UserManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport UserLogin from './UserLogin';\nimport { AuthContext } from '../UserContext/UserContext';\nimport { useNavigate } from 'react-router-dom';\n\n// Contains the logic for the UserLogin page and what to do with the input/submit button interaction\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserManagement() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [data, setData] = useState(null); // Created to use Jest with api call\n\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"Login must be used within an AuthProvider\");\n  }\n  const {\n    dispatch\n  } = context;\n\n  // Function to handle submit event on login page\n  function handleSubmit(event) {\n    event.preventDefault();\n    // Test api for Jest\n    let tokenRes;\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      console.log('Here is the response from initial login', response.text().then(async result => {\n        tokenRes = result;\n        console.log('Here is the token returned:', tokenRes);\n        const responseT = await fetch('http://localhost:8080/me', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${tokenRes}`\n          }\n        });\n      }));\n      console.log('Here is the token before checking me endpoint: ', tokenRes);\n      console.log('Here is the respose from token check:', responseT.json());\n      //const d = response.json().then((result) => console.log(result));\n      // eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyNjYiLCJpYXQiOjE3MzUyNDM0NzMsImV4cCI6MTczNTI0NzA3M30.Ti_lV-Uir_A7BW7WFOzcZOfuwoek35WYHYQpBnnq5m0\n    };\n    fetchData();\n    dispatch({\n      type: 'LOGIN',\n      payload: {\n        username,\n        password\n      }\n    });\n    // console.log(username, password);\n  }\n\n  // Function to handle register button on login page, redirect to register page.\n  const navigate = useNavigate();\n  function handleRegister(event) {\n    event.preventDefault();\n    navigate('/register');\n  }\n\n  // This return statement uses UserLogin page as its display and populates the data it needs to display.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UserLogin, {\n      username: username,\n      setUsername: setUsername,\n      password: password,\n      setPassword: setPassword,\n      handleSubmit: handleSubmit,\n      handleRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(UserManagement, \"7lAUSRp2gRFmTkq+xVjbofTthHc=\", false, function () {\n  return [useNavigate];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useContext","useState","UserLogin","AuthContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","_s","username","setUsername","password","setPassword","data","setData","context","Error","dispatch","handleSubmit","event","preventDefault","tokenRes","fetchData","response","fetch","method","headers","body","JSON","stringify","console","log","text","then","result","responseT","Authorization","json","type","payload","navigate","handleRegister","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brets/Documents/Revature-Projects/RevP2/revProj2/frontend/revproj2/src/Components/UserLogin/UserManagement.tsx"],"sourcesContent":["import React, { FormEvent, useContext, useState } from 'react'\r\nimport UserLogin from './UserLogin';\r\nimport { AuthContext } from '../UserContext/UserContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n// Contains the logic for the UserLogin page and what to do with the input/submit button interaction\r\nfunction UserManagement() {\r\n    const[username, setUsername] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[data, setData] = useState<any | null>(null); // Created to use Jest with api call\r\n\r\n    const context = useContext(AuthContext);\r\n    if(!context){\r\n        throw new Error(\"Login must be used within an AuthProvider\")\r\n    }\r\n    const {dispatch} = context;\r\n\r\n    // Function to handle submit event on login page\r\n    function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n        // Test api for Jest\r\n        let tokenRes: string;\r\n        const fetchData = async () => {\r\n            const response = await fetch('http://localhost:8080/login', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username, password})\r\n            });\r\n            console.log('Here is the response from initial login',response.text().then(async (result) =>{\r\n                tokenRes = result;\r\n                console.log('Here is the token returned:', tokenRes);\r\n                const responseT = await fetch('http://localhost:8080/me', {\r\n                    method: 'GET',\r\n                    headers:{\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${tokenRes}`}\r\n                });\r\n            }));\r\n            console.log('Here is the token before checking me endpoint: ', tokenRes);\r\n            \r\n            console.log('Here is the respose from token check:',responseT.json());\r\n            //const d = response.json().then((result) => console.log(result));\r\n            // eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyNjYiLCJpYXQiOjE3MzUyNDM0NzMsImV4cCI6MTczNTI0NzA3M30.Ti_lV-Uir_A7BW7WFOzcZOfuwoek35WYHYQpBnnq5m0\r\n        }\r\n        fetchData();\r\n        dispatch({type: 'LOGIN', payload: {username, password}})\r\n        // console.log(username, password);\r\n    }\r\n\r\n    // Function to handle register button on login page, redirect to register page.\r\n    const navigate = useNavigate();\r\n    function handleRegister(event: FormEvent){\r\n        event.preventDefault();\r\n        navigate('/register');\r\n    }\r\n\r\n// This return statement uses UserLogin page as its display and populates the data it needs to display.\r\n  return (\r\n    <>\r\n        <UserLogin username={username} setUsername={setUsername} password={password} setPassword={setPassword} handleSubmit={handleSubmit} handleRegister={handleRegister}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserManagement"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}