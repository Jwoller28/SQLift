{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotificationList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getGoalsbyUserId, usernameifAuthorized, getUserByUsername } from '../../API/Axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotificationList(prop) {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const today = new Date();\n  const navigate = useNavigate();\n  const todayRes = new Date(today.getFullYear(), today.getMonth(), today.getDay());\n  useEffect(() => {\n    const getGoalsBeforeToday = async () => {\n      let username = await usernameifAuthorized();\n      let user = await getUserByUsername(username);\n      let goalList = await getGoalsbyUserId(user.id);\n      return await goalList.filter(beforeDate);\n      function beforeDate(goal) {\n        let goalDate = new Date(goal.waterDate);\n        let diff = todayRes.getTime() - goalDate.getTime();\n        if (diff >= 0) {\n          return goal;\n        }\n      }\n    };\n    getGoalsBeforeToday().then(data => {\n      setGoals(data);\n    });\n  }, []);\n  console.log(goals ? true : false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" test \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}\n_s(NotificationList, \"52K+6PKaptNsDCsMJGWcZsdWZaI=\", false, function () {\n  return [useNavigate];\n});\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useEffect","useState","getGoalsbyUserId","usernameifAuthorized","getUserByUsername","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationList","prop","_s","goals","setGoals","today","Date","navigate","todayRes","getFullYear","getMonth","getDay","getGoalsBeforeToday","username","user","goalList","id","filter","beforeDate","goal","goalDate","waterDate","diff","getTime","then","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/frontend/revproj2/src/Components/Inbox/NotificationList.tsx"],"sourcesContent":["import {useEffect, useState, MouseEventHandler} from 'react';\r\nimport {getGoalsbyUserId, usernameifAuthorized, getUserByUsername} from '../../API/Axios';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {Exercise, Nutrition, Goal} from './Inbox';\r\n\r\n\r\ninterface NotiListProp {\r\n\thandleClick : MouseEventHandler<HTMLDivElement>;\r\n}\r\nfunction NotificationList(prop : NotiListProp)\r\n{\r\n\tconst [goals, setGoals] = useState<Goal[]>([]);\r\n\tconst today = new Date();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst todayRes = new Date(today.getFullYear(), today.getMonth(), today.getDay());\r\n\t\t\r\n\tuseEffect( () => {\r\n\t\t\r\n\tconst getGoalsBeforeToday = async () => {\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet goalList = await getGoalsbyUserId(user.id);\r\n\r\n\t\treturn await goalList.filter(beforeDate);\r\n\r\n\t\tfunction beforeDate (goal : Goal)\r\n\t\t{\r\n\t\t\tlet goalDate = new Date(goal.waterDate);\r\n\t\t\tlet diff = todayRes.getTime() - goalDate.getTime();\r\n\t\t\tif(diff >= 0)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn goal;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\tgetGoalsBeforeToday().then( (data) => {setGoals(data)})\r\n\t},[])\r\n\t\tconsole.log(goals ? true : false);\r\n\r\n\treturn(\r\n\t<>\r\n\t<p> test </p>\r\n\t{/*<div>\r\n\t\tgoals.map((goal : Goal, index : number) => (\r\n\t\t<div a-key = {goal.id} onClick = {prop.handleClick}>\r\n\t\t\t<h5> Goal ID : {goal.id} </h5>\r\n\t\t\t<h5> Goal Date : {(goal.waterDate).toString()} </h5>\r\n\t\t</div>\r\n\t\t)\r\n\t\t)\r\n\t\t}\r\n\t\t</div>*/}\r\n\t</>\r\n\t)\r\n}\r\nexport default NotificationList;\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAA0B,OAAO;AAC5D,SAAQC,gBAAgB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAO,iBAAiB;AACzF,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAO7C,SAASC,gBAAgBA,CAACC,IAAmB,EAC7C;EAAAC,EAAA;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAMc,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,QAAQ,GAAG,IAAIF,IAAI,CAACD,KAAK,CAACI,WAAW,CAAC,CAAC,EAAEJ,KAAK,CAACK,QAAQ,CAAC,CAAC,EAAEL,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC;EAEhFrB,SAAS,CAAE,MAAM;IAEjB,MAAMsB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAIC,QAAQ,GAAG,MAAMpB,oBAAoB,CAAC,CAAC;MAC3C,IAAIqB,IAAI,GAAG,MAAMpB,iBAAiB,CAACmB,QAAQ,CAAC;MAC5C,IAAIE,QAAQ,GAAG,MAAMvB,gBAAgB,CAACsB,IAAI,CAACE,EAAE,CAAC;MAE9C,OAAO,MAAMD,QAAQ,CAACE,MAAM,CAACC,UAAU,CAAC;MAExC,SAASA,UAAUA,CAAEC,IAAW,EAChC;QACC,IAAIC,QAAQ,GAAG,IAAId,IAAI,CAACa,IAAI,CAACE,SAAS,CAAC;QACvC,IAAIC,IAAI,GAAGd,QAAQ,CAACe,OAAO,CAAC,CAAC,GAAGH,QAAQ,CAACG,OAAO,CAAC,CAAC;QAClD,IAAGD,IAAI,IAAI,CAAC,EACX;UACC,OAAOH,IAAI;QACZ;MACF;IACA,CAAC;IACDP,mBAAmB,CAAC,CAAC,CAACY,IAAI,CAAGC,IAAI,IAAK;MAACrB,QAAQ,CAACqB,IAAI,CAAC;IAAA,CAAC,CAAC;EACxD,CAAC,EAAC,EAAE,CAAC;EACJC,OAAO,CAACC,GAAG,CAACxB,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;EAElC,oBACAN,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACA/B,OAAA;MAAA+B,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,gBAWX,CAAC;AAEJ;AAAC9B,EAAA,CA9CQF,gBAAgB;EAAA,QAIPL,WAAW;AAAA;AAAAsC,EAAA,GAJpBjC,gBAAgB;AA+CzB,eAAeA,gBAAgB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}