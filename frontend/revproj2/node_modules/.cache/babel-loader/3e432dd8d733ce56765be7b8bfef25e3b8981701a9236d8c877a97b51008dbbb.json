{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brets\\\\Documents\\\\Revature-Projects\\\\RevP2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\UserContext\\\\UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      // Get API call of user being logged in\n      return {\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: null\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\n// context type\n\nexport const AuthContext = /*#__PURE__*/createContext(null);\nconst initialAuthState = {\n  user: null\n};\n\n// Provider component\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = () => setIsAuthenticated(true);\n  const logout = () => setIsAuthenticated(false);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// export const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\n//     const [state, dispatch] = useReducer(authReducer, initialAuthState);\n\n//     return(\n//         <AuthContext.Provider value={{state, dispatch}}>\n//             {children}\n//         </AuthContext.Provider>\n//     )\n// }\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","authReducer","state","action","type","user","payload","Error","AuthContext","initialAuthState","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/brets/Documents/Revature-Projects/RevP2/revProj2/frontend/revproj2/src/Components/UserContext/UserContext.tsx"],"sourcesContent":["import { createContext, ReactNode, useContext, useReducer, useState } from \"react\";\r\n\r\ninterface User{\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\ninterface AuthState{\r\n    user: User | null;\r\n    // login: (username: string, password: string) => void;\r\n    // logout: () => void;\r\n}\r\n\r\ntype AuthAction = {type: 'LOGIN'; payload: User} | {type: 'LOGOUT'};\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState =>{\r\n    switch(action.type){\r\n        case 'LOGIN':   // Get API call of user being logged in\r\n            return {user: action.payload};\r\n        case 'LOGOUT':\r\n            return {user: null};\r\n        default:\r\n            throw new Error(`Unhandled action type: ${(action as AuthAction).type}`);\r\n    }\r\n}\r\n\r\n\r\n// context type\r\ninterface AuthContextType{\r\n    // state: AuthState;\r\n    // dispatch: React.Dispatch<AuthAction>;\r\n    isAuthenticated: boolean;\r\n    login: () => void;\r\n    logout: () => void;\r\n    \r\n}\r\n\r\nexport const AuthContext = createContext<AuthContextType | null> (null);\r\n\r\nconst initialAuthState: AuthState = {user: null};\r\n\r\n// Provider component\r\n\r\ninterface AuthProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\n\r\nexport const AuthProvider = ({children}: {children: ReactNode}) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const login = () => setIsAuthenticated(true);\r\n    const logout = () => setIsAuthenticated(false);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{isAuthenticated, login, logout}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if(!context){\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n// export const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\r\n//     const [state, dispatch] = useReducer(authReducer, initialAuthState);\r\n\r\n//     return(\r\n//         <AuthContext.Provider value={{state, dispatch}}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     )\r\n// }"],"mappings":";;;AAAA,SAASA,aAAa,EAAaC,UAAU,EAAcC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAenF,MAAMC,WAAW,GAAGA,CAACC,KAAgB,EAAEC,MAAkB,KAAe;EACpE,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,OAAO;MAAI;MACZ,OAAO;QAACC,IAAI,EAAEF,MAAM,CAACG;MAAO,CAAC;IACjC,KAAK,QAAQ;MACT,OAAO;QAACD,IAAI,EAAE;MAAI,CAAC;IACvB;MACI,MAAM,IAAIE,KAAK,CAAC,0BAA2BJ,MAAM,CAAgBC,IAAI,EAAE,CAAC;EAChF;AACJ,CAAC;;AAGD;;AAUA,OAAO,MAAMI,WAAW,gBAAGZ,aAAa,CAA0B,IAAI,CAAC;AAEvE,MAAMa,gBAA2B,GAAG;EAACJ,IAAI,EAAE;AAAI,CAAC;;AAEhD;;AAOA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAACC;AAA+B,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMiB,KAAK,GAAGA,CAAA,KAAMD,kBAAkB,CAAC,IAAI,CAAC;EAC5C,MAAME,MAAM,GAAGA,CAAA,KAAMF,kBAAkB,CAAC,KAAK,CAAC;EAE9C,oBACId,OAAA,CAACQ,WAAW,CAACS,QAAQ;IAACC,KAAK,EAAE;MAACL,eAAe;MAAEE,KAAK;MAAEC;IAAM,CAAE;IAAAL,QAAA,EACzDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAV,EAAA,CAXYF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAazB,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG7B,UAAU,CAACW,WAAW,CAAC;EACvC,IAAG,CAACkB,OAAO,EAAC;IACR,MAAM,IAAInB,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOmB,OAAO;AAClB,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAD,GAAA,CAhBaD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}