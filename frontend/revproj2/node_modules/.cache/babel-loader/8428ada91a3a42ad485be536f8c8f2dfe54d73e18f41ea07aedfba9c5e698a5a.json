{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jwoll\\\\Desktop\\\\code\\\\revTraining\\\\2126-Java-Full-Stack-PEP\\\\projects\\\\project_2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\EventsContext\\\\EventsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EventsContext = /*#__PURE__*/createContext(undefined);\nexport function EventsProvider({\n  children\n}) {\n  _s();\n  const [events, setEvents] = useState([]);\n\n  // Add an event with a new ID\n  function addEvent(day, title, description) {\n    const newId = events.length > 0 ? events[events.length - 1].id + 1 : 1;\n    const newEvent = {\n      id: newId,\n      day,\n      title,\n      description\n    };\n    setEvents(prev => [...prev, newEvent]);\n  }\n\n  // Simple helper to filter events by day\n  function getEventsForDay(day) {\n    return events.filter(event => event.day === day);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsContext.Provider, {\n    value: {\n      events,\n      addEvent,\n      getEventsForDay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n// A helper hook, so we don’t have to do `useContext(EventsContext)` repeatedly\n_s(EventsProvider, \"fh+hzEDekCPeegwQh0J56A4r3Ew=\");\n_c = EventsProvider;\nexport function useEvents() {\n  _s2();\n  const context = useContext(EventsContext);\n  if (!context) {\n    throw new Error('useEvents must be used within an EventsProvider');\n  }\n  return context;\n}\n_s2(useEvents, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"EventsProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","EventsContext","undefined","EventsProvider","children","_s","events","setEvents","addEvent","day","title","description","newId","length","id","newEvent","prev","getEventsForDay","filter","event","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useEvents","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/jwoll/Desktop/code/revTraining/2126-Java-Full-Stack-PEP/projects/project_2/revProj2/frontend/revproj2/src/Components/EventsContext/EventsContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\ntype EventType = {\r\n  id: number;\r\n  day: string;\r\n  title: string;\r\n  description: string;\r\n};\r\n\r\ntype EventsContextType = {\r\n  events: EventType[];\r\n  addEvent: (day: string, title: string, description: string) => void;\r\n  getEventsForDay: (day: string) => EventType[];\r\n};\r\n\r\nexport const EventsContext = createContext<EventsContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport function EventsProvider({ children }: { children: React.ReactNode }) {\r\n  const [events, setEvents] = useState<EventType[]>([]);\r\n\r\n  // Add an event with a new ID\r\n  function addEvent(day: string, title: string, description: string) {\r\n    const newId = events.length > 0 ? events[events.length - 1].id + 1 : 1;\r\n    const newEvent: EventType = { id: newId, day, title, description };\r\n    setEvents((prev) => [...prev, newEvent]);\r\n  }\r\n\r\n  // Simple helper to filter events by day\r\n  function getEventsForDay(day: string) {\r\n    return events.filter((event) => event.day === day);\r\n  }\r\n\r\n  return (\r\n    <EventsContext.Provider value={{ events, addEvent, getEventsForDay }}>\r\n      {children}\r\n    </EventsContext.Provider>\r\n  );\r\n}\r\n\r\n// A helper hook, so we don’t have to do `useContext(EventsContext)` repeatedly\r\nexport function useEvents() {\r\n  const context = useContext(EventsContext);\r\n  if (!context) {\r\n    throw new Error('useEvents must be used within an EventsProvider');\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAenE,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CACxCM,SACF,CAAC;AAED,OAAO,SAASC,cAAcA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EAC1E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAc,EAAE,CAAC;;EAErD;EACA,SAASW,QAAQA,CAACC,GAAW,EAAEC,KAAa,EAAEC,WAAmB,EAAE;IACjE,MAAMC,KAAK,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC,GAAGP,MAAM,CAACA,MAAM,CAACO,MAAM,GAAG,CAAC,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC;IACtE,MAAMC,QAAmB,GAAG;MAAED,EAAE,EAAEF,KAAK;MAAEH,GAAG;MAAEC,KAAK;MAAEC;IAAY,CAAC;IAClEJ,SAAS,CAAES,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,QAAQ,CAAC,CAAC;EAC1C;;EAEA;EACA,SAASE,eAAeA,CAACR,GAAW,EAAE;IACpC,OAAOH,MAAM,CAACY,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACV,GAAG,KAAKA,GAAG,CAAC;EACpD;EAEA,oBACET,OAAA,CAACC,aAAa,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEf,MAAM;MAAEE,QAAQ;MAAES;IAAgB,CAAE;IAAAb,QAAA,EAClEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;;AAEA;AAAApB,EAAA,CAtBgBF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAuB9B,OAAO,SAASwB,SAASA,CAAA,EAAG;EAAAC,GAAA;EAC1B,MAAMC,OAAO,GAAG/B,UAAU,CAACG,aAAa,CAAC;EACzC,IAAI,CAAC4B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,SAAS;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}