{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\PostFeed\\\\PostList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getPosts, getPostPhoto } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const goalIds = [];\n\n  // Start polling function with delay\n  const startPolling = async () => {\n    while (true) {\n      try {\n        const newPost = await getPosts();\n        if (!newPost) {\n          throw Error;\n        } else {\n          if (goalIds.includes(newPost.goal_id) === false) {\n            console.log(\"New Post: \" + newPost);\n            goalIds.push(newPost.goal_id);\n            let photo_ = await getPostPhoto(newPost.photo);\n            newPost.photo_obj = photo_;\n            setPosts(prevPosts => [newPost, ...prevPosts]); // Appends at the start of the list\n          }\n        }\n      } catch (error) {\n        console.error(\"Error during polling:\", error);\n      }\n\n      // Delay between polling requests (e.g., 5 seconds)\n      await new Promise(resolve => setTimeout(resolve, 10000)); // Adjust polling interval as needed\n    }\n  };\n  useEffect(() => {\n    startPolling(); // Start polling when component mounts\n  }, []); // Empty dependency array ensures it runs only once\n\n  function binToUrl(byteArray) {\n    const url = URL.createObjectURL(byteArray);\n    return url;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Consumed Messages: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Goal ID: \", post.goal_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", post.user_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Messge Text: \", post.message_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          loading: \"lazy\",\n          src: binToUrl(post.photo_obj),\n          width: \"200\",\n          height: \"auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","getPosts","getPostPhoto","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","goalIds","startPolling","newPost","Error","includes","goal_id","console","log","push","photo_","photo","photo_obj","prevPosts","error","Promise","resolve","setTimeout","binToUrl","byteArray","url","URL","createObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","index","user_id","message_text","loading","src","width","height","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/frontend/revproj2/src/Components/PostFeed/PostList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getPosts, getPostPhoto } from '../../API/Axios';\r\n\r\nexport interface Post {\r\n    photo_obj? : any;\r\n    goal_id:number;\r\n    user_id:number;\r\n    message_text:string;\r\n    photo: string;\r\n\r\n}\r\n\r\nfunction PostList() {\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n  const goalIds : number[] = [];\r\n\r\n  // Start polling function with delay\r\n  const startPolling = async () => {\r\n      while (true) {\r\n          try {\r\n              const newPost = await getPosts();\r\n              if(!newPost)\r\n              {\r\n                throw Error;\r\n              }\r\n\t      else\r\n\t      {\r\n\t\t      if(goalIds.includes(newPost.goal_id) === false)\r\n\t\t\t {\r\n              \t\tconsole.log(\"New Post: \" + newPost)\r\n\t\t\tgoalIds.push(newPost.goal_id);\r\n\t\t\tlet photo_ =  await getPostPhoto(newPost.photo);\r\n\t\t\tnewPost.photo_obj = photo_;\r\n              \t\tsetPosts((prevPosts) => [newPost, ...prevPosts]); // Appends at the start of the list\r\n\t      \t\t}\r\n\t\t}\r\n\t      }\r\n          catch (error) {\r\n              console.error(\"Error during polling:\", error);\r\n          }\r\n\r\n          // Delay between polling requests (e.g., 5 seconds)\r\n          await new Promise((resolve) => setTimeout(resolve, 10000)); // Adjust polling interval as needed\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n      startPolling(); // Start polling when component mounts\r\n  }, []); // Empty dependency array ensures it runs only once\r\n\r\n\r\n  function binToUrl(byteArray : any): string {\r\n    const url = URL.createObjectURL(byteArray);\r\n    return url;\r\n}\r\n\r\n    return (\r\n      <div>\r\n          <h3>Consumed Messages: </h3>\r\n            <div>\r\n            {posts.map((post,index) => (\r\n                      <div key = {index}>\r\n                        <h5>Goal ID: {post.goal_id}</h5>\r\n                        <p>User ID: {post.user_id}</p>\r\n                        <p>Messge Text: {post.message_text}</p>\r\n                        <img loading=\"lazy\" src = {binToUrl(post.photo_obj)} width=\"200\" height=\"auto\"></img>\r\n                        </div>\r\n                  ))}\r\n            </div>\r\n      </div>\r\n      )\r\n    }\r\n  \r\n  export default PostList\r\n\r\n  \r\n  \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}