{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brets\\\\Documents\\\\Revature-Projects\\\\RevP2\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\SetUserGoals\\\\SetUserGoals.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SetUserGoals() {\n  _s();\n  const navigate = useNavigate();\n\n  // --------------- Existing states ---------------\n  const [kal, setCalories] = useState(0);\n  const [carb, setCarbs] = useState(0);\n  const [fat, setFat] = useState(0);\n  const [protein, setProtein] = useState(0);\n  const [userWeight, setUserWeight] = useState(0);\n  const [caloriesBurned, setCaloriesBurned] = useState(0);\n  const [volume, setVolume] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [water, setWater] = useState(0);\n  const [sleep, setSleep] = useState(0);\n  const [token, setToken] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [id, setUserId] = useState(null);\n\n  // --------------- NEW STATE for the “end date” ---------------\n  const [endDate, setEndDate] = useState('');\n  // We'll store a string like \"2024-12-30\" from the <input type=\"date\" />\n\n  useEffect(() => {\n    // Grab token & user ID from localStorage, etc.\n    const sessionTok = localStorage.getItem('token');\n    if (sessionTok) {\n      setToken(JSON.parse(sessionTok));\n    }\n    // If you also store userId in localStorage, parse that too, etc.\n  }, []);\n  useEffect(() => {\n    // Validate the token => /me => setUsername\n    const userValidToken = async () => {\n      if (!token) return;\n      try {\n        const responseValidToken = await fetch('http://localhost:8080/me', {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const userTokenName = await responseValidToken.text();\n        setUsername(userTokenName);\n      } catch (err) {\n        console.error('Error verifying token:', err);\n      }\n    };\n    userValidToken();\n  }, [token]);\n\n  // Once we have username, fetch user ID\n  useEffect(() => {\n    if (!username || !token) return;\n    const getUserId = async () => {\n      try {\n        const userIdResponse = await fetch(`http://localhost:8080/username/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!userIdResponse.ok) {\n          alert(`Something went wrong getting user id ERROR CODE: ${userIdResponse.status}`);\n        } else {\n          const userIdData = await userIdResponse.json();\n          setUserId(userIdData.id);\n          setPassword(userIdData.password);\n        }\n      } catch (err) {\n        console.error('Error getting userId:', err);\n      }\n    };\n    getUserId();\n  }, [username, token]);\n\n  // --------------- Build final objects ---------------\n  const nutrition = {\n    kal,\n    fat,\n    carb,\n    weight: userWeight,\n    protein,\n    // NEW: add the date if you want\n    nutritionDate: endDate\n  };\n  const exercise = {\n    duration,\n    volume,\n    caloriesBurned,\n    exerciseDate: endDate // store endDate if you want\n  };\n  const createdAt = Date.now(); // or new Date() if needed\n\n  // The user object\n  const user = {\n    id: id,\n    username: username,\n    password: password\n  };\n  function handleGoalSubmit(event) {\n    event.preventDefault();\n\n    // Build the goal body\n    const body = {\n      createdAt,\n      user,\n      sleep,\n      sleepDate: endDate,\n      // store the end date for sleep\n      water,\n      waterDate: endDate,\n      // store the end date for water\n      nutrition,\n      exercise\n    };\n    const postGoals = async () => {\n      try {\n        const goalResponse = await fetch('http://localhost:8080/goal', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(body)\n        });\n        if (!goalResponse.ok) {\n          alert(`Failed to create goal. Status: ${goalResponse.status}`);\n        } else {\n          const data = await goalResponse.json();\n          console.log('Here is the successful goal return: ', data);\n          navigate('/calendar');\n        }\n      } catch (err) {\n        console.error('Error creating goal:', err);\n      }\n    };\n    postGoals();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleGoalSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nutrition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Calories\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: kal,\n          onChange: e => setCalories(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Carbs\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: carb,\n          onChange: e => setCarbs(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Fat\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: fat,\n          onChange: e => setFat(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Protein\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: protein,\n          onChange: e => setProtein(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Weight\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userWeight,\n          onChange: e => setUserWeight(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Calories To Burn For Goal\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: caloriesBurned,\n          onChange: e => setCaloriesBurned(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Volume\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: volume,\n          onChange: e => setVolume(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Workout Duration\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: duration,\n          onChange: e => setDuration(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Water Intake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Daily Water Intake in oz.\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: water,\n          onChange: e => setWater(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sleep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Number of Hours of Sleep\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sleep,\n          onChange: e => setSleep(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Goal End Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Pick a date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(SetUserGoals, \"B86KuMTaHIE1IFtxajw4vL9wZ04=\", false, function () {\n  return [useNavigate];\n});\n_c = SetUserGoals;\nexport default SetUserGoals;\nvar _c;\n$RefreshReg$(_c, \"SetUserGoals\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SetUserGoals","_s","navigate","kal","setCalories","carb","setCarbs","fat","setFat","protein","setProtein","userWeight","setUserWeight","caloriesBurned","setCaloriesBurned","volume","setVolume","duration","setDuration","water","setWater","sleep","setSleep","token","setToken","username","setUsername","password","setPassword","id","setUserId","endDate","setEndDate","sessionTok","localStorage","getItem","JSON","parse","userValidToken","responseValidToken","fetch","headers","Authorization","userTokenName","text","err","console","error","getUserId","userIdResponse","ok","alert","status","userIdData","json","nutrition","weight","nutritionDate","exercise","exerciseDate","createdAt","Date","now","user","handleGoalSubmit","event","preventDefault","body","sleepDate","waterDate","postGoals","goalResponse","method","stringify","data","log","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["C:/Users/brets/Documents/Revature-Projects/RevP2/revProj2/frontend/revproj2/src/Components/SetUserGoals/SetUserGoals.tsx"],"sourcesContent":["import React, { FormEvent, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SetUserGoals() {\r\n  const navigate = useNavigate();\r\n\r\n  // --------------- Existing states ---------------\r\n  const [kal, setCalories] = useState(0);\r\n  const [carb, setCarbs] = useState(0);\r\n  const [fat, setFat] = useState(0);\r\n  const [protein, setProtein] = useState(0);\r\n  const [userWeight, setUserWeight] = useState(0);\r\n\r\n  const [caloriesBurned, setCaloriesBurned] = useState(0);\r\n  const [volume, setVolume] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n\r\n  const [water, setWater] = useState(0);\r\n  const [sleep, setSleep] = useState(0);\r\n\r\n  const [token, setToken] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [id, setUserId] = useState<number | null>(null);\r\n\r\n  // --------------- NEW STATE for the “end date” ---------------\r\n  const [endDate, setEndDate] = useState(''); \r\n  // We'll store a string like \"2024-12-30\" from the <input type=\"date\" />\r\n\r\n  useEffect(() => {\r\n    // Grab token & user ID from localStorage, etc.\r\n    const sessionTok = localStorage.getItem('token');\r\n    if (sessionTok) {\r\n      setToken(JSON.parse(sessionTok));\r\n    }\r\n    // If you also store userId in localStorage, parse that too, etc.\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Validate the token => /me => setUsername\r\n    const userValidToken = async () => {\r\n      if (!token) return;\r\n      try {\r\n        const responseValidToken = await fetch('http://localhost:8080/me', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const userTokenName = await responseValidToken.text();\r\n        setUsername(userTokenName);\r\n      } catch (err) {\r\n        console.error('Error verifying token:', err);\r\n      }\r\n    };\r\n    userValidToken();\r\n  }, [token]);\r\n\r\n  // Once we have username, fetch user ID\r\n  useEffect(() => {\r\n    if (!username || !token) return;\r\n\r\n    const getUserId = async () => {\r\n      try {\r\n        const userIdResponse = await fetch(\r\n          `http://localhost:8080/username/${username}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        if (!userIdResponse.ok) {\r\n          alert(\r\n            `Something went wrong getting user id ERROR CODE: ${userIdResponse.status}`\r\n          );\r\n        } else {\r\n          const userIdData = await userIdResponse.json();\r\n          setUserId(userIdData.id);\r\n          setPassword(userIdData.password);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error getting userId:', err);\r\n      }\r\n    };\r\n    getUserId();\r\n  }, [username, token]);\r\n\r\n  // --------------- Build final objects ---------------\r\n  const nutrition = {\r\n    kal,\r\n    fat,\r\n    carb,\r\n    weight: userWeight,\r\n    protein,\r\n    // NEW: add the date if you want\r\n    nutritionDate: endDate, \r\n  };\r\n\r\n  const exercise = {\r\n    duration,\r\n    volume,\r\n    caloriesBurned,\r\n    exerciseDate: endDate, // store endDate if you want\r\n  };\r\n\r\n  const createdAt = Date.now(); // or new Date() if needed\r\n\r\n  // The user object\r\n  const user = {\r\n    id: id,\r\n    username: username,\r\n    password: password,\r\n  };\r\n\r\n  function handleGoalSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    // Build the goal body\r\n    const body = {\r\n      createdAt,\r\n      user,\r\n      sleep,\r\n      sleepDate: endDate,  // store the end date for sleep\r\n      water,\r\n      waterDate: endDate,  // store the end date for water\r\n      nutrition,\r\n      exercise,\r\n    };\r\n\r\n    const postGoals = async () => {\r\n      try {\r\n        const goalResponse = await fetch('http://localhost:8080/goal', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n        if (!goalResponse.ok) {\r\n          alert(`Failed to create goal. Status: ${goalResponse.status}`);\r\n        } else {\r\n          const data = await goalResponse.json();\r\n          console.log('Here is the successful goal return: ', data);\r\n          navigate('/calendar');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error creating goal:', err);\r\n      }\r\n    };\r\n    postGoals();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleGoalSubmit}>\r\n        <h1>Nutrition</h1>\r\n        <label>\r\n          Calories\r\n          <input\r\n            type=\"number\"\r\n            value={kal}\r\n            onChange={(e) => setCalories(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Carbs\r\n          <input\r\n            type=\"number\"\r\n            value={carb}\r\n            onChange={(e) => setCarbs(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Fat\r\n          <input\r\n            type=\"number\"\r\n            value={fat}\r\n            onChange={(e) => setFat(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Protein\r\n          <input\r\n            type=\"number\"\r\n            value={protein}\r\n            onChange={(e) => setProtein(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Current Weight\r\n          <input\r\n            type=\"number\"\r\n            value={userWeight}\r\n            onChange={(e) => setUserWeight(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <h1>Exercise</h1>\r\n        <label>\r\n          Calories To Burn For Goal\r\n          <input\r\n            type=\"number\"\r\n            value={caloriesBurned}\r\n            onChange={(e) => setCaloriesBurned(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Volume\r\n          <input\r\n            type=\"number\"\r\n            value={volume}\r\n            onChange={(e) => setVolume(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <label>\r\n          Workout Duration\r\n          <input\r\n            type=\"number\"\r\n            value={duration}\r\n            onChange={(e) => setDuration(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <h1>Water Intake</h1>\r\n        <label>\r\n          Daily Water Intake in oz.\r\n          <input\r\n            type=\"number\"\r\n            value={water}\r\n            onChange={(e) => setWater(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <h1>Sleep</h1>\r\n        <label>\r\n          Number of Hours of Sleep\r\n          <input\r\n            type=\"number\"\r\n            value={sleep}\r\n            onChange={(e) => setSleep(Number(e.target.value))}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        {/* NEW: End date input */}\r\n        <h2>Goal End Date</h2>\r\n        <label>\r\n          Pick a date:\r\n          <input\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Submit Goals</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SetUserGoals;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}