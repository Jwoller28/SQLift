{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\COMPONENTS\\\\POSTFEED\\\\PostFeedSmart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PostFeedDumb from './PostFeedDumb';\nimport { getPosts, sendPost } from '../../API/Axios';\nimport PostList from './PostList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostFeedSmart() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [goalId, setGoalId] = useState(0);\n  const [user, setUser] = useState(0);\n  const [file, setFile] = useState(undefined);\n  const [posts, setPosts] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('goal_id', goalId.toString());\n    formData.append('user_id', user.toString());\n    formData.append('message_text', message);\n    if (file) {\n      formData.append('photo', file);\n    }\n\n    // console.log(\"Before\");\n    // console.log(formData.get(\"goal_id\"));\n    // console.log(formData.get(\"user_id\"));\n    // console.log(formData.get(\"message_text\"));\n    // console.log(formData.get(\"photo\"));\n    try {\n      await sendPost(formData);\n      console.log(\"During\");\n    } catch (error) {\n      if (error.request)\n        // Request made with no Response Back\n        {\n          console.log(error);\n        }\n    }\n    try {\n      const getPostList = async () => {\n        const data = await getPosts();\n        setPosts(data);\n      };\n    } catch (error) {\n      if (error.request)\n        // Request made with no Response Back\n        {\n          console.log(error);\n        }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PostFeedDumb, {\n      setFile: setFile,\n      setMessage: setMessage,\n      setGoalId: setGoalId,\n      setUser: setUser,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(PostFeedSmart, \"WgGmp6ld1DJzBuEafM7VnqBzJTA=\");\n_c = PostFeedSmart;\nexport default PostFeedSmart;\nvar _c;\n$RefreshReg$(_c, \"PostFeedSmart\");","map":{"version":3,"names":["React","useState","PostFeedDumb","getPosts","sendPost","PostList","jsxDEV","_jsxDEV","PostFeedSmart","_s","message","setMessage","goalId","setGoalId","user","setUser","file","setFile","undefined","posts","setPosts","handleSubmit","e","preventDefault","formData","FormData","append","toString","console","log","error","request","getPostList","data","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/COMPONENTS/POSTFEED/PostFeedSmart.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport PostFeedDumb from './PostFeedDumb';\r\nimport { useRef } from 'react';\r\nimport {getPosts, sendPost } from '../../API/Axios';\r\nimport PostList, { Post } from './PostList';\r\n\r\n\r\nfunction PostFeedSmart() {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [goalId, setGoalId] = useState(0);\r\n    const [user, setUser] = useState(0);\r\n    const [file, setFile] = useState<File | undefined>(undefined);\r\n    const [posts, setPosts] = useState<Post[]>([]);\r\n\r\n    const handleSubmit = async (e : any) => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('goal_id', goalId.toString());\r\n        formData.append('user_id', user.toString());\r\n        formData.append('message_text', message);\r\n    \r\n        if (file) {\r\n            formData.append('photo', file);\r\n        }\r\n\r\n        // console.log(\"Before\");\r\n        // console.log(formData.get(\"goal_id\"));\r\n        // console.log(formData.get(\"user_id\"));\r\n        // console.log(formData.get(\"message_text\"));\r\n        // console.log(formData.get(\"photo\"));\r\n        try{\r\n            await sendPost(formData);\r\n            console.log(\"During\");\r\n            \r\n          }\r\n          catch(error : any)\r\n          {\r\n            if(error.request) // Request made with no Response Back\r\n            {\r\n                console.log(error);\r\n            }\r\n          }\r\n          try{\r\n            const getPostList = async () =>{\r\n            const data = await getPosts();\r\n            setPosts(data);\r\n            }\r\n          }\r\n          catch(error : any)\r\n          {\r\n            if(error.request) // Request made with no Response Back\r\n            {\r\n                console.log(error);\r\n            }\r\n          }\r\n\r\n        }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <PostFeedDumb setFile = {setFile} setMessage = {setMessage} setGoalId= {setGoalId} setUser = {setUser} onSubmit = {handleSubmit}></PostFeedDumb>\r\n\r\n            <div>\r\n                <PostList posts = {posts} ></PostList>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default PostFeedSmart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAAQC,QAAQ,EAAEC,QAAQ,QAAQ,iBAAiB;AACnD,OAAOC,QAAQ,MAAgB,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAmBiB,SAAS,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMoB,YAAY,GAAG,MAAOC,CAAO,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEd,MAAM,CAACe,QAAQ,CAAC,CAAC,CAAC;IAC7CH,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAACa,QAAQ,CAAC,CAAC,CAAC;IAC3CH,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEhB,OAAO,CAAC;IAExC,IAAIM,IAAI,EAAE;MACNQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,IAAI,CAAC;IAClC;;IAEA;IACA;IACA;IACA;IACA;IACA,IAAG;MACC,MAAMZ,QAAQ,CAACoB,QAAQ,CAAC;MACxBI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IAEvB,CAAC,CACD,OAAMC,KAAW,EACjB;MACE,IAAGA,KAAK,CAACC,OAAO;QAAE;QAClB;UACIH,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;QACtB;IACF;IACA,IAAG;MACD,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAW;QAC/B,MAAMC,IAAI,GAAG,MAAM9B,QAAQ,CAAC,CAAC;QAC7BiB,QAAQ,CAACa,IAAI,CAAC;MACd,CAAC;IACH,CAAC,CACD,OAAMH,KAAW,EACjB;MACE,IAAGA,KAAK,CAACC,OAAO;QAAE;QAClB;UACIH,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;QACtB;IACF;EAEF,CAAC;EAGL,oBACIvB,OAAA;IAAA2B,QAAA,gBACI3B,OAAA,CAACL,YAAY;MAACe,OAAO,EAAIA,OAAQ;MAACN,UAAU,EAAIA,UAAW;MAACE,SAAS,EAAGA,SAAU;MAACE,OAAO,EAAIA,OAAQ;MAACoB,QAAQ,EAAId;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAEhJhC,OAAA;MAAA2B,QAAA,eACI3B,OAAA,CAACF,QAAQ;QAACc,KAAK,EAAIA;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9B,EAAA,CA7DQD,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA8DtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}