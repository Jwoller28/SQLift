{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\src\\\\COMPONENTS\\\\POSTFEED\\\\PostList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostList(prop) {\n  function binaryStringToImage(binaryString) {\n    // Convert binary string to Uint8Array\n    const byteArray = new Uint8Array(binaryString.length / 8);\n    for (let i = 0; i < binaryString.length; i += 8) {\n      byteArray[i / 8] = parseInt(binaryString.slice(i, i + 8), 2);\n    }\n\n    // Create a Blob from the Uint8Array\n    const blob = new Blob([byteArray], {\n      type: 'image/jpeg'\n    }); // Adjust type as needed\n\n    // Create an Object URL from the Blob\n    const url = URL.createObjectURL(blob);\n\n    // Return the image src\n    return url;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Consumed Messages: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), prop.posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Post ID: \", post.post_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Goal ID: \", post.goal_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", post.user_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Messge Text: \", post.message_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: binaryStringToImage(post.photo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PostList","prop","binaryStringToImage","binaryString","byteArray","Uint8Array","length","i","parseInt","slice","blob","Blob","type","url","URL","createObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","posts","map","post","index","post_id","goal_id","user_id","message_text","src","photo","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/src/COMPONENTS/POSTFEED/PostList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getPosts } from '../../API/Axios';\r\n\r\nexport interface Post {\r\n    post_id:number;\r\n    goal_id:number;\r\n    user_id:number;\r\n    message_text:string;\r\n    photo:any;\r\n\r\n}\r\n\r\ninterface PostListProp {\r\n    posts : Post[]\r\n}\r\nfunction PostList(prop: PostListProp) {\r\n\r\n    function binaryStringToImage(binaryString : string) {\r\n        // Convert binary string to Uint8Array\r\n        const byteArray = new Uint8Array(binaryString.length / 8);\r\n        for (let i = 0; i < binaryString.length; i += 8) {\r\n          byteArray[i / 8] = parseInt(binaryString.slice(i, i + 8), 2);\r\n        }\r\n      \r\n        // Create a Blob from the Uint8Array\r\n        const blob = new Blob([byteArray], { type: 'image/jpeg' }); // Adjust type as needed\r\n      \r\n        // Create an Object URL from the Blob\r\n        const url = URL.createObjectURL(blob);\r\n      \r\n        // Return the image src\r\n        return url;\r\n      }\r\n    \r\n    return (\r\n      <div>\r\n          <h3>Consumed Messages: </h3>\r\n                  {prop.posts.map((post,index) => (\r\n                      <div>\r\n                        <h3>{index}</h3>\r\n                        <h4>Post ID: {post.post_id}</h4>\r\n                        <h5>Goal ID: {post.goal_id}</h5>\r\n                        <p>User ID: {post.user_id}</p>\r\n                        <p>Messge Text: {post.message_text}</p>\r\n                        <img src = {binaryStringToImage(post.photo)}></img>\r\n                        </div>\r\n                  ))}\r\n\r\n      </div>\r\n      )\r\n    }\r\n  \r\n  export default PostList\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAelD,SAASC,QAAQA,CAACC,IAAkB,EAAE;EAElC,SAASC,mBAAmBA,CAACC,YAAqB,EAAE;IAChD;IACA,MAAMC,SAAS,GAAG,IAAIC,UAAU,CAACF,YAAY,CAACG,MAAM,GAAG,CAAC,CAAC;IACzD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,YAAY,CAACG,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;MAC/CH,SAAS,CAACG,CAAC,GAAG,CAAC,CAAC,GAAGC,QAAQ,CAACL,YAAY,CAACM,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9D;;IAEA;IACA,MAAMG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACP,SAAS,CAAC,EAAE;MAAEQ,IAAI,EAAE;IAAa,CAAC,CAAC,CAAC,CAAC;;IAE5D;IACA,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;;IAErC;IACA,OAAOG,GAAG;EACZ;EAEF,oBACEd,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBnB,IAAI,CAACoB,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAACC,KAAK,kBACvBzB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAKQ;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBrB,OAAA;QAAAiB,QAAA,GAAI,WAAS,EAACO,IAAI,CAACE,OAAO;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCrB,OAAA;QAAAiB,QAAA,GAAI,WAAS,EAACO,IAAI,CAACG,OAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCrB,OAAA;QAAAiB,QAAA,GAAG,WAAS,EAACO,IAAI,CAACI,OAAO;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BrB,OAAA;QAAAiB,QAAA,GAAG,eAAa,EAACO,IAAI,CAACK,YAAY;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCrB,OAAA;QAAK8B,GAAG,EAAI3B,mBAAmB,CAACqB,IAAI,CAACO,KAAK;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAET,CAAC;AAER;AAACW,EAAA,GAnCI/B,QAAQ;AAqCf,eAAeA,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}