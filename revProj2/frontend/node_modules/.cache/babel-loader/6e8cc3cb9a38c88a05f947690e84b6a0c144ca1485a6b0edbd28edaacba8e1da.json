{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\COMPONENTS\\\\POSTFEED\\\\PostFeedSmart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PostFeedDumb from './PostFeedDumb';\nimport { useRef } from 'react';\nimport { sendPost } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostFeedSmart() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [goalId, setGoalId] = useState(0);\n  const [user, setUser] = useState(0);\n  const form = useRef(undefined); //more react friendly way of getting document objects\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData(form.current);\n    let photo = formData.get(\"img_url\");\n    const reader = new FileReader();\n    reader.onloadend = async () => {\n      let blobPhoto = reader.result;\n\n      // Create a Post object to send as JSON\n      let post = {\n        goal_id: parseInt(formData.get(\"goal_id\")),\n        user_id: parseInt(formData.get(\"user_id\")),\n        message_text: formData.get(\"message_text\"),\n        photo: blobPhoto // Attach the Base64 photo string\n      };\n      try {\n        await sendPost(post);\n      } catch (error) {\n        if (error.request)\n          // Request made with no Response Back\n          {\n            console.log(error);\n          }\n      }\n    };\n    reader.readAsDataURL(photo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PostFeedDumb, {\n      formRef: form,\n      setMessage: setMessage,\n      setGoalId: setGoalId,\n      setUser: setUser,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(PostFeedSmart, \"vsie6J/A3EdCRXyAWLRyyK3vBfc=\");\n_c = PostFeedSmart;\nexport default PostFeedSmart;\nvar _c;\n$RefreshReg$(_c, \"PostFeedSmart\");","map":{"version":3,"names":["React","useState","PostFeedDumb","useRef","sendPost","jsxDEV","_jsxDEV","PostFeedSmart","_s","message","setMessage","goalId","setGoalId","user","setUser","form","undefined","handleSubmit","e","preventDefault","formData","FormData","current","photo","get","reader","FileReader","onloadend","blobPhoto","result","post","goal_id","parseInt","user_id","message_text","error","request","console","log","readAsDataURL","children","formRef","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/COMPONENTS/POSTFEED/PostFeedSmart.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport PostFeedDumb from './PostFeedDumb';\r\nimport { useRef } from 'react';\r\nimport {Post, sendPost } from '../../API/Axios';\r\n\r\n\r\nfunction PostFeedSmart() {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [goalId, setGoalId] = useState(0);\r\n    const [user, setUser] = useState(0);\r\n    const form = useRef<HTMLFormElement | undefined>(undefined); //more react friendly way of getting document objects\r\n    \r\n\r\n    const handleSubmit = async (e : any) => {\r\n        e.preventDefault();\r\n        const formData = new FormData(form.current);\r\n        let photo = formData.get(\"img_url\") as File;\r\n\r\n        const reader = new FileReader();\r\n        reader.onloadend = async () => {\r\n            let blobPhoto = reader.result as string;\r\n\r\n             // Create a Post object to send as JSON\r\n        let post: Post = {\r\n                goal_id: parseInt(formData.get(\"goal_id\") as string),\r\n                user_id: parseInt(formData.get(\"user_id\") as string),\r\n                message_text: formData.get(\"message_text\") as string,\r\n                photo: blobPhoto,  // Attach the Base64 photo string\r\n            };\r\n\r\n        try{\r\n            await sendPost(post);\r\n            \r\n          }\r\n          catch(error : any)\r\n          {\r\n            if(error.request) // Request made with no Response Back\r\n            {\r\n                console.log(error);\r\n            }\r\n          }\r\n        }\r\n          reader.readAsDataURL(photo);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PostFeedDumb formRef = {form} setMessage = {setMessage} setGoalId= {setGoalId} setUser = {setUser} onSubmit = {handleSubmit}></PostFeedDumb>\r\n        </div>\r\n    )\r\n}\r\nexport default PostFeedSmart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAAcC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMc,IAAI,GAAGZ,MAAM,CAA8Ba,SAAS,CAAC,CAAC,CAAC;;EAG7D,MAAMC,YAAY,GAAG,MAAOC,CAAO,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACN,IAAI,CAACO,OAAO,CAAC;IAC3C,IAAIC,KAAK,GAAGH,QAAQ,CAACI,GAAG,CAAC,SAAS,CAAS;IAE3C,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,YAAY;MAC3B,IAAIC,SAAS,GAAGH,MAAM,CAACI,MAAgB;;MAEtC;MACL,IAAIC,IAAU,GAAG;QACTC,OAAO,EAAEC,QAAQ,CAACZ,QAAQ,CAACI,GAAG,CAAC,SAAS,CAAW,CAAC;QACpDS,OAAO,EAAED,QAAQ,CAACZ,QAAQ,CAACI,GAAG,CAAC,SAAS,CAAW,CAAC;QACpDU,YAAY,EAAEd,QAAQ,CAACI,GAAG,CAAC,cAAc,CAAW;QACpDD,KAAK,EAAEK,SAAS,CAAG;MACvB,CAAC;MAEL,IAAG;QACC,MAAMxB,QAAQ,CAAC0B,IAAI,CAAC;MAEtB,CAAC,CACD,OAAMK,KAAW,EACjB;QACE,IAAGA,KAAK,CAACC,OAAO;UAAE;UAClB;YACIC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;UACtB;MACF;IACF,CAAC;IACCV,MAAM,CAACc,aAAa,CAAChB,KAAK,CAAC;EACjC,CAAC;EAED,oBACIjB,OAAA;IAAAkC,QAAA,eACIlC,OAAA,CAACJ,YAAY;MAACuC,OAAO,EAAI1B,IAAK;MAACL,UAAU,EAAIA,UAAW;MAACE,SAAS,EAAGA,SAAU;MAACE,OAAO,EAAIA,OAAQ;MAAC4B,QAAQ,EAAIzB;IAAa;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5I,CAAC;AAEd;AAACtC,EAAA,CA5CQD,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AA6CtB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}