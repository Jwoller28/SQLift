{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/posts\";\nexport const sendMessage = async post => {\n  // Convert photo to Base64 if it's a Blob\n  if (post.photo instanceof Blob) {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const base64Image = reader.result;\n      const jsonData = {\n        ...post,\n        photo: base64Image // Include Base64 string in the JSON\n      };\n      sendJsonData(jsonData);\n    };\n    reader.readAsDataURL(post.photo); // Convert to Base64\n  } else {\n    sendJsonData(post); // If photo is already Base64 or URL\n  }\n};\nconst sendJsonData = async post => {\n  try {\n    await axios.post(API_URL, post, {\n      headers: {\n        \"Content-Type\": \"application/json\" // Send as JSON\n      }\n    });\n    console.log(\"Message sent successfully!\");\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n  }\n};","map":{"version":3,"names":["axios","API_URL","sendMessage","post","photo","Blob","reader","FileReader","onloadend","base64Image","result","jsonData","sendJsonData","readAsDataURL","headers","console","log","error"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/API/Axios.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/posts\";\r\n\r\nexport interface Post {\r\n    post_id?: number;\r\n    goal_id: number;\r\n    user_id: number;\r\n    message_text: string;\r\n    photo: string;  // Photo will be a Base64 string or URL\r\n}\r\n\r\nexport const sendMessage = async (post: Post) => {\r\n    // Convert photo to Base64 if it's a Blob\r\n    if (post.photo instanceof Blob) {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            const base64Image = reader.result as string;\r\n            const jsonData = {\r\n                ...post,\r\n                photo: base64Image  // Include Base64 string in the JSON\r\n            };\r\n            sendJsonData(jsonData);\r\n        };\r\n        reader.readAsDataURL(post.photo);  // Convert to Base64\r\n    } else {\r\n        sendJsonData(post);  // If photo is already Base64 or URL\r\n    }\r\n};\r\n\r\nconst sendJsonData = async (post: Post) => {\r\n    try {\r\n        await axios.post(API_URL, post, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"  // Send as JSON\r\n            }\r\n        });\r\n        console.log(\"Message sent successfully!\");\r\n    } catch (error) {\r\n        console.error(\"Error sending message:\", error);\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAUjD,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAU,IAAK;EAC7C;EACA,IAAIA,IAAI,CAACC,KAAK,YAAYC,IAAI,EAAE;IAC5B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACrB,MAAMC,WAAW,GAAGH,MAAM,CAACI,MAAgB;MAC3C,MAAMC,QAAQ,GAAG;QACb,GAAGR,IAAI;QACPC,KAAK,EAAEK,WAAW,CAAE;MACxB,CAAC;MACDG,YAAY,CAACD,QAAQ,CAAC;IAC1B,CAAC;IACDL,MAAM,CAACO,aAAa,CAACV,IAAI,CAACC,KAAK,CAAC,CAAC,CAAE;EACvC,CAAC,MAAM;IACHQ,YAAY,CAACT,IAAI,CAAC,CAAC,CAAE;EACzB;AACJ,CAAC;AAED,MAAMS,YAAY,GAAG,MAAOT,IAAU,IAAK;EACvC,IAAI;IACA,MAAMH,KAAK,CAACG,IAAI,CAACF,OAAO,EAAEE,IAAI,EAAE;MAC5BW,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB,CAAE;MACxC;IACJ,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAClD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}