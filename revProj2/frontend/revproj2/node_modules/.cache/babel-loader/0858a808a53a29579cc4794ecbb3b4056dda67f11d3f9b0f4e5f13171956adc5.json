{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotiViewer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getUserByUsername, usernameifAuthorized, getTrackers } from '../../API/Axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, PointElement, LineElement, Title, ToolTip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotiViewer(prop) {\n  _s();\n  ChartJS.register(CategoryScale, LienarScale, PointElement, LineElement, Title, ToolTip, Legend);\n\n  // Get Trackers for that Goal\n  const [trackers, setTrackers] = useState([]);\n  const getData = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let trackers = await getTrackers(user.id, prop.goalId);\n    return trackers;\n  };\n  console.log(getData());\n  // Separate the Data into Arrays for each Value Tracked::\n  let data = getData();\n  const datavis = {\n    trackDate: [],\n    burnedCal: [],\n    duration: [],\n    volume: [],\n    carb: [],\n    fat: [],\n    kal: [],\n    protein: [],\n    weight: [],\n    sleep: [],\n    water: []\n  };\n  data.then(trackerList => {\n    trackerList.map(tracker => {\n      datavis.trackDate.push(tracker.createdAt);\n      datavis.burnedCal.push(tracker.exercise.caloriesBurned);\n      datavis.duration.push(tracker.exercise.duration);\n      datavis.volume.push(tracker.exercise.volume);\n      datavis.carb.push(tracker.nutrition.carb);\n      datavis.fat.push(tracker.nutrition.fat);\n      datavis.kal.push(tracker.nutrition.kal);\n      datavis.protein.push(tracker.nutrition.protein);\n      datavis.weight.push(tracker.nutrition.weight);\n      datavis.sleep.push(tracker.sleep);\n      datavis.water.push(tracker.water);\n      console.log(tracker.exercise.caloriesBurned);\n    });\n    console.log(\"Tracker Data: \" + datavis);\n  });\n  const charts = Object.keys(datavis).filter(key => key != \"trackDate\").map(key => {\n    const chartData = {\n      labels: datavis.trackDate,\n      datasets: [{\n        label: key,\n        data: datavis[key],\n        fill: false\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      scales: {\n        x: {\n          type: 'category'\n        },\n        y: {\n          type: 'linear'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: prop.clicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: charts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n}\n_s(NotiViewer, \"3GoinzD/VF37bZnMKi5DcZT1aV4=\");\n_c = NotiViewer;\nexport default NotiViewer;\nvar _c;\n$RefreshReg$(_c, \"NotiViewer\");","map":{"version":3,"names":["useState","getUserByUsername","usernameifAuthorized","getTrackers","Line","Chart","ChartJS","CategoryScale","PointElement","LineElement","Title","ToolTip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","NotiViewer","prop","_s","register","LienarScale","trackers","setTrackers","getData","username","user","id","goalId","console","log","data","datavis","trackDate","burnedCal","duration","volume","carb","fat","kal","protein","weight","sleep","water","then","trackerList","map","tracker","push","createdAt","exercise","caloriesBurned","nutrition","charts","Object","keys","filter","key","chartData","labels","datasets","label","fill","chartOptions","responsive","scales","x","type","y","children","fileName","_jsxFileName","lineNumber","columnNumber","options","clicked","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotiViewer.tsx"],"sourcesContent":["import {useState, useEffect, useRef} from 'react'\r\nimport {getUserByUsername, usernameifAuthorized, getTrackers} from '../../API/Axios'\r\nimport {Tracker, Goal, Exercise, Nutrition} from './Inbox';\r\nimport {Line} from 'react-chartjs-2';\r\nimport {Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, ToolTip, Legend} from 'chart.js';\r\n\r\n\r\ninterface viewerProp {\r\n\tgoalId : number;\r\n\tclicked : boolean;\r\n}\r\n\r\nfunction NotiViewer(prop : viewerProp)\r\n{\r\n\r\n\tChartJS.register(\r\n\t\tCategoryScale,\r\n\t\tLienarScale,\r\n\t\tPointElement,\r\n\t\tLineElement,\r\n\t\tTitle,\r\n\t\tToolTip,\r\n\t\tLegend\r\n\t);\r\n\r\n\t// Get Trackers for that Goal\r\n\tconst [trackers, setTrackers] = useState([]);\r\n\r\n\tconst getData = async () => {\r\n\t\t\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet trackers = await getTrackers(user.id, prop.goalId);\r\n\t\treturn trackers;\r\n\t}\r\n\tconsole.log(getData());\r\n\t// Separate the Data into Arrays for each Value Tracked::\r\n\tlet data = getData();\r\n\tconst datavis : {\r\n\t[key : string] : number[] | Date[];\r\n\ttrackDate : Date[];\r\n\tburnedCal : number[];\r\n\tduration : number[];\r\n\tvolume : number[];\r\n\tcarb: number[];\r\n\tfat: number[];\t\r\n\tkal: number[];\r\n\tprotein: number[];\t\t\r\n\tweight: number[];\r\n\tsleep: number[];\r\n\twater: number[]\r\n\t} = {\r\n\t\ttrackDate : [],\r\n\t\tburnedCal:[],\r\n\t\tduration:[],\r\n\t\tvolume:[],\r\n\t\tcarb:[],\r\n\t\tfat:[],\r\n\t\tkal:[],\r\n\t\tprotein:[],\r\n\t\tweight:[],\r\n\t\tsleep:[],\r\n\t\twater:[]\r\n\t}\r\n\t\r\n\tdata.then( (trackerList : Object[]) => {\r\n\t\ttrackerList.map( (tracker : any) => {\r\n\t\tdatavis.trackDate.push(tracker.createdAt);\r\n\t\tdatavis.burnedCal.push(tracker.exercise.caloriesBurned);\r\n\t\tdatavis.duration.push(tracker.exercise.duration);\r\n\t\tdatavis.volume.push(tracker.exercise.volume);\r\n\t\tdatavis.carb.push(tracker.nutrition.carb);\r\n\t\tdatavis.fat.push(tracker.nutrition.fat);\r\n\t\tdatavis.kal.push(tracker.nutrition.kal);\r\n\t\tdatavis.protein.push(tracker.nutrition.protein);\r\n\t\tdatavis.weight.push(tracker.nutrition.weight);\r\n\t\tdatavis.sleep.push(tracker.sleep);\r\n\t\tdatavis.water.push(tracker.water);\r\n\t\tconsole.log(tracker.exercise.caloriesBurned);\r\n\t\t})\r\n\t\tconsole.log(\"Tracker Data: \" + datavis);\r\n\t})\r\n\r\n\tconst charts = Object.keys(datavis).filter((key)=> key != \"trackDate\").map((key) =>\r\n\t\t{\r\n\t\t\tconst chartData = {\r\n\t\t\t\tlabels:datavis.trackDate,\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\tlabel: key,\r\n\t\t\t\t\tdata: datavis[key],\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t\tconst chartOptions = {\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tscales : {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\ttype : 'category' as const\r\n\t\t\t\t\t},\r\n\t\t\t\t\ty: {\r\n\t\t\t\t\ttype : 'linear' as const\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div key = {key} >\r\n\t\t\t\t<h3>{key}</h3>\r\n\t\t\t\t<Line \r\n\t\t\t\tdata = {chartData}\r\n\t\t\t\toptions={chartOptions}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\r\n\treturn (\t\r\n\t\r\n\t\t<>\r\n\t\t{prop.clicked && <div>{charts}</div>}\t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default NotiViewer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}