{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotiViewer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getUserByUsername, usernameifAuthorized, getTrackers } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotiViewer(prop) {\n  _s();\n  // Get Trackers for that Goal\n  const [trackers, setTrackers] = useState([]);\n  const getData = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let trackers = await getTrackers(user.id, prop.goalId);\n    return trackers;\n  };\n  console.log(getData());\n  // Separate the Data into Arrays for each Value Tracked::\n  let data = getData();\n  const datavis = {\n    burnedCal: [],\n    duration: [],\n    volume: [],\n    carb: [],\n    fat: [],\n    kal: [],\n    protein: [],\n    weight: [],\n    sleep: [],\n    water: []\n  };\n  data.then(trackerList => {\n    trackerList.map(tracker => {\n      datavis.burnedCal.push(tracker.exercise.caloriesBurned);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: prop.clicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Test \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(NotiViewer, \"3GoinzD/VF37bZnMKi5DcZT1aV4=\");\n_c = NotiViewer;\nexport default NotiViewer;\nvar _c;\n$RefreshReg$(_c, \"NotiViewer\");","map":{"version":3,"names":["useState","getUserByUsername","usernameifAuthorized","getTrackers","jsxDEV","_jsxDEV","Fragment","_Fragment","NotiViewer","prop","_s","trackers","setTrackers","getData","username","user","id","goalId","console","log","data","datavis","burnedCal","duration","volume","carb","fat","kal","protein","weight","sleep","water","then","trackerList","map","tracker","push","exercise","caloriesBurned","children","clicked","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotiViewer.tsx"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport {getUserByUsername, usernameifAuthorized, getTrackers} from '../../API/Axios'\r\nimport {Tracker, Goal, Exercise, Nutrition} from './Inbox';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\ninterface viewerProp {\r\n\tgoalId : number;\r\n\tclicked : boolean;\r\n}\r\n\r\nfunction NotiViewer(prop : viewerProp)\r\n{\r\n\t// Get Trackers for that Goal\r\n\tconst [trackers, setTrackers] = useState([]);\r\n\r\n\tconst getData = async () => {\r\n\t\t\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet trackers = await getTrackers(user.id, prop.goalId);\r\n\t\treturn trackers;\r\n\t}\r\n\tconsole.log(getData());\r\n\t// Separate the Data into Arrays for each Value Tracked::\r\n\tlet data = getData();\r\n\tconst datavis = {\r\n\tburnedCal : [],\r\n\tduration : [],\r\n\tvolume : [],\r\n\tcarb: [],\r\n\tfat: [],\t\r\n\tkal: [],\r\n\tprotein: [],\t\t\r\n\tweight: [],\r\n\tsleep: [],\r\n\twater: []\r\n\t};\r\n\t\r\n\tdata.then( (trackerList) => {\r\n\t\ttrackerList.map( (tracker : any) => {\r\n\t\tdatavis.burnedCal.push(tracker.exercise.caloriesBurned);\r\n\t\t})\r\n\t})\r\n\treturn (\r\n\t\t<>\r\n\t\t{prop.clicked &&\r\n\t\t<div> Test </div>\r\n\t\t}\r\n\t\t</> \r\n\t)\r\n}\r\n\r\nexport default NotiViewer\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAkB,OAAO;AACzC,SAAQC,iBAAiB,EAAEC,oBAAoB,EAAEC,WAAW,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASpF,SAASC,UAAUA,CAACC,IAAiB,EACrC;EAAAC,EAAA;EACC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IAE3B,IAAIC,QAAQ,GAAG,MAAMZ,oBAAoB,CAAC,CAAC;IAC3C,IAAIa,IAAI,GAAG,MAAMd,iBAAiB,CAACa,QAAQ,CAAC;IAC5C,IAAIH,QAAQ,GAAG,MAAMR,WAAW,CAACY,IAAI,CAACC,EAAE,EAAEP,IAAI,CAACQ,MAAM,CAAC;IACtD,OAAON,QAAQ;EAChB,CAAC;EACDO,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC,CAAC,CAAC;EACtB;EACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,CAAC;EACpB,MAAMQ,OAAO,GAAG;IAChBC,SAAS,EAAG,EAAE;IACdC,QAAQ,EAAG,EAAE;IACbC,MAAM,EAAG,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,GAAG,EAAE,EAAE;IACPC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACP,CAAC;EAEDX,IAAI,CAACY,IAAI,CAAGC,WAAW,IAAK;IAC3BA,WAAW,CAACC,GAAG,CAAGC,OAAa,IAAK;MACpCd,OAAO,CAACC,SAAS,CAACc,IAAI,CAACD,OAAO,CAACE,QAAQ,CAACC,cAAc,CAAC;IACvD,CAAC,CAAC;EACH,CAAC,CAAC;EACF,oBACCjC,OAAA,CAAAE,SAAA;IAAAgC,QAAA,EACC9B,IAAI,CAAC+B,OAAO,iBACbnC,OAAA;MAAAkC,QAAA,EAAK;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAEf,CAAC;AAEL;AAAClC,EAAA,CAxCQF,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA0CnB,eAAeA,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}