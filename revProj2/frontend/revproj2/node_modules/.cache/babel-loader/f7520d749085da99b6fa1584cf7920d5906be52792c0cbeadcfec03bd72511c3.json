{"ast":null,"code":"import axios from \"axios\";\nconst Token = localStorage.getItem('token');\nexport const sendPost = async formData => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url = \"http://localhost:8080/posts\";\n    await axios.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    console.log(\"Message sent successfully!\");\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n  }\n};\nexport const getPosts = async () => {\n  try {\n    const Token = localStorage.getItem('token');\n    let result = await fetch(\"http://localhost:8080/posts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      credentials: 'include'\n    });\n    if (result && result.status === 200) {\n      console.log(\"Post Retrieved!\");\n      let post = await result.json();\n      console.log(post);\n      return post;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving message:\", error);\n  }\n};\nexport const usernameifAuthorized = async () => {\n  const Token = localStorage.getItem('token');\n  console.log(Token);\n  const myHeaders = new Headers();\n  myHeaders.append(\"Authorization\", \"Bearer \" + Token);\n  const requestOptions = {\n    method: \"GET\",\n    headers: myHeaders\n  };\n  fetch(\"http://localhost:8080/me\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.error(error));\n};\nexport const getTrackers = async (userId, goalId) => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url = `http://localhost:8080/Tracker/${userId}/${goalId}`;\n    let result = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result && result.status == 200) {\n      console.log(\"Trackers received\");\n      console.log(result.data);\n      return result.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving trackers: \", error);\n  }\n};\nexport const getUserByUsername = async username => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url1 = `http://localhost:8080/username/${username}`;\n    let result1 = await axios.get(url1, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result1 && result1.status === 200) {\n      console.log(\"User acquired\");\n      console.log(result1.data);\n      return result1.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving user: \", error);\n  }\n};\nexport const getGoalbyUserId = async userId => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url2 = `http://localhost:8080/goalUser/${userId}`;\n    let result2 = await axios.get(url2, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result2 && result2.status === 200) {\n      console.log(\"Goal acquired\");\n      console.log(result2.data);\n      return result2.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving goal: \", error);\n  }\n};","map":{"version":3,"names":["axios","Token","localStorage","getItem","sendPost","formData","url","post","headers","Authorization","withCredentials","console","log","error","getPosts","result","fetch","credentials","status","json","Error","usernameifAuthorized","myHeaders","Headers","append","requestOptions","method","then","response","text","catch","getTrackers","userId","goalId","get","data","getUserByUsername","username","url1","result1","getGoalbyUserId","url2","result2"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/API/Axios.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Token = localStorage.getItem('token');\r\n\r\nexport const sendPost = async (formData : FormData) => {\r\n    try {\r\n\r\n\tconst Token = localStorage.getItem('token');\r\n        const url = \"http://localhost:8080/posts\";\r\n\r\n        await axios.post(url, formData, {\r\n            headers: { \r\n\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n            },\r\n\t    withCredentials: true\r\n        });\r\n        console.log(\"Message sent successfully!\");\r\n    } \r\n    catch (error : any) {\r\n        console.error(\"Error sending message:\", error);\r\n    }\r\n};\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n\t\r\n\tconst Token = localStorage.getItem('token');\r\n\r\n        let result = await fetch(\"http://localhost:8080/posts\", {\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization:`Bearer ${Token}`\r\n\t\t},\r\n\t\tcredentials : 'include'\r\n\t});\r\n        if(result && result.status === 200)\r\n        {\r\n            console.log(\"Post Retrieved!\");\r\n            let post = await result.json();\r\n\t    console.log(post);\r\n\t    return post;\r\n\t    \r\n        }\r\n        else{\r\n            throw new Error;\r\n        }\r\n        \r\n    } catch (error : any) {\r\n        console.error(\"Error retrieving message:\", error);\r\n    }\r\n}\r\n\r\nexport const usernameifAuthorized = async () => {\r\n\t\r\n\tconst Token = localStorage.getItem('token');\r\n\tconsole.log(Token);\r\n\t\r\n\tconst myHeaders = new Headers();\r\n\tmyHeaders.append(\"Authorization\", \"Bearer \" + Token);\r\n\t\r\n\tconst requestOptions = {\r\n\t\t  method: \"GET\",\r\n\t\t    headers: myHeaders,\r\n\t};\r\n\r\n\tfetch(\"http://localhost:8080/me\", requestOptions)\r\n\t  .then((response) => response.text())\r\n\t    .then((result) => console.log(result))\r\n\t      .catch((error) => console.error(error));\r\n\t\r\n}\r\n\r\nexport const getTrackers = async (userId: number, goalId: number) => {\r\n\ttry {\r\n\t\r\n\t const Token = localStorage.getItem('token');\r\n\t const url =`http://localhost:8080/Tracker/${userId}/${goalId}`;\r\n\r\n\t let result = await axios.get(url, {\r\n\t\t headers: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n\t\t },\r\n\t\t withCredentials: true\r\n\r\n\t });\r\n\t if(result && result.status == 200)\r\n\t{\r\n\t   console.log(\"Trackers received\");\r\n\t   console.log(result.data);\r\n\t   return result.data;\r\n\t}\r\n\telse {\r\n\t   throw new Error;\r\n\t}\r\n\r\n\t}\r\n\tcatch(error : any) {\r\n\t\tconsole.error(\"Error retrieving trackers: \", error);\r\n\t}\r\n}\r\n\r\nexport const getUserByUsername = async (username : string) => {\r\n\r\n\ttry {\r\n\tconst Token = localStorage.getItem('token');\r\n\tconst url1= `http://localhost:8080/username/${username}`;\r\n\t\r\n\tlet result1 = await axios.get(url1, {\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization:`Bearer ${Token}`\r\n\t\t},\r\n\t\twithCredentials: true\r\n\t});\r\n\tif(result1 && result1.status === 200)\r\n\t{\r\n\t\tconsole.log(\"User acquired\")\r\n\t\tconsole.log(result1.data);\r\n\t\treturn result1.data;\r\n\t}\r\n\telse {\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch(error : any) {\r\n\t\tconsole.error(\"Error retrieving user: \", error);\r\n\t}\r\n}\r\n\r\nexport const getGoalbyUserId = async(userId : number) => {\r\n\ttry {\r\n\t\r\n\tconst Token = localStorage.getItem('token');\r\n\tconst url2 = `http://localhost:8080/goalUser/${userId}`;\r\n\r\n\tlet result2 =  await axios.get(url2, {\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n\t\t},\r\n\t\twithCredentials: true\r\n\t});\r\n\tif(result2 && result2.status === 200)\r\n\t{\r\n\t\tconsole.log(\"Goal acquired\");\r\n\t\tconsole.log(result2.data);\r\n\t\treturn result2.data;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch(error: any) {\r\n\t\tconsole.error(\"Error retrieving goal: \", error);\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}