{"ast":null,"code":"import axios from \"axios\";\nconst Token = localStorage.getItem('token');\nconsole.log(Token);\nexport const sendPost = async formData => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url = \"http://localhost:8080/posts\";\n    await axios.post(url, formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    console.log(\"Message sent successfully!\");\n  } catch (error) {\n    console.error(\"Error sending message:\", error);\n  }\n};\nexport const getPosts = async () => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url = \"http://localhost:8080/posts/\";\n    let result = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      credentials: 'include'\n    });\n    if (result && result.status === 200) {\n      console.log(\"Post Retrieved!\");\n      let post = await result.json();\n      console.log(post);\n      return post;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving message:\", error);\n  }\n};\nexport const usernameifAuthorized = async () => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url = \"http://localhost:8080/me\";\n    let result = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result && result.status === 200) {\n      console.log(\"Authorized User\");\n      return result.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving username: \", error);\n  }\n};\nexport const getTrackers = async (userId, goalId) => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url = `http://localhost:8080/Tracker/${userId}/${goalId}`;\n    let result = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result && result.status == 200) {\n      console.log(\"Trackers received\");\n      console.log(result.data);\n      return result.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving trackers: \", error);\n  }\n};\nexport const getUserByUsername = async username => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url1 = `http://localhost:8080/username/${username}`;\n    let result1 = await axios.get(url1, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result1 && result1.status === 200) {\n      console.log(\"User acquired\");\n      console.log(result1.data);\n      return result1.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving user: \", error);\n  }\n};\nexport const getGoalbyUserId = async userId => {\n  try {\n    const Token = localStorage.getItem('token');\n    const url2 = `http://localhost:8080/goalUser/${userId}`;\n    let result2 = await axios.get(url2, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${Token}`\n      },\n      withCredentials: true\n    });\n    if (result2 && result2.status === 200) {\n      console.log(\"Goal acquired\");\n      console.log(result2.data);\n      return result2.data;\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.error(\"Error retrieving goal: \", error);\n  }\n};","map":{"version":3,"names":["axios","Token","localStorage","getItem","console","log","sendPost","formData","url","post","headers","Authorization","withCredentials","error","getPosts","result","fetch","credentials","status","json","Error","usernameifAuthorized","get","data","getTrackers","userId","goalId","getUserByUsername","username","url1","result1","getGoalbyUserId","url2","result2"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/API/Axios.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Token = localStorage.getItem('token');\r\nconsole.log(Token);\r\n\r\nexport const sendPost = async (formData : FormData) => {\r\n    try {\r\n\r\n\tconst Token = localStorage.getItem('token');\r\n        const url = \"http://localhost:8080/posts\";\r\n\r\n        await axios.post(url, formData, {\r\n            headers: { \r\n\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n            },\r\n\t    withCredentials: true\r\n        });\r\n        console.log(\"Message sent successfully!\");\r\n    } \r\n    catch (error : any) {\r\n        console.error(\"Error sending message:\", error);\r\n    }\r\n};\r\n\r\nexport const getPosts = async () => {\r\n    try {\r\n\t\r\n\tconst Token = localStorage.getItem('token');\r\n        const url = \"http://localhost:8080/posts/\";\r\n\r\n        let result = await fetch(url, {\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization:`Bearer ${Token}`\r\n\t\t},\r\n\t\tcredentials : 'include'\r\n\t});\r\n        if(result && result.status === 200)\r\n        {\r\n            console.log(\"Post Retrieved!\");\r\n            let post = await result.json();\r\n\t    console.log(post);\r\n\t    return post;\r\n\t    \r\n        }\r\n        else{\r\n            throw new Error;\r\n        }\r\n        \r\n    } catch (error : any) {\r\n        console.error(\"Error retrieving message:\", error);\r\n    }\r\n}\r\n\r\nexport const usernameifAuthorized = async () => {\r\n\ttry {\r\n\r\n\tconst Token = localStorage.getItem('token');\r\n\tconst url = \"http://localhost:8080/me\";\r\n\r\n\tlet result = await axios.get(url, {\r\n\t\theaders: {\r\n\t\t\"Content-Type\":\"application/json\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n\t\t},\r\n\t\twithCredentials: true\r\n\t});\r\n\r\n\tif(result && result.status === 200)\r\n\t{\r\n\t\tconsole.log(\"Authorized User\");\r\n\t\treturn result.data;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch (error: any) {\r\n\t\tconsole.error(\"Error retrieving username: \", error);\r\n\t}\r\n\t\r\n}\r\n\r\nexport const getTrackers = async (userId: number, goalId: number) => {\r\n\ttry {\r\n\t\r\n\t const Token = localStorage.getItem('token');\r\n\t const url =`http://localhost:8080/Tracker/${userId}/${goalId}`;\r\n\r\n\t let result = await axios.get(url, {\r\n\t\t headers: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n\t\t },\r\n\t\t withCredentials: true\r\n\r\n\t });\r\n\t if(result && result.status == 200)\r\n\t{\r\n\t   console.log(\"Trackers received\");\r\n\t   console.log(result.data);\r\n\t   return result.data;\r\n\t}\r\n\telse {\r\n\t   throw new Error;\r\n\t}\r\n\r\n\t}\r\n\tcatch(error : any) {\r\n\t\tconsole.error(\"Error retrieving trackers: \", error);\r\n\t}\r\n}\r\n\r\nexport const getUserByUsername = async (username : string) => {\r\n\r\n\ttry {\r\n\tconst Token = localStorage.getItem('token');\r\n\tconst url1= `http://localhost:8080/username/${username}`;\r\n\t\r\n\tlet result1 = await axios.get(url1, {\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization:`Bearer ${Token}`\r\n\t\t},\r\n\t\twithCredentials: true\r\n\t});\r\n\tif(result1 && result1.status === 200)\r\n\t{\r\n\t\tconsole.log(\"User acquired\")\r\n\t\tconsole.log(result1.data);\r\n\t\treturn result1.data;\r\n\t}\r\n\telse {\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch(error : any) {\r\n\t\tconsole.error(\"Error retrieving user: \", error);\r\n\t}\r\n}\r\n\r\nexport const getGoalbyUserId = async(userId : number) => {\r\n\ttry {\r\n\t\r\n\tconst Token = localStorage.getItem('token');\r\n\tconst url2 = `http://localhost:8080/goalUser/${userId}`;\r\n\r\n\tlet result2 =  await axios.get(url2, {\r\n\t\theaders: {\r\n\t\t\"Content-Type\": \"application/json\",\r\n\t\tAuthorization: `Bearer ${Token}`\r\n\t\t},\r\n\t\twithCredentials: true\r\n\t});\r\n\tif(result2 && result2.status === 200)\r\n\t{\r\n\t\tconsole.log(\"Goal acquired\");\r\n\t\tconsole.log(result2.data);\r\n\t\treturn result2.data;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tthrow new Error;\r\n\t}\r\n\t}\r\n\tcatch(error: any) {\r\n\t\tconsole.error(\"Error retrieving goal: \", error);\r\n\t}\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}