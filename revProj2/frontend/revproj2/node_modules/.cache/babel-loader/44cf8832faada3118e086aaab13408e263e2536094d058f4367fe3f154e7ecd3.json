{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotiViewer.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getUserByUsername, usernameifAuthorized, getTrackers } from '../../API/Axios';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotiViewer(prop) {\n  _s();\n  // Get Trackers for that Goal\n  const [trackers, setTrackers] = useState([]);\n  const getData = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let trackers = await getTrackers(user.id, prop.goalId);\n    return trackers;\n  };\n  console.log(getData());\n  // Separate the Data into Arrays for each Value Tracked::\n  let data = getData();\n  const datavis = {\n    trackDate: [],\n    burnedCal: [],\n    duration: [],\n    volume: [],\n    carb: [],\n    fat: [],\n    kal: [],\n    protein: [],\n    weight: [],\n    sleep: [],\n    water: []\n  };\n  data.then(trackerList => {\n    trackerList.map(tracker => {\n      datavis.trackDate.push(tracker.createdAt);\n      datavis.burnedCal.push(tracker.exercise.caloriesBurned);\n      datavis.duration.push(tracker.exercise.duration);\n      datavis.volume.push(tracker.exercise.volume);\n      datavis.carb.push(tracker.nutrition.carb);\n      datavis.fat.push(tracker.nutrition.fat);\n      datavis.kal.push(tracker.nutrition.kal);\n      datavis.protein.push(tracker.nutrition.protein);\n      datavis.weight.push(tracker.nutrition.weight);\n      datavis.sleep.push(tracker.sleep);\n      datavis.water.push(tracker.water);\n      console.log(tracker.exercise.caloriesBurned);\n    });\n    console.log(\"Tracker Data: \" + datavis);\n  });\n  const chartRefs = useRef({});\n  useEffect(() => {\n    Object.vlaues(chartRefs.current).forEach(chart => {\n      if (chart) {\n        chart.destory();\n      }\n    });\n  }, []);\n  const charts = Object.keys(datavis).filter(key => key != \"trackDate\").map(key => {\n    const chartData = {\n      labels: datavis.trackDate,\n      datasets: [{\n        label: key,\n        data: datavis[key],\n        fill: false\n      }]\n    };\n    const chartOptions = {\n      responsive: true,\n      scales: {\n        x: {\n          type: 'category'\n        },\n        y: {\n          type: 'linear'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions,\n        ref: ref => {\n          if (ref) {\n            chartRefs.current[key] = ref;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: prop.clicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: charts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n}\n_s(NotiViewer, \"ExgfWJRjLQgBiOR7x1CBsnPXjgM=\");\n_c = NotiViewer;\nexport default NotiViewer;\nvar _c;\n$RefreshReg$(_c, \"NotiViewer\");","map":{"version":3,"names":["useState","useEffect","getUserByUsername","usernameifAuthorized","getTrackers","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","NotiViewer","prop","_s","trackers","setTrackers","getData","username","user","id","goalId","console","log","data","datavis","trackDate","burnedCal","duration","volume","carb","fat","kal","protein","weight","sleep","water","then","trackerList","map","tracker","push","createdAt","exercise","caloriesBurned","nutrition","chartRefs","useRef","Object","vlaues","current","forEach","chart","destory","charts","keys","filter","key","chartData","labels","datasets","label","fill","chartOptions","responsive","scales","x","type","y","children","fileName","_jsxFileName","lineNumber","columnNumber","options","ref","clicked","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotiViewer.tsx"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport {getUserByUsername, usernameifAuthorized, getTrackers} from '../../API/Axios'\r\nimport {Tracker, Goal, Exercise, Nutrition} from './Inbox';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\n\r\ninterface viewerProp {\r\n\tgoalId : number;\r\n\tclicked : boolean;\r\n}\r\n\r\nfunction NotiViewer(prop : viewerProp)\r\n{\r\n\t// Get Trackers for that Goal\r\n\tconst [trackers, setTrackers] = useState([]);\r\n\r\n\tconst getData = async () => {\r\n\t\t\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet trackers = await getTrackers(user.id, prop.goalId);\r\n\t\treturn trackers;\r\n\t}\r\n\tconsole.log(getData());\r\n\t// Separate the Data into Arrays for each Value Tracked::\r\n\tlet data = getData();\r\n\tconst datavis : {\r\n\t[key : string] : number[] | Date[];\r\n\ttrackDate : Date[];\r\n\tburnedCal : number[];\r\n\tduration : number[];\r\n\tvolume : number[];\r\n\tcarb: number[];\r\n\tfat: number[];\t\r\n\tkal: number[];\r\n\tprotein: number[];\t\t\r\n\tweight: number[];\r\n\tsleep: number[];\r\n\twater: number[]\r\n\t} = {\r\n\t\ttrackDate : [],\r\n\t\tburnedCal:[],\r\n\t\tduration:[],\r\n\t\tvolume:[],\r\n\t\tcarb:[],\r\n\t\tfat:[],\r\n\t\tkal:[],\r\n\t\tprotein:[],\r\n\t\tweight:[],\r\n\t\tsleep:[],\r\n\t\twater:[]\r\n\t}\r\n\t\r\n\tdata.then( (trackerList : Object[]) => {\r\n\t\ttrackerList.map( (tracker : any) => {\r\n\t\tdatavis.trackDate.push(tracker.createdAt);\r\n\t\tdatavis.burnedCal.push(tracker.exercise.caloriesBurned);\r\n\t\tdatavis.duration.push(tracker.exercise.duration);\r\n\t\tdatavis.volume.push(tracker.exercise.volume);\r\n\t\tdatavis.carb.push(tracker.nutrition.carb);\r\n\t\tdatavis.fat.push(tracker.nutrition.fat);\r\n\t\tdatavis.kal.push(tracker.nutrition.kal);\r\n\t\tdatavis.protein.push(tracker.nutrition.protein);\r\n\t\tdatavis.weight.push(tracker.nutrition.weight);\r\n\t\tdatavis.sleep.push(tracker.sleep);\r\n\t\tdatavis.water.push(tracker.water);\r\n\t\tconsole.log(tracker.exercise.caloriesBurned);\r\n\t\t})\r\n\t\tconsole.log(\"Tracker Data: \" + datavis);\r\n\t})\r\n\r\n\tconst chartRefs = useRef < useRef<{[key: string]: ChartJS | null }>>({});\r\n\r\n\tuseEffect(() => {\r\n\t\tObject.vlaues(chartRefs.current).forEach((chart) => {\r\n\t\t\tif (chart) {\r\n\t\t\t\tchart.destory();\r\n\t\t\t}\r\n\t\t});\r\n\t\t},[])\r\n\r\n\tconst charts = Object.keys(datavis).filter((key)=> key != \"trackDate\").map((key) =>\r\n\t\t{\r\n\t\t\tconst chartData = {\r\n\t\t\t\tlabels:datavis.trackDate,\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\tlabel: key,\r\n\t\t\t\t\tdata: datavis[key],\r\n\t\t\t\t\tfill: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}\r\n\t\t\tconst chartOptions = {\r\n\t\t\t\tresponsive: true,\r\n\t\t\t\tscales : {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\ttype : 'category' as const\r\n\t\t\t\t\t},\r\n\t\t\t\t\ty: {\r\n\t\t\t\t\ttype : 'linear' as const\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div key = {key} >\r\n\t\t\t\t<h3>{key}</h3>\r\n\t\t\t\t<Line \r\n\t\t\t\tdata = {chartData}\r\n\t\t\t\toptions={chartOptions}\r\n\t\t\t\tref = {(ref) => {\r\n\t\t\t\t\tif (ref) {\r\n\t\t\t\t\t\tchartRefs.current[key] = ref;\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\r\n\treturn (\t\r\n\t\r\n\t\t<>\r\n\t\t{prop.clicked && <div>{charts}</div>}\t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default NotiViewer\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,iBAAiB,EAAEC,oBAAoB,EAAEC,WAAW,QAAO,iBAAiB;AAEpF,SAAQC,IAAI,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQrC,SAASC,UAAUA,CAACC,IAAiB,EACrC;EAAAC,EAAA;EACC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,OAAO,GAAG,MAAAA,CAAA,KAAY;IAE3B,IAAIC,QAAQ,GAAG,MAAMb,oBAAoB,CAAC,CAAC;IAC3C,IAAIc,IAAI,GAAG,MAAMf,iBAAiB,CAACc,QAAQ,CAAC;IAC5C,IAAIH,QAAQ,GAAG,MAAMT,WAAW,CAACa,IAAI,CAACC,EAAE,EAAEP,IAAI,CAACQ,MAAM,CAAC;IACtD,OAAON,QAAQ;EAChB,CAAC;EACDO,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC,CAAC,CAAC;EACtB;EACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,CAAC;EACpB,MAAMQ,OAaL,GAAG;IACHC,SAAS,EAAG,EAAE;IACdC,SAAS,EAAC,EAAE;IACZC,QAAQ,EAAC,EAAE;IACXC,MAAM,EAAC,EAAE;IACTC,IAAI,EAAC,EAAE;IACPC,GAAG,EAAC,EAAE;IACNC,GAAG,EAAC,EAAE;IACNC,OAAO,EAAC,EAAE;IACVC,MAAM,EAAC,EAAE;IACTC,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC;EACP,CAAC;EAEDZ,IAAI,CAACa,IAAI,CAAGC,WAAsB,IAAK;IACtCA,WAAW,CAACC,GAAG,CAAGC,OAAa,IAAK;MACpCf,OAAO,CAACC,SAAS,CAACe,IAAI,CAACD,OAAO,CAACE,SAAS,CAAC;MACzCjB,OAAO,CAACE,SAAS,CAACc,IAAI,CAACD,OAAO,CAACG,QAAQ,CAACC,cAAc,CAAC;MACvDnB,OAAO,CAACG,QAAQ,CAACa,IAAI,CAACD,OAAO,CAACG,QAAQ,CAACf,QAAQ,CAAC;MAChDH,OAAO,CAACI,MAAM,CAACY,IAAI,CAACD,OAAO,CAACG,QAAQ,CAACd,MAAM,CAAC;MAC5CJ,OAAO,CAACK,IAAI,CAACW,IAAI,CAACD,OAAO,CAACK,SAAS,CAACf,IAAI,CAAC;MACzCL,OAAO,CAACM,GAAG,CAACU,IAAI,CAACD,OAAO,CAACK,SAAS,CAACd,GAAG,CAAC;MACvCN,OAAO,CAACO,GAAG,CAACS,IAAI,CAACD,OAAO,CAACK,SAAS,CAACb,GAAG,CAAC;MACvCP,OAAO,CAACQ,OAAO,CAACQ,IAAI,CAACD,OAAO,CAACK,SAAS,CAACZ,OAAO,CAAC;MAC/CR,OAAO,CAACS,MAAM,CAACO,IAAI,CAACD,OAAO,CAACK,SAAS,CAACX,MAAM,CAAC;MAC7CT,OAAO,CAACU,KAAK,CAACM,IAAI,CAACD,OAAO,CAACL,KAAK,CAAC;MACjCV,OAAO,CAACW,KAAK,CAACK,IAAI,CAACD,OAAO,CAACJ,KAAK,CAAC;MACjCd,OAAO,CAACC,GAAG,CAACiB,OAAO,CAACG,QAAQ,CAACC,cAAc,CAAC;IAC5C,CAAC,CAAC;IACFtB,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGE,OAAO,CAAC;EACxC,CAAC,CAAC;EAEF,MAAMqB,SAAS,GAAGC,MAAM,CAA6C,CAAC,CAAC,CAAC;EAExE5C,SAAS,CAAC,MAAM;IACf6C,MAAM,CAACC,MAAM,CAACH,SAAS,CAACI,OAAO,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAK;MACnD,IAAIA,KAAK,EAAE;QACVA,KAAK,CAACC,OAAO,CAAC,CAAC;MAChB;IACD,CAAC,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGN,MAAM,CAACO,IAAI,CAAC9B,OAAO,CAAC,CAAC+B,MAAM,CAAEC,GAAG,IAAIA,GAAG,IAAI,WAAW,CAAC,CAAClB,GAAG,CAAEkB,GAAG,IAC9E;IACC,MAAMC,SAAS,GAAG;MACjBC,MAAM,EAAClC,OAAO,CAACC,SAAS;MACxBkC,QAAQ,EAAE,CACT;QACAC,KAAK,EAAEJ,GAAG;QACVjC,IAAI,EAAEC,OAAO,CAACgC,GAAG,CAAC;QAClBK,IAAI,EAAE;MACN,CAAC;IAEH,CAAC;IACD,MAAMC,YAAY,GAAG;MACpBC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAG;QACRC,CAAC,EAAE;UACHC,IAAI,EAAG;QACP,CAAC;QACDC,CAAC,EAAE;UACHD,IAAI,EAAG;QACP;MACD;IACD,CAAC;IACD,oBACC1D,OAAA;MAAA4D,QAAA,gBACA5D,OAAA;QAAA4D,QAAA,EAAKZ;MAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACdhE,OAAA,CAACF,IAAI;QACLiB,IAAI,EAAIkC,SAAU;QAClBgB,OAAO,EAAEX,YAAa;QACtBY,GAAG,EAAKA,GAAG,IAAK;UACf,IAAIA,GAAG,EAAE;YACR7B,SAAS,CAACI,OAAO,CAACO,GAAG,CAAC,GAAGkB,GAAG;UAC7B;QACD;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA,GAVUhB,GAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYV,CAAC;EAER,CAAC,CAAC;EAGH,oBAEChE,OAAA,CAAAE,SAAA;IAAA0D,QAAA,EACCxD,IAAI,CAAC+D,OAAO,iBAAInE,OAAA;MAAA4D,QAAA,EAAMf;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAClC,CAAC;AAEL;AAAC3D,EAAA,CArHQF,UAAU;AAAAiE,EAAA,GAAVjE,UAAU;AAuHnB,eAAeA,UAAU;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}