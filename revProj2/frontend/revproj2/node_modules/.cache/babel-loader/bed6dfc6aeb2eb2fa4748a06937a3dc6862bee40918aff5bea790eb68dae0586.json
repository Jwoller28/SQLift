{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\htham\\\\Documents\\\\Revature\\\\InfoSysTraining\\\\project_2_trackr\\\\revProj2\\\\frontend\\\\revproj2\\\\src\\\\Components\\\\Inbox\\\\NotificationList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getGoalsbyUserId, usernameifAuthorized, getUserByUsername } from '../../API/Axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n;\nfunction NotificationList() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const today = new Date();\n  let tempGoals = [];\n  const todayRes = new Date(today.getFullYear(), today.getMonth(), today.getDay());\n  const getGoalsBeforeToday = async () => {\n    let username = await usernameifAuthorized();\n    let user = await getUserByUsername(username);\n    let goalList = await getGoalsbyUserId(user.id);\n    return await goalList.filter(beforeDate);\n    function beforeDate(goal) {\n      let goalDate = new Date(goal.waterDate);\n      let diff = todayRes.getTime() - goalDate.getTime();\n      if (diff >= 0) {\n        return goal;\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(getGoalsBeforeDate());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: goals.map((goal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal ID : \", goal.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Goal Date : \", goal.waterDate.toString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n_s(NotificationList, \"unVZk6oTfEFOQZ6NvI8KtfburI8=\");\n_c = NotificationList;\nexport default NotificationList;\nvar _c;\n$RefreshReg$(_c, \"NotificationList\");","map":{"version":3,"names":["useEffect","useState","getGoalsbyUserId","usernameifAuthorized","getUserByUsername","jsxDEV","_jsxDEV","NotificationList","_s","goals","setGoals","today","Date","tempGoals","todayRes","getFullYear","getMonth","getDay","getGoalsBeforeToday","username","user","goalList","id","filter","beforeDate","goal","goalDate","waterDate","diff","getTime","console","log","getGoalsBeforeDate","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","toString","_c","$RefreshReg$"],"sources":["C:/Users/htham/Documents/Revature/InfoSysTraining/project_2_trackr/revProj2/frontend/revproj2/src/Components/Inbox/NotificationList.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {getGoalsbyUserId, usernameifAuthorized, getUserByUsername} from '../../API/Axios';\r\n\r\n\r\ninterface Exercise {\r\n\tduration : number;\r\n\tvolume : number;\r\n\tcalories : number;\r\n\tExerciseDate : Date;\r\n};\r\n\r\ninterface Nutrition {\r\n\tKal : number;\r\n\tfat : number;\r\n\tcarb : number;\r\n\tweight : number;\r\n\tprotein : number;\r\n\tNutritionDate : Date;\r\n};\r\n\r\ninterface Goal {\r\n\tid : number;\r\n\tuser_id : number;\r\n\tcreatedAt : Date;\r\n\tsleep : number;\r\n\twater : number;\r\n\tsleepDate : Date;\r\n\twaterDate : Date;\r\n\texercise : Exercise;\r\n\tnutrition : Nutrition;\r\n}\r\nfunction NotificationList()\r\n{\r\n\tconst [goals, setGoals] = useState<Goal[]>([]);\r\n\tconst today = new Date();\r\n\tlet tempGoals : Goal[] = [];\r\n\tconst todayRes = new Date(today.getFullYear(), today.getMonth(), today.getDay());\r\n\r\n\tconst getGoalsBeforeToday = async () => {\r\n\t\tlet username = await usernameifAuthorized();\r\n\t\tlet user = await getUserByUsername(username);\r\n\t\tlet goalList = await getGoalsbyUserId(user.id);\r\n\r\n\t\treturn await goalList.filter(beforeDate);\r\n\r\n\t\tfunction beforeDate (goal : Goal)\r\n\t\t{\r\n\t\t\tlet goalDate = new Date(goal.waterDate);\r\n\t\t\tlet diff = todayRes.getTime() - goalDate.getTime();\r\n\t\t\tif(diff >= 0)\r\n\t\t\t\t{\r\n\t\t\t\t\treturn goal;\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t\t\r\n\tuseEffect( () => {\r\n\t\tconsole.log(getGoalsBeforeDate())\r\n\t},[])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t{goals.map((goal : Goal, index : number) => (\r\n\t\t<div key = {index}>\r\n\t\t\t<h5> Goal ID : {goal.id} </h5>\r\n\t\t\t<h5> Goal Date : {(goal.waterDate).toString()} </h5>\r\n\t\t</div>\r\n\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default NotificationList;\r\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,gBAAgB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzF;AASA;AAaD,SAASC,gBAAgBA,CAAA,EACzB;EAAAC,EAAA;EACC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,IAAIC,SAAkB,GAAG,EAAE;EAC3B,MAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACD,KAAK,CAACI,WAAW,CAAC,CAAC,EAAEJ,KAAK,CAACK,QAAQ,CAAC,CAAC,EAAEL,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC;EAEhF,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAIC,QAAQ,GAAG,MAAMhB,oBAAoB,CAAC,CAAC;IAC3C,IAAIiB,IAAI,GAAG,MAAMhB,iBAAiB,CAACe,QAAQ,CAAC;IAC5C,IAAIE,QAAQ,GAAG,MAAMnB,gBAAgB,CAACkB,IAAI,CAACE,EAAE,CAAC;IAE9C,OAAO,MAAMD,QAAQ,CAACE,MAAM,CAACC,UAAU,CAAC;IAExC,SAASA,UAAUA,CAAEC,IAAW,EAChC;MACC,IAAIC,QAAQ,GAAG,IAAId,IAAI,CAACa,IAAI,CAACE,SAAS,CAAC;MACvC,IAAIC,IAAI,GAAGd,QAAQ,CAACe,OAAO,CAAC,CAAC,GAAGH,QAAQ,CAACG,OAAO,CAAC,CAAC;MAClD,IAAGD,IAAI,IAAI,CAAC,EACX;QACC,OAAOH,IAAI;MACZ;IACF;EAED,CAAC;EAEDzB,SAAS,CAAE,MAAM;IAChB8B,OAAO,CAACC,GAAG,CAACC,kBAAkB,CAAC,CAAC,CAAC;EAClC,CAAC,EAAC,EAAE,CAAC;EAEL,oBACC1B,OAAA;IAAA2B,QAAA,EACCxB,KAAK,CAACyB,GAAG,CAAC,CAACT,IAAW,EAAEU,KAAc,kBACvC7B,OAAA;MAAA2B,QAAA,gBACC3B,OAAA;QAAA2B,QAAA,GAAI,aAAW,EAACR,IAAI,CAACH,EAAE,EAAC,GAAC;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BjC,OAAA;QAAA2B,QAAA,GAAI,eAAa,EAAER,IAAI,CAACE,SAAS,CAAEa,QAAQ,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFzCJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAAC/B,EAAA,CAxCQD,gBAAgB;AAAAkC,EAAA,GAAhBlC,gBAAgB;AAyCzB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}